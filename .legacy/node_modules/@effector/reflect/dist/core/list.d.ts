import { FC, Key } from 'react';
import { Store } from 'effector';
import { BindByProps, PropsByBind, ReflectCreatorContext, View, Hooks } from './types';
declare type ReflectListConfig<Props, Item, Bind> = {
    view: View<Props>;
    source: Store<Item[]>;
    bind: Bind;
    hooks?: Hooks;
    getKey?: (item: Item) => Key;
    mapItem: {
        [P in keyof PropsByBind<Props, Bind>]: (item: Item, index: number) => PropsByBind<Props, Bind>[P];
    };
};
export declare function listFactory(context: ReflectCreatorContext): <Item, Props, Bind extends BindByProps<Props> = BindByProps<Props>>(config: ReflectListConfig<Props, Item, Bind>) => FC;
export {};
