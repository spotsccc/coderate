{"version":3,"file":"inspector.js","sources":["../src/inspector.ts","../src/lib.ts"],"sourcesContent":["import { createInspector as create } from 'effector-inspector';\nimport { LOGGER_DOMAIN_NAME } from './lib';\n\nlet initialized = false;\n\nexport function createInspector(): void {\n  if (initialized) return;\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    create({ visible: false, trimDomain: LOGGER_DOMAIN_NAME });\n    initialized = true;\n  }\n}\n\ncreateInspector();\n","import {\n  createNode,\n  is,\n  step,\n  Domain,\n  Scope,\n  CompositeName,\n  Unit, Node,\n} from 'effector';\n\nexport const LOGGER_DOMAIN_NAME = '@effector-logger';\n\nexport function createName(composite: CompositeName): string {\n  return composite.path.filter((name) => name !== LOGGER_DOMAIN_NAME).join('/');\n}\n\nexport function getPath(unit: Unit<any>): string {\n  return (unit as any).defaultConfig?.loc?.file ?? ' ';\n}\n\nfunction watchDomain(\n  unit: Unit<any>,\n  domain: Domain,\n  fn: (payload: any) => any,\n): void {\n  if (is.store(unit)) {\n    fn(unit.getState());\n  }\n  const watchUnit = is.store(unit) ? unit.updates : unit;\n  (watchUnit as any).watch(fn);\n}\n\nfunction watchScope(\n  unit: Unit<any>,\n  scope: Scope,\n  fn: (payload: any) => any,\n): void {\n  if (is.store(unit)) {\n    fn(scope.getState(unit));\n  }\n  const node = createNode({\n    node: [step.run({ fn })]\n  });\n  const watchUnit = is.store(unit) ? unit.updates : unit;\n  const id = (watchUnit as any).graphite.id;\n  const links: Node[] = ((scope as any).additionalLinks[id] =\n    (scope as any).additionalLinks[id] || []);\n  links.push(node);\n}\n\nexport function watch(\n  unit: Unit<any>,\n  source: Domain | Scope,\n  fn: (payload: any) => any,\n): void {\n  if (is.domain(source)) {\n    watchDomain(unit, source, fn);\n  } else {\n    watchScope(unit, source, fn);\n  }\n}\n"],"names":["initialized","createInspector","window","document","create","visible","trimDomain"],"mappings":"4HAGA,IAAIA,GAAc,WAEFC,IACVD,GACkB,oBAAXE,aAAqD,IAApBA,OAAOC,WACjDC,kBAAO,CAAEC,SAAS,EAAOC,WCEK,qBDD9BN,GAAc,GAIlBC"}