{"version":3,"sources":["effector/collection.ts","effector/throw.ts","effector/region.ts","effector/createNode.ts","effector/tag.ts","effector/kernel.ts","effector/naming.ts","effector/config.ts","effector/template.ts","effector/createUnit.ts","effector/combine.ts","effector/defer.ts","effector/createEffect.ts","effector/attach.ts","effector/createApi.ts","effector/createDomain.ts","effector/fromObservable.ts","effector/merge.ts","effector/sample.ts","effector/guard.ts","effector/restore.ts","effector/split.ts","effector/fork/allSettled.ts","effector/fork/util.ts","effector/fork/fork.ts","effector/fork/createScope.ts","effector/fork/hydrate.ts","effector/fork/scopeBind.ts","effector/fork/serialize.ts","effector/observable.ts","effector/validate.ts","effector/is.ts","effector/id.ts","effector/step.ts","effector/stateRef.ts","effector/caller.ts","effector/getter.ts","effector/own.ts","effector/clearNode.ts","effector/subscription.ts","effector/forward.ts","effector/watch.ts","../node_modules/process/browser.js","forest/method/val.ts","forest/plan/index.ts","forest/platform/env.ts","forest/bindings.ts","forest/template.ts","forest/search.ts","forest/assert.ts","forest/mountChild.ts","forest/mutualSample.ts","forest/forIn.ts","forest/method/handler.ts","forest/method/spec.ts","forest/method/h.ts","forest/method/using.ts","forest/iterateChildLeafs.ts","forest/unmount.ts","forest/method/remap.ts","forest/method/list.ts","forest/method/node.ts","forest/method/route.ts","forest/method/variant.ts","forest/method/rec.ts","forest/method/tree.ts","forest/method/block.ts","forest/wordsArray.ts","forest/method/text.ts","forest/platform/now.ts","forest/platform/mark.ts","forest/platform/raf.ts","forest/templateHandlers.ts","forest/mountFn.ts","../src/Enum.js","../src/Utility.js","../src/Tokenizer.js","../src/Parser.js","../src/Prefixer.js","../src/Serializer.js","../src/Middleware.js","webpack:///webpack/bootstrap","webpack:///external \"forest\"","webpack:///external \"stylis\"","webpack:///external \"effector\"","webpack:///src/elements.ts","webpack:///src/index.ts","../src/components.ts","../src/setting.ts","../src/tabs.ts","../src/object-view.ts","../src/trim-domain.ts","../src/logs.ts","../src/stores.ts","../src/events.ts","../src/effects.ts","../src/files.ts","../src/view.ts","../src/index.ts","another.ts","index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["forIn","obj","cb","key","forEach","list","fn","assert","condition","message","Error","withRegion","unit","regionStack","parent","value","template","getMeta","readTemplate","sidRoot","getParent","createNode","node","from","source","to","target","child","scope","meta","family","familyRaw","type","regional","sources","arrifyNodes","links","owners","seq","item","add","result","id","nextNodeID","next","link","getOwners","owner","getLinks","own","getValue","launch","payload","upsert","pageForLaunch","currentPage","stackForLaunch","forkPageForLaunch","forkPage","params","defer","page","getForkPage","Array","isArray","i","length","pushFirstHeapItem","getGraph","isRoot","stop","skip","reg","lastStartedState","isWatch","idx","stack","hasPageReg","hasScopeReg","local","fail","stepn","step","order","priority","barrierID","fullID","barriers","has","pushHeap","delete","data","STACK","store","pageForRef","getPageForRef","initRefInScope","softRead","undefined","readRef","getPageRef","current","computationResult","safe","tryRun","filter","finalValue","nextNode","fxCount","storeChange","additionalLinks","kernelLoop","deleteMin","unitObjectName","objOrArr","method","name","comma","is","getCompostite","fullName","toString","setStoreName","rawName","shortName","Object","assign","createName","path","composite","concat","processArgsToConfig","args","singleArgument","rawConfig","assertObject","and","or","applyTemplate","handlers","createEvent","nameOrConfig","maybeConfig","event","deprecate","oldPage","setCurrentPage","create","graphite","initUnit","watch","watchUnit","map","deriveEvent","MAP","compute","callStack","filterMap","calc","isVoid","prepend","contramapped","createLinkNode","applyParentHook","createStore","defaultState","props","plainState","createStateRef","updates","createNamedEvent","plainStateId","subscribers","Map","stateRef","getState","reachedPage","targetRef","setState","state","reset","units","on","nodeSet","assertNodeSet","trigger","off","getSubscribers","set","createSubscription","updateStore","callARegStack","currentSubscription","get","firstState","config","lastResult","isObject","storeState","innerStore","derived","linkNode","callStackAReg","addRefOp","getStoreState","noInit","eventOrFn","subscription","isFunction","updateFilter","defaultConfig","upd","_","b","read","a","mov","sid","setMeta","combine","handler","stores","structStoreShape","shapeReady","noArraySpread","rawHandler","slice","storeCombination","createStoreObject","createDefer","req","Promise","rs","rj","catch","err","createEffect","instance","kind","use","runner","getCurrent","anyway","finally","done","named","status","error","doneData","failData","handlerId","getType","scope_","handler_","onResolve","onSettled","onReject","runFn","ok","then","op","fx","savedFork","setForkPage","inFlight","x","pending","amount","attach","injected","effect","mapParams","attached","runnerSteps","runnerFnStep","computedParams","sourceData","isEffectHandler","splice","createApi","setters","metadata","createDomain","history","hooks","Event","Effect","Store","Domain","factory","tag","lowerCaseTag","toLowerCase","acc","Set","res","ownerSet","hook","fromObservable","observable","observableItem","observableSymbol","subscribe","disposer","complete","merge","events","validateSampleConfig","atLeastOneFieldExists","sampleConfigFields","field","fieldErrorMessage","sample","clock","batched","greedy","groupInputs","isUpward","sourceRef","hasSource","clockState","guard","METHOD","filterFn","filterIsUnit","restore","domain","split","targets","match","knownCases","cases","matchIsUnit","matchIsFunction","matchIsShape","__","splitterSeq","values","caseNames","keys","scopeTargets","String","launchCase","includes","lastValues","needBarrier","storeOrFn","updater","storeRef","caseName","allSettled","start","ctx","reject","parentFork","defers","launchUnits","launchParams","traverseStores","root","visit","normalizeValues","assertEach","fork","domainOrConfig","optiionalConfig","forkInFlightCounter","fxID","batch","resolve","storeStack","storeNode","sidIdMap","sidValuesMap","resultScope","cloneOf","valuesSidMap","hydrate","traverseTarget","needToAssign","normalizedValues","valuesSidList","getOwnPropertyNames","storeNodes","storeValues","scopeBind","savedForkPage","serialize","ignoredStores","ignore","onlyChanges","Symbol","removeItem","pos","indexOf","push","subject","suggestion","console","assertNodeSetItem","valueName","reason","idCount","nextUnitID","nextStepID","cmd","nextBarrierID","run","isEffect","toStack","samplerPriority","ref","before","graph","val","ownerUnit","_link","readSidRoot","withFactory","loc","flat","heap","ret","v","getPriority","r","l","queue","ix","first","last","size","bucket","t","newForkPage","newPage","isGetState","isKernelCall","refsMap","isFresh","compositeName","flattenConfig","part","removeFromNode","currentNode","targetNode","clearNodeNormalized","deep","isDomainUnit","pop","clearMap","clear","clearNode","effects","domains","unsubscribe","scopeFn","forward","opts","hookType","configA","configB","isDomain","unitId","thru","observer","nativeTemplate","mapped","caller","reader","needSpread","clone","stateNew","rawShape","storeStateRef","c","childRef","defaultShape","sidechain","process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","len","nextTick","arguments","Item","array","prototype","apply","title","env","argv","version","versions","noop","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","removeOpGroupFromQueue","group","cursor","prev","removeOpFromQueue","getOpQueue","activeChilds","forceSetOpValue","active","pushOpToQueue","rafID","raf","execQueue","beginMark","now","interrupted","quant","tree","hasPropsTasks","endMark","runOp","hasTreeTasks","hasDataTasks","onDrain","createOp","createOpQueue","onComplete","bind","createOpGroup","ops","createAsyncValue","onChange","onInit","change","init","terminate","stopAsyncValue","updateAsyncValue","escapeTag","replace","applyStaticOps","element","defs","defMap","isFalse","applyStyleVar","style","removeProperty","setProperty","applyStyle","applyDataAttr","dataset","applyAttr","checked","setAttribute","removeAttribute","applyText","textNode","text","replaceData","textContent","createTemplate","draft","isSvgRoot","namespace","isBlock","currentTemplate","templateID","plain","nameMap","pages","closure","childTemplates","upward","activeSpawns","count","stackTemplates","stackPages","currentStackPage","targetTemplate","loader","forkId","childSpawns","isRecTemplate","startsWith","validTarget","recID","parentPage","api","mount","deferredInit","prevTemplate","findRef","targetLeaf","currentLeaf","regRef","ensureLeafHasRef","leaf","addMapItems","record","spawn","parentLeaf","mountNode","svgRoot","leafData","opGroup","domSubtree","hydration","execRef","of","runWatchersFrom","spawnID","previousSpawn","leafOps","closureRef","findClosure","mountQueue","steps","shift","findParentDOMElement","block","findLastVisibleChildBlock","visible","visibleChild","lastChild","left","findPreviousVisibleSiblingBlock","sibling","parentFragment","index","findPreviousVisibleSibling","msg","assertClosure","currentActor","methodName","setInParentIndex","inParentIndex","childCount","warn","mountChildTemplates","parentBlockFragment","actor","mountChild","fragmentParentTypes","parentDomSubtree","routeBlock","initialized","pendingInit","document","createElementNS","createElement","staticSeq","stencil","cloneNode","elementBlock","appendChild","leafData_","needToCallNode","onMount","fns","childSpawn","remove","listBlock","records","pendingUpdate","recBlock","recItemBlock","visibleSibling","after","mutualSample","onState","options","passive","capture","prevent","domConfig","spec","itemVisible","attr","firstIndex","escaped","styleVar","handlerDef","ɔ","createPropsOp","initCtx","opID","opsAmount","propertyMapToOpDef","installTextNode","childIndex","parentBlock","textBlock","siblingBlock","createTextNode","nextSibling","parentElement","firstChild","processStoreRef","templ","h","hasCb","hasOpts","parentNS","ns","xmlns","elementTemplate","domElementCreated","opsMap","for","foundElement","nodeName","emptyText","onMountSync","propertyOperationBinding","immediate","syncOperations","some","readElement","handlerTemplate","handlerPageFound","addEventListener","preventDefault","stopPropagation","visibleOp","getDefaultEnv","using","onRoot","namespaceURI","tagName","usingTemplate","mountFn","usingBlock","rootLeaf","iterateChildLeafs","childs","changeChildLeafsVisible","childLeafIterator","update","log","unmountChildLeafsNoEvent","unmountLeafTree","unmountOwnSpawn","halt","listItemBlock","leftBlock","rightBlock","right","remap","shape","projectedKey","maybeFn","fields","getID","listItemTemplate","itemUpdater","mountAndVisible","onVisibleChanges","childInitialized","listItem","mappedUpdates","mountData","parentNodeUpdateSpawn","input","listData","curLeaf","skipNode","fill","resultRecords","asyncValue","listDraft","leftSibling","route","routeTemplate","visibleFn","routeItemTemplate","onValueUpdate","routeItem","onVisibleChange","pendingInitWithData","variant","keyReader","defaultCase","nonDefaultCases","rec","fnOrConfig","recTemplate","childField","treeRec","childList","blockTemplate","blockItemDraft","itemOf","blockItem","createWordsArray","words","every","arg","join","performance","hrtime","hr","Date","measures","bucketStack","startMeasure","label","calls","time","childTime","pendingStart","endMeasure","mark","measure","clearMarks","clearMeasures","requestAnimationFrame","arr","storeBase","storeOnMap","fromRef","unshift","storeMap","storeWatch","eventPrepend","combineBase","combineField","splitBase","splitMatchStore","sampleStoreSource","sampleNonStoreSource","sampleTarget","sampleSourceLoader","sampleSourceUpward","MS","MOZ","WEBKIT","COMMENT","RULESET","DECLARATION","PAGE","MEDIA","IMPORT","CHARSET","VIEWPORT","SUPPORTS","DOCUMENT","NAMESPACE","KEYFRAMES","FONT_FACE","COUNTER_STYLE","FONT_FEATURE_VALUES","abs","Math","fromCharCode","hash","charat","trim","pattern","exec","replacement","indexof","search","charCodeAt","substr","begin","end","strlen","sizeof","append","callback","line","column","position","character","characters","children","return","copy","char","peek","caret","token","alloc","dealloc","delimit","delimiter","tokenize","tokenizer","whitespace","identifier","commenter","compile","parse","rule","rules","rulesets","pseudo","points","declarations","offset","atrule","property","previous","variable","scanning","ampersand","reference","comment","declaration","ruleset","post","j","k","y","z","prefix","output","stringify","middleware","collection","rulesheet","prefixer","installedModules","__webpack_require__","moduleId","modules","m","d","getter","o","defineProperty","enumerable","toStringTag","mode","__esModule","n","object","hasOwnProperty","p","s","require","addStyle","$styles","StyledRoot","styles","make","styledId","fabric","content","interpolations","strings","interps","TypeError","STYLED_ID","Component","classList","styled","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","innerHTML","getParents","parents","dep","Function","deps","cached","cache"],"mappings":"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","file":"usage.77de5100.js","sourceRoot":"../usage","sourcesContent":["export function forIn<T>(\n  obj: Record<string, T>,\n  cb: (value: T, key: string) => void,\n) {\n  for (const key in obj) {\n    cb(obj[key], key)\n  }\n}\n\nexport const includes = (list: any[], item: any) => list.includes(item)\n\nexport const removeItem = (list: any[], item: any) => {\n  const pos = list.indexOf(item)\n  if (pos !== -1) {\n    list.splice(pos, 1)\n  }\n}\n\nexport const add = <T>(list: T[], item: T) => list.push(item)\n\nexport function forEach<T>(\n  list: T[],\n  fn: (item: T, index: number, list: T[]) => void,\n): void\nexport function forEach<K, T>(\n  list: Map<K, T>,\n  fn: (item: T, key: K) => void,\n): void\nexport function forEach<T>(list: Set<T>, fn: (item: T) => void): void\nexport function forEach(list: any, fn: Function) {\n  list.forEach(fn)\n}\n","export function assert(condition: any, message: string): asserts condition {\n  if (!condition) throw Error(message)\n}\n\nexport const deprecate = (\n  condition: any,\n  subject: string,\n  suggestion: string,\n) =>\n  !condition &&\n  console.error(`${subject} is deprecated, use ${suggestion} instead`)\n","import {getParent, getMeta} from './getter'\nimport {createNode} from './createNode'\nimport type {Template} from '../forest/index.h'\n\ntype RegionStack = {\n  parent: RegionStack | null\n  value: any\n  template: any\n  sidRoot?: string\n}\n\nexport let regionStack: RegionStack | null = null\n\nexport const readTemplate = (): Template | null =>\n  regionStack && regionStack.template\nexport const readSidRoot = (sid?: string | null) => {\n  if (sid && regionStack && regionStack.sidRoot)\n    sid = `${regionStack.sidRoot}|${sid}`\n  return sid\n}\n\nexport function withRegion(unit: any, cb: () => void) {\n  regionStack = {\n    parent: regionStack,\n    value: unit,\n    template: getMeta(unit, 'template') || readTemplate(),\n    sidRoot: getMeta(unit, 'sidRoot') || (regionStack && regionStack.sidRoot),\n  }\n  try {\n    return cb()\n  } finally {\n    regionStack = getParent(regionStack)\n  }\n}\n\nexport const withFactory = ({\n  sid,\n  name,\n  loc,\n  method,\n  fn,\n}: {\n  sid: string\n  name?: string\n  loc?: any\n  method?: string\n  fn: () => any\n}) => {\n  const sidNode = createNode({\n    meta: {sidRoot: readSidRoot(sid), name, loc, method},\n  })\n  return withRegion(sidNode, fn)\n}\n","import type {Node, NodeUnit, Cmd} from './index.h'\nimport {getGraph, getOwners, getLinks, getValue} from './getter'\nimport {nextNodeID} from './id'\nimport {CROSSLINK} from './tag'\nimport {regionStack} from './region'\nimport {own} from './own'\nimport {add, forEach} from './collection'\n\nconst arrifyNodes = (\n  list: NodeUnit | Array<NodeUnit | NodeUnit[]> = [],\n): Node[] => (Array.isArray(list) ? list : [list]).flat().map(getGraph)\n\nexport function createNode({\n  node = [],\n  from,\n  source,\n  parent = from || source,\n  to,\n  target,\n  child = to || target,\n  scope = {},\n  meta = {},\n  family: familyRaw = {type: 'regular'},\n  regional,\n}: {\n  node?: Array<Cmd | false | void | null>\n  from?: NodeUnit | NodeUnit[]\n  source?: NodeUnit | NodeUnit[]\n  parent?: NodeUnit | NodeUnit[]\n  to?: NodeUnit | NodeUnit[]\n  target?: NodeUnit | NodeUnit[]\n  child?: NodeUnit | NodeUnit[]\n  scope?: {[name: string]: any}\n  meta?: {[name: string]: any}\n  family?: {\n    type?: 'regular' | 'crosslink' | 'domain'\n    links?: NodeUnit | NodeUnit[]\n    owners?: NodeUnit | Array<NodeUnit | NodeUnit[]>\n  }\n  regional?: boolean\n} = {}): Node {\n  const sources = arrifyNodes(parent)\n  const links = arrifyNodes(familyRaw.links)\n  const owners = arrifyNodes(familyRaw.owners)\n  const seq: Cmd[] = []\n  forEach(node, item => item && add(seq, item))\n  const result: Node = {\n    id: nextNodeID(),\n    seq,\n    next: arrifyNodes(child),\n    meta,\n    scope,\n    family: {\n      type: familyRaw.type || CROSSLINK,\n      links,\n      owners,\n    },\n  }\n  forEach(links, link => add(getOwners(link), result))\n  forEach(owners, owner => add(getLinks(owner), result))\n  forEach(sources, source => add(source.next, result))\n  if (regional && regionStack) {\n    own(getValue(regionStack), [result])\n  }\n  return result\n}\n","export const STORE = 'store'\nexport const EVENT = 'event'\nexport const EFFECT = 'effect'\nexport const DOMAIN = 'domain'\nexport const SCOPE = 'scope'\nexport const SAMPLER = 'sampler'\nexport const CROSSLINK = 'crosslink'\nexport const MAP = 'map'\nexport const STACK = 'stack'\nexport const BARRIER = 'barrier'\nexport const VALUE = 'value'\nexport const SAMPLE = 'sample'\nexport const FILTER = 'filter'\nexport const REG_A = 'a'\n","import type {Leaf} from '../forest/index.h'\n\nimport type {Node, NodeUnit, StateRef} from './index.h'\nimport {readRef} from './stateRef'\nimport {getForkPage, getGraph, getMeta, getParent, getValue} from './getter'\nimport {STORE, EFFECT, SAMPLER, STACK, BARRIER, VALUE, REG_A, MAP} from './tag'\nimport type {Scope} from './unit.h'\nimport {add, forEach} from './collection'\n\n/** Names of priority groups */\ntype PriorityTag = 'child' | 'pure' | 'read' | 'barrier' | 'sampler' | 'effect'\n\nexport type BarrierPriorityTag = 'read' | 'barrier' | 'sampler' | 'effect'\n\n/**\n * Position in the current branch,\n * including call stack, priority type\n * and index of next step in the executed Node\n */\ntype Layer = {\n  idx: number\n  stack: Stack\n  type: PriorityTag\n  id: number\n}\n\n/** Call stack */\nexport type Stack = {\n  value: any\n  a: any\n  b: any\n  c?: any\n  parent: Stack | null\n  node: Node\n  page: Leaf | null\n  scope?: Scope | null | void\n}\n\n/** Queue as linked list or skew heap */\ntype QueueItem = {\n  /** node value */\n  v: Layer\n  /** left node. always null in queue but used in skew heap */\n  l: QueueItem | null\n  /** right node */\n  r: QueueItem | null\n}\ntype QueueBucket = {\n  first: QueueItem | null\n  last: QueueItem | null\n  size: number\n}\n\n/** Dedicated local metadata */\ntype Local = {\n  fail: boolean\n  scope: {[key: string]: any}\n}\n\nlet heap: QueueItem | null = null\n\nconst merge = (a: QueueItem | null, b: QueueItem | null): QueueItem | null => {\n  if (!a) return b\n  if (!b) return a\n\n  let ret\n  if (\n    /**\n     * if both nodes has the same PriorityType\n     * and first node is created after second one\n     */\n    (a.v.type === b.v.type && a.v.id > b.v.id) ||\n    /**\n     * greater priority mean bucket of first node is executed later\n     * e.g  a: \"sampler\", b: \"barrier\"\n     */\n    getPriority(a.v.type) > getPriority(b.v.type)\n  ) {\n    ret = a\n    a = b\n    b = ret\n  }\n  ret = merge(a.r, b)\n  a.r = a.l\n  a.l = ret\n\n  return a\n}\n\n/** queue buckets for each PriorityType */\nconst queue: QueueBucket[] = []\nlet ix = 0\nwhile (ix < 6) {\n  /**\n   * although \"sampler\" and \"barrier\" are using heap instead of linked list,\n   * their buckets are still useful: they maintains size of heap queue\n   */\n  add(queue, {first: null, last: null, size: 0})\n  ix += 1\n}\n\nconst deleteMin = () => {\n  for (let i = 0; i < 6; i++) {\n    const list = queue[i]\n    if (list.size > 0) {\n      /**\n       * bucket 3 is for \"barrier\" PriorityType (used in combine)\n       * bucket 4 is for \"sampler\" PriorityType (used in sample and guard)\n       */\n      if (i === 3 || i === 4) {\n        list.size -= 1\n        const value = heap!.v\n        heap = merge(heap!.l, heap!.r)\n        return value\n      }\n      if (list.size === 1) {\n        list.last = null\n      }\n      const item = list.first\n      list.first = item!.r\n      list.size -= 1\n      return item!.v\n    }\n  }\n}\nconst pushFirstHeapItem = (\n  type: PriorityTag,\n  page: Leaf | null,\n  node: Node,\n  parent: Stack | null,\n  value: any,\n  scope?: Scope | null | void,\n) =>\n  pushHeap(\n    0,\n    {\n      a: null,\n      b: null,\n      node,\n      parent,\n      value,\n      page,\n      scope,\n    },\n    type,\n  )\nconst pushHeap = (\n  idx: number,\n  stack: Stack,\n  type: PriorityTag,\n  id: number = 0,\n) => {\n  const priority = getPriority(type)\n  const bucket: QueueBucket = queue[priority]\n  const item: QueueItem = {\n    v: {\n      idx,\n      stack,\n      type,\n      id,\n    },\n    l: null,\n    r: null,\n  }\n  /**\n   * bucket 3 is for \"barrier\" PriorityType (used in combine)\n   * bucket 4 is for \"sampler\" PriorityType (used in sample and guard)\n   */\n  if (priority === 3 || priority === 4) {\n    heap = merge(heap, item)\n  } else {\n    if (bucket.size === 0) {\n      bucket.first = item\n    } else {\n      bucket.last!.r = item\n    }\n    bucket.last = item\n  }\n  bucket.size += 1\n}\n\nconst getPriority = (t: PriorityTag) => {\n  switch (t) {\n    case 'child':\n      return 0\n    case 'pure':\n      return 1\n    case 'read':\n      return 2\n    case BARRIER:\n      return 3\n    case SAMPLER:\n      return 4\n    case EFFECT:\n      return 5\n    default:\n      return -1\n  }\n}\n\nconst barriers = new Set<string | number>()\n\nlet isRoot = true\nexport let isWatch = false\nexport let currentPage: Leaf | null = null\nexport let forkPage: Scope | void | null\nexport const setForkPage = (newForkPage: Scope) => {\n  forkPage = newForkPage\n}\nexport const setCurrentPage = (newPage: Leaf | null) => {\n  currentPage = newPage\n}\n\nconst getPageForRef = (page: Leaf | null, id: string) => {\n  if (page) {\n    while (page && !page.reg[id]) {\n      page = getParent(page)\n    }\n    if (page) return page\n  }\n  return null\n}\nexport const getPageRef = (\n  page: Leaf | null,\n  forkPage: Scope | null | void,\n  node: Node | null,\n  ref: StateRef,\n  isGetState?: boolean,\n) => {\n  const pageForRef = getPageForRef(page, ref.id)\n  if (pageForRef) return pageForRef.reg[ref.id]\n  if (forkPage) {\n    initRefInScope(forkPage!, ref, isGetState)\n    return forkPage.reg[ref.id]\n  }\n  return ref\n}\n\nexport function launch(config: {\n  target: NodeUnit | NodeUnit[]\n  params?: any\n  defer?: boolean\n  page?: Leaf | void | null\n  scope?: Scope | void\n  stack?: Stack | void\n}): void\nexport function launch(unit: NodeUnit, payload?: any, upsert?: boolean): void\nexport function launch(unit: any, payload?: any, upsert?: boolean) {\n  let pageForLaunch = currentPage\n  let stackForLaunch = null\n  let forkPageForLaunch = forkPage\n  if (unit.target) {\n    payload = unit.params\n    upsert = unit.defer\n    pageForLaunch = 'page' in unit ? unit.page : pageForLaunch\n    if (unit[STACK]) stackForLaunch = unit[STACK]\n    forkPageForLaunch = getForkPage(unit) || forkPageForLaunch\n    unit = unit.target\n  }\n  if (forkPageForLaunch && forkPage && forkPageForLaunch !== forkPage) {\n    forkPage = null\n  }\n  if (Array.isArray(unit)) {\n    for (let i = 0; i < unit.length; i++) {\n      pushFirstHeapItem(\n        'pure',\n        pageForLaunch,\n        getGraph(unit[i]),\n        stackForLaunch,\n        payload[i],\n        forkPageForLaunch,\n      )\n    }\n  } else {\n    pushFirstHeapItem(\n      'pure',\n      pageForLaunch,\n      getGraph(unit),\n      stackForLaunch,\n      payload,\n      forkPageForLaunch,\n    )\n  }\n  if (upsert && !isRoot) return\n  /** main execution code */\n  const lastStartedState = {isRoot, currentPage, scope: forkPage, isWatch}\n  isRoot = false\n  let stop: boolean\n  let skip: boolean\n  let node: Node\n  let value: Layer | undefined\n  let page: Leaf | null\n  let reg: Record<string, StateRef> | void\n  kernelLoop: while ((value = deleteMin())) {\n    const {idx, stack, type} = value\n    node = stack.node\n    currentPage = page = stack.page\n    forkPage = getForkPage(stack)\n    if (page) reg = page.reg\n    else if (forkPage) reg = forkPage.reg\n    // reg = (page ? page : forkPage ? forkPage : node).reg\n    const hasPageReg = !!page\n    const hasScopeReg = !!forkPage\n    const local: Local = {\n      fail: false,\n      scope: node.scope,\n    }\n    stop = skip = false\n    for (let stepn = idx; stepn < node.seq.length && !stop; stepn++) {\n      const step = node.seq[stepn]\n      if (step.order) {\n        const {priority, barrierID} = step.order\n        const id = barrierID\n          ? page\n            ? `${page.fullID}_${barrierID}`\n            : barrierID\n          : 0\n        if (stepn !== idx || type !== priority) {\n          if (barrierID) {\n            if (!barriers.has(id)) {\n              barriers.add(id)\n              pushHeap(stepn, stack, priority, barrierID)\n            }\n          } else {\n            pushHeap(stepn, stack, priority)\n          }\n          continue kernelLoop\n        }\n        barrierID && barriers.delete(id)\n      }\n      switch (step.type) {\n        case 'mov': {\n          const data = step.data\n          let value\n          //prettier-ignore\n          switch (data.from) {\n            case STACK: value = getValue(stack); break\n            case REG_A: /** fall-through case */\n            case 'b':\n              value = stack[data.from]\n              break\n            case VALUE: value = data.store; break\n            case STORE:\n              if (reg && !reg[data.store.id]) {\n                // if (!page.parent) {\n                if (hasPageReg) {\n                  const pageForRef = getPageForRef(page, data.store.id)\n                  stack.page = page = pageForRef\n                  if (pageForRef) {\n                    reg = pageForRef.reg\n                  } else if (hasScopeReg) {\n                    initRefInScope(forkPage!, data.store, false, true, data.softRead)\n                    reg = forkPage!.reg\n                  } else {\n                    reg = undefined //node.reg\n                  }\n                } else if (hasScopeReg) {\n                  /** StateRef in Scope.reg created only when needed */\n                  initRefInScope(forkPage!, data.store, false, true, data.softRead)\n                } else {\n                  // console.error('should not happen')\n                  /** StateRef should exists at least in Node itself, but it is not found */\n                }\n                // }\n              }\n              // value = getPageRef(page, forkPage, node, data.store.id).current\n              value = readRef(reg ? reg[data.store.id] || data.store : data.store)\n              break\n          }\n          //prettier-ignore\n          switch (data.to) {\n            case STACK: stack.value = value; break\n            case REG_A: /** fall-through case */\n            case 'b':\n              stack[data.to] = value\n              break\n            case STORE:\n              getPageRef(page, forkPage, node, data.target).current = value\n              break\n          }\n          break\n        }\n        case 'compute':\n          const data = step.data\n          if (data.fn) {\n            isWatch = getMeta(node, 'op') === 'watch'\n            const computationResult = data.safe\n              ? (0 as any, data.fn)(getValue(stack), local.scope, stack)\n              : tryRun(local, data.fn, stack)\n            if (data.filter) {\n              /**\n               * handled edge case: if step.fn will throw,\n               * tryRun will return null\n               * thereby forcing that branch to stop\n               */\n              skip = !computationResult\n            } else {\n              stack.value = computationResult\n            }\n            isWatch = lastStartedState.isWatch\n          }\n          break\n      }\n      stop = local.fail || skip\n    }\n    if (!stop) {\n      const finalValue = getValue(stack)\n      forEach(node.next, nextNode => {\n        pushFirstHeapItem(\n          'child',\n          page,\n          nextNode,\n          stack,\n          finalValue,\n          getForkPage(stack),\n        )\n      })\n      const forkPage = getForkPage(stack)\n      if (forkPage) {\n        if (getMeta(node, 'needFxCounter'))\n          pushFirstHeapItem(\n            'child',\n            page,\n            forkPage.fxCount,\n            stack,\n            finalValue,\n            forkPage,\n          )\n        if (getMeta(node, 'storeChange'))\n          pushFirstHeapItem(\n            'child',\n            page,\n            forkPage.storeChange,\n            stack,\n            finalValue,\n            forkPage,\n          )\n        const additionalLinks = forkPage.additionalLinks[node.id]\n        if (additionalLinks) {\n          forEach(additionalLinks, nextNode => {\n            pushFirstHeapItem(\n              'child',\n              page,\n              nextNode,\n              stack,\n              finalValue,\n              forkPage,\n            )\n          })\n        }\n      }\n    }\n  }\n  isRoot = lastStartedState.isRoot\n  currentPage = lastStartedState.currentPage\n  forkPage = getForkPage(lastStartedState)\n}\n\nexport const initRefInScope = (\n  scope: {\n    reg: Record<string, StateRef>\n    sidValuesMap: Record<string, any>\n    sidIdMap: Record<string, string>\n  },\n  sourceRef: StateRef,\n  isGetState?: boolean,\n  isKernelCall?: boolean,\n  softRead?: boolean,\n) => {\n  const refsMap = scope.reg\n  const sid = sourceRef.sid\n  if (refsMap[sourceRef.id]) return\n  const ref: StateRef = {\n    id: sourceRef.id,\n    current: sourceRef.current,\n  }\n\n  if (sid && sid in scope.sidValuesMap && !(sid in scope.sidIdMap)) {\n    ref.current = scope.sidValuesMap[sid]\n  } else {\n    if (sourceRef.before && !softRead) {\n      let isFresh = false\n      const needToAssign = isGetState || !sourceRef.noInit || isKernelCall\n      forEach(sourceRef.before, cmd => {\n        switch (cmd.type) {\n          case MAP: {\n            const from = cmd.from\n            if (from || cmd.fn) {\n              if (from) initRefInScope(scope, from, isGetState, isKernelCall)\n              const value = from && refsMap[from.id].current\n              if (needToAssign) {\n                ref.current = cmd.fn ? cmd.fn(value) : value\n              }\n            }\n            break\n          }\n          case 'field': {\n            if (!isFresh) {\n              isFresh = true\n              if (Array.isArray(ref.current)) {\n                ref.current = [...ref.current]\n              } else {\n                ref.current = {...ref.current}\n              }\n            }\n            initRefInScope(scope, cmd.from, isGetState, isKernelCall)\n            if (needToAssign) {\n              const from = refsMap[cmd.from.id]\n              ref.current[cmd.field] = refsMap[from.id].current\n            }\n            break\n          }\n          // case 'closure':\n          //   break\n        }\n      })\n    }\n  }\n  if (sid) scope.sidIdMap[sid] = sourceRef.id\n  refsMap[sourceRef.id] = ref\n}\n\n/** try catch for external functions */\nconst tryRun = (local: Local, fn: Function, stack: Stack) => {\n  try {\n    return fn(getValue(stack), local.scope, stack)\n  } catch (err) {\n    console.error(err)\n    local.fail = true\n  }\n}\n","import type {Store, Domain} from './unit.h'\nimport {is} from './is'\nimport {getParent} from './getter'\nimport {forIn} from './collection'\n\nconst getCompostite = (unit: any): CompositeName => unit.compositeName\n\nexport function unitObjectName(objOrArr: any, method: string = 'combine') {\n  let name = method + '('\n  let comma = ''\n  let i = 0\n  forIn(objOrArr, (unit: any) => {\n    /* inlined max object names constant */\n    if (i < 25) {\n      if (unit != null) {\n        name += comma\n        name += is.unit(unit) ? getCompostite(unit).fullName : unit.toString()\n      }\n      i += 1\n      comma = ', '\n    }\n  })\n  return name + ')'\n}\n\nexport function setStoreName<State>(store: Store<State>, rawName: string) {\n  store.shortName = rawName\n  Object.assign(getCompostite(store), createName(rawName, getParent(store)))\n}\n\nexport type CompositeName = {\n  shortName: string\n  fullName: string\n  path: string[]\n}\n\nexport function createName(name: string, parent?: Domain): CompositeName {\n  let path: string[]\n  let fullName\n  const shortName = name\n  if (!parent) {\n    path = name.length === 0 ? [] : [name]\n    fullName = name\n  } else {\n    const composite = getCompostite(parent)\n    if (name.length === 0) {\n      path = composite.path\n      fullName = composite.fullName\n    } else {\n      path = composite.path.concat([name])\n      fullName =\n        composite.fullName.length === 0\n          ? name\n          : '' + composite.fullName + '/' + name\n    }\n  }\n  return {shortName, fullName, path}\n}\n","import {forIn} from './collection'\nimport {assertObject, isObject, isVoid} from './is'\n\nexport function processArgsToConfig(\n  arg: any,\n  singleArgument: true,\n): [any, any | void]\nexport function processArgsToConfig(args: any[]): [any[], any | void]\nexport function processArgsToConfig(\n  args: any,\n  singleArgument?: boolean,\n): [any[], any | void] {\n  const rawConfig = singleArgument ? args : args[0]\n  assertObject(rawConfig)\n  let metadata = rawConfig.or\n  if (rawConfig.and) {\n    args = rawConfig.and\n  }\n  return [args, metadata]\n}\n\n/**\nprocessed fields:\n\n'name',\n'sid',\n'loc',\n'handler',\n'updateFilter',\n'parent',\n'serialize',\n'named',\n'derived',\n*/\nexport const flattenConfig = (part: any, config: any = {}) => {\n  if (isObject(part)) {\n    flattenConfig(part.or, config)\n    forIn(part, (value, field) => {\n      if (!isVoid(value) && field !== 'or' && field !== 'and') {\n        config[field] = value\n      }\n    })\n    flattenConfig(part.and, config)\n  }\n  return config\n}\n","import {readTemplate} from './region'\nimport type {Template, TemplateHandlers} from '../forest/index.h'\n\nexport function applyTemplate<K extends keyof TemplateHandlers>(\n  method: K,\n  ...args: Parameters<TemplateHandlers[K]> extends [Template, ...infer Args]\n    ? Args\n    : never\n): ReturnType<TemplateHandlers[K]> | void {\n  const template = readTemplate()\n  if (template) {\n    const fn: any = template.handlers[method]\n    if (fn) return fn(template, ...args)\n  }\n}\n","import {observableSymbol} from './observable'\n\nimport {\n  is,\n  isObject,\n  isFunction,\n  assertObject,\n  assertNodeSet,\n  isVoid,\n} from './is'\nimport type {Store, Event} from './unit.h'\n\nimport {calc, compute, filter, mov, read} from './step'\nimport {createStateRef, readRef, addRefOp} from './stateRef'\nimport {nextUnitID} from './id'\nimport {callStackAReg, callARegStack, callStack} from './caller'\nimport {own} from './own'\nimport {createNode} from './createNode'\nimport {\n  launch,\n  currentPage,\n  forkPage,\n  setCurrentPage,\n  initRefInScope,\n} from './kernel'\n\nimport type {Subscriber, Config} from './index.h'\nimport {createName} from './naming'\nimport {createLinkNode} from './forward'\nimport {watchUnit} from './watch'\nimport {createSubscription} from './subscription'\nimport {readTemplate, readSidRoot} from './region'\nimport {\n  getSubscribers,\n  getStoreState,\n  getGraph,\n  getParent,\n  setMeta,\n  getMeta,\n} from './getter'\nimport {assert, deprecate} from './throw'\nimport {DOMAIN, STORE, EVENT, MAP, FILTER, STACK, REG_A} from './tag'\nimport {applyTemplate} from './template'\nimport {forEach} from './collection'\nimport {flattenConfig} from './config'\n\nexport const applyParentHook = (\n  source: any,\n  target: any,\n  hookType: 'event' | 'effect' = EVENT,\n) => {\n  if (getParent(source)) getParent(source).hooks[hookType](target)\n}\n\nexport const initUnit = (kind: any, unit: any, configA: any, configB?: any) => {\n  const isDomain = kind === DOMAIN\n  const id = nextUnitID()\n  const config = flattenConfig({\n    or: configB,\n    and: typeof configA === 'string' ? {name: configA} : configA,\n  })\n  const {parent = null, sid = null, named = null} = config\n  const name = named ? named : config.name || (isDomain ? '' : id)\n  const compositeName = createName(name, parent)\n  const meta: Record<string, any> = {\n    op: (unit.kind = kind),\n    name: (unit.shortName = name),\n    sid: (unit.sid = readSidRoot(sid)),\n    named,\n    unitId: (unit.id = id),\n    serialize: config.serialize,\n    derived: config.derived,\n  }\n  unit.parent = parent\n  unit.compositeName = compositeName\n  unit.defaultConfig = config\n  unit.thru = (fn: Function) => {\n    deprecate(false, 'thru', 'js pipe')\n    return fn(unit)\n  }\n  unit.getType = () => compositeName.fullName\n  if (!isDomain) {\n    unit.subscribe = (observer: Subscriber<any>) => {\n      assertObject(observer)\n      return unit.watch(\n        isFunction(observer)\n          ? observer\n          : (upd: any) => observer.next && observer.next(upd),\n      )\n    }\n    unit[observableSymbol] = () => unit\n    const template = readTemplate()\n    if (template) meta.nativeTemplate = template\n  }\n  return meta\n}\nexport const createNamedEvent = (named: string) => createEvent({named})\n\nconst deriveEvent = (event: any, op: string, fn: any, node: any) => {\n  let config\n  if (isObject(fn)) {\n    config = fn\n    fn = fn.fn\n  }\n  const mapped = createEvent({\n    name: `${event.shortName} → *`,\n    derived: true,\n    and: config,\n  })\n  createLinkNode(event, mapped, node, op, fn)\n  return mapped\n}\n\nfunction callCreate(unit: any, template: any, payload: any, args: any[]): any {\n  const oldPage = currentPage\n  let page = null\n  if (template) {\n    page = currentPage\n    while (page && page.template !== template) {\n      page = getParent(page)\n    }\n  }\n  setCurrentPage(page)\n  const result = unit.create(payload, args)\n  setCurrentPage(oldPage)\n  return result\n}\n\nexport function createEvent<Payload = any>(\n  nameOrConfig?: any,\n  maybeConfig?: any,\n): Event<Payload> {\n  const event: any = (payload: Payload, ...args: any[]) => {\n    deprecate(\n      !getMeta(event, 'derived'),\n      'call of derived event',\n      'createEvent',\n    )\n    if (currentPage) {\n      return callCreate(event, template, payload, args)\n    }\n    return event.create(payload, args)\n  }\n  const template = readTemplate()\n  return Object.assign(event, {\n    graphite: createNode({\n      meta: initUnit(EVENT, event, nameOrConfig, maybeConfig),\n      regional: true,\n    }),\n    create(params: any, _: any) {\n      launch({target: event, params, scope: forkPage!})\n      return params\n    },\n    watch: (fn: (payload: Payload) => any) => watchUnit(event, fn),\n    map: (fn: any) => deriveEvent(event, MAP, fn, [compute({fn: callStack})]),\n    filter: (fn: any) =>\n      deriveEvent(event, FILTER, fn.fn ? fn : fn.fn, [filter({fn: callStack})]),\n    filterMap: (fn: any) =>\n      deriveEvent(event, 'filterMap', fn, [\n        compute({fn: callStack}),\n        calc(value => !isVoid(value), true),\n      ]),\n    prepend(fn: any) {\n      const contramapped: Event<any> = createEvent('* → ' + event.shortName, {\n        parent: getParent(event),\n      })\n      applyTemplate('eventPrepend', getGraph(contramapped))\n      createLinkNode(\n        contramapped,\n        event,\n        [compute({fn: callStack})],\n        'prepend',\n        fn,\n      )\n      applyParentHook(event, contramapped)\n      return contramapped\n    },\n  })\n}\n\nexport function createStore<State>(\n  defaultState: State,\n  props?: Config,\n): Store<State> {\n  const plainState = createStateRef(defaultState)\n  const updates = createNamedEvent('updates')\n  applyTemplate('storeBase', plainState)\n  const plainStateId = plainState.id\n  const store: any = {\n    subscribers: new Map(),\n    updates,\n    defaultState,\n    stateRef: plainState,\n    getState() {\n      let targetRef = plainState\n      let reachedPage\n      if (currentPage) {\n        let page = currentPage\n        while (page && !page.reg[plainStateId]) {\n          page = getParent(page)\n        }\n        if (page) reachedPage = page\n      }\n      if (!reachedPage && forkPage) {\n        initRefInScope(forkPage, plainState, true)\n        reachedPage = forkPage\n      }\n      if (reachedPage) targetRef = reachedPage.reg[plainStateId]\n      return readRef(targetRef)\n    },\n    setState: (state: any) =>\n      launch({\n        target: store,\n        params: state,\n        defer: true,\n        scope: forkPage!,\n      }),\n    reset(...units: any[]) {\n      forEach(units, unit => store.on(unit, () => store.defaultState))\n      return store\n    },\n    on(nodeSet: any, fn: Function) {\n      assertNodeSet(nodeSet, '.on', 'first argument')\n      deprecate(\n        !getMeta(store, 'derived'),\n        '.on in derived store',\n        'createStore',\n      )\n      forEach(Array.isArray(nodeSet) ? nodeSet : [nodeSet], trigger => {\n        store.off(trigger)\n        getSubscribers(store).set(\n          trigger,\n          createSubscription(\n            updateStore(trigger, store, 'on', callARegStack, fn),\n          ),\n        )\n      })\n      return store\n    },\n    off(unit: any) {\n      const currentSubscription = getSubscribers(store).get(unit)\n      if (currentSubscription) {\n        currentSubscription()\n        getSubscribers(store).delete(unit)\n      }\n      return store\n    },\n    map(fn: any, firstState?: any) {\n      let config\n      if (isObject(fn)) {\n        config = fn\n        fn = fn.fn\n      }\n      deprecate(\n        isVoid(firstState),\n        'second argument of store.map',\n        'updateFilter',\n      )\n      let lastResult\n      const storeState = store.getState()\n      const template = readTemplate()\n      if (template) {\n        lastResult = null\n      } else if (!isVoid(storeState)) {\n        lastResult = fn(storeState, firstState)\n      }\n\n      const innerStore: Store<any> = createStore(lastResult, {\n        name: `${store.shortName} → *`,\n        derived: true,\n        and: config,\n      })\n      const linkNode = updateStore(store, innerStore, MAP, callStackAReg, fn)\n      addRefOp(getStoreState(innerStore), {\n        type: MAP,\n        fn,\n        from: plainState,\n      })\n      getStoreState(innerStore).noInit = true\n      applyTemplate('storeMap', plainState, linkNode)\n      return innerStore\n    },\n    watch(eventOrFn: any, fn?: Function) {\n      if (!fn || !is.unit(eventOrFn)) {\n        const subscription = watchUnit(store, eventOrFn)\n        if (!applyTemplate('storeWatch', plainState, eventOrFn)) {\n          eventOrFn(store.getState())\n        }\n        return subscription\n      }\n      assert(isFunction(fn), 'second argument should be a function')\n      return eventOrFn.watch((payload: any) => fn(store.getState(), payload))\n    },\n  }\n  const meta = initUnit(STORE, store, props)\n  const updateFilter = store.defaultConfig.updateFilter\n  store.graphite = createNode({\n    scope: {state: plainState, fn: updateFilter},\n    node: [\n      calc((upd, _, stack) => {\n        if (stack.scope && !stack.scope.reg[plainState.id]) {\n          stack.b = true\n        }\n        return upd\n      }),\n      read(plainState),\n      calc((upd, _, {a, b}) => !isVoid(upd) && (upd !== a || b), true),\n      updateFilter && filter({fn: callStackAReg}),\n      mov({from: STACK, target: plainState}),\n    ],\n    child: updates,\n    meta,\n    regional: true,\n  })\n  const sid: string | null = getMeta(store, 'sid')\n  if (sid) {\n    if (getMeta(store, 'serialize') !== 'ignore')\n      setMeta(store, 'storeChange', true)\n    plainState.sid = sid\n  }\n  assert(\n    getMeta(store, 'derived') || !isVoid(defaultState),\n    \"current state can't be undefined, use null instead\",\n  )\n  own(store, [updates])\n  return store\n}\n\nconst updateStore = (\n  from: any,\n  store: Store<any>,\n  op: string,\n  caller: typeof callStackAReg,\n  fn: Function,\n) => {\n  const storeRef = getStoreState(store)\n  const reader = mov({\n    store: storeRef,\n    to: REG_A,\n    priority: 'read',\n  })\n  if (op === MAP) reader.data.softRead = true\n  const node = [reader, compute({fn: caller})]\n  applyTemplate(\n    'storeOnMap',\n    storeRef,\n    node,\n    is.store(from) && getStoreState(from),\n  )\n  return createLinkNode(from, store, node, op, fn)\n}\n","import type {Store} from './unit.h'\nimport {createStore} from './createUnit'\nimport {createStateRef, addRefOp} from './stateRef'\nimport {mov, compute, calc, read} from './step'\nimport {processArgsToConfig} from './config'\nimport {getStoreState, setMeta} from './getter'\nimport {is, isFunction, isObject, isVoid} from './is'\nimport {unitObjectName} from './naming'\nimport {createLinkNode} from './forward'\nimport {assert, deprecate} from './throw'\nimport {readTemplate} from './region'\nimport {forIn} from './collection'\nimport {BARRIER, MAP, REG_A, VALUE} from './tag'\nimport {applyTemplate} from './template'\nimport {callStack} from './caller'\nimport type {Config} from './index.h'\n\nexport function combine(...args: any[]): Store<any> {\n  let handler\n  let stores\n  let config\n  ;[args, config] = processArgsToConfig(args)\n  const rawHandler = args[args.length - 1]\n  if (isFunction(rawHandler)) {\n    stores = args.slice(0, -1)\n    handler = rawHandler\n  } else {\n    stores = args\n  }\n\n  let structStoreShape\n  let shapeReady\n  if (stores.length === 1) {\n    const obj = stores[0]\n    /*\n      without edge case combine(Color, (Color) => '~')\n      */\n    if (!is.store(obj)) {\n      /*\n      case combine([R,G,B], ([R,G,B]) => '~')\n      case combine({R,G,B}, ({R,G,B}) => '~')\n\n      edge case combine([Color], ([Color]) => '~')\n      edge case combine({Color}, ({Color}) => '~')\n\n      edge case combine([R,G,B])\n      edge case combine({R,G,B})\n\n      edge case combine([Color])\n      edge case combine({Color})\n      */\n      structStoreShape = obj\n      shapeReady = true\n    }\n  }\n  let noArraySpread: boolean | void\n  if (!shapeReady) {\n    /*\n    case combine(R,G,B, (R,G,B) => '~')\n    */\n    structStoreShape = stores\n    /*\n    without edge case combine(R,G,B)\n    without edge case combine(Color)\n    */\n    if (handler) {\n      noArraySpread = true\n      const fn = handler\n      handler = (list: any[]) => fn(...list)\n    }\n  }\n  assert(isObject(structStoreShape), 'shape should be an object')\n  return storeCombination(\n    Array.isArray(structStoreShape),\n    !noArraySpread,\n    structStoreShape,\n    config,\n    handler,\n  )\n}\n\nconst storeCombination = (\n  isArray: boolean,\n  needSpread: boolean,\n  obj: any,\n  config?: Config,\n  fn?: (upd: any) => any,\n) => {\n  const clone = isArray ? (list: any) => list.slice() : (obj: any) => ({...obj})\n  const defaultState: any = isArray ? [] : {}\n\n  const stateNew = clone(defaultState)\n  const rawShape = createStateRef(stateNew)\n  const isFresh = createStateRef(true)\n  rawShape.type = isArray ? 'list' : 'shape'\n  rawShape.noInit = true\n  applyTemplate('combineBase', rawShape, isFresh)\n  const store = createStore(stateNew, {\n    name: unitObjectName(obj),\n    derived: true,\n    and: config,\n  })\n  const storeStateRef = getStoreState(store)\n  storeStateRef.noInit = true\n  setMeta(store, 'isCombine', true)\n  const node = [\n    calc((upd, _, stack) => {\n      if (stack.scope && !stack.scope.reg[rawShape.id]) {\n        stack.c = true\n      }\n      return upd\n    }),\n    read(rawShape),\n    mov({store: isFresh, to: 'b'}),\n    calc((upd, {key}, reg) => {\n      if (reg.c || upd !== reg.a[key]) {\n        if (needSpread && reg.b) {\n          reg.a = clone(reg.a)\n        }\n        reg.a[key] = upd\n        return true\n      }\n    }, true),\n    mov({from: REG_A, target: rawShape}),\n    mov({from: VALUE, store: false, target: isFresh}),\n    mov({\n      from: VALUE,\n      store: true,\n      target: isFresh,\n      priority: BARRIER,\n      batch: true,\n    }),\n    read(rawShape, true),\n    fn && compute({fn: callStack}),\n  ]\n  forIn(obj, (child: Store<any> | any, key) => {\n    if (!is.store(child)) {\n      assert(\n        !is.unit(child) && !isVoid(child),\n        `combine expects a store in a field ${key}`,\n      )\n      stateNew[key] = defaultState[key] = child\n      return\n    }\n    defaultState[key] = child.defaultState\n    stateNew[key] = child.getState()\n    const linkNode = createLinkNode(child, store, node, 'combine', fn)\n    linkNode.scope.key = key\n    const childRef = getStoreState(child)\n    addRefOp(rawShape, {type: 'field', field: key, from: childRef})\n    applyTemplate('combineField', childRef, linkNode)\n  })\n\n  store.defaultShape = obj\n  addRefOp(storeStateRef, {\n    type: MAP,\n    from: rawShape,\n    fn,\n  })\n  if (!readTemplate()) {\n    store.defaultState = fn\n      ? (storeStateRef.current = fn(stateNew))\n      : defaultState\n  }\n  return store\n}\n\nexport function createStoreObject(...args: any[]) {\n  deprecate(false, 'createStoreObject', 'combine')\n  return combine(...args)\n}\n","export function createDefer(): {\n  rs: (value: any) => any\n  rj: (value: any) => any\n  req: Promise<any>\n} {\n  const result = {} as {\n    rs: (value: any) => any\n    rj: (value: any) => any\n    req: Promise<any>\n  }\n  result.req = new Promise((rs, rj) => {\n    result.rs = rs\n    result.rj = rj\n  })\n  result.req.catch(err => {})\n  return result\n}\n","import {calc, run} from './step'\nimport {getForkPage, getGraph, getMeta, getParent, setMeta} from './getter'\nimport {own} from './own'\nimport {createNode} from './createNode'\nimport {launch, setForkPage, forkPage, isWatch, Stack} from './kernel'\nimport {createNamedEvent, createStore, createEvent} from './createUnit'\nimport {createDefer} from './defer'\nimport {isObject, isFunction} from './is'\nimport {assert} from './throw'\nimport {EFFECT} from './tag'\nimport type {Unit} from './index.h'\nimport {add} from './collection'\n\nexport function createEffect<Payload, Done>(\n  nameOrConfig: any,\n  maybeConfig?: any,\n) {\n  const instance: any = createEvent(\n    isFunction(nameOrConfig) ? {handler: nameOrConfig} : nameOrConfig,\n    maybeConfig,\n  )\n  const node = getGraph(instance)\n  setMeta(node, 'op', (instance.kind = EFFECT))\n  instance.use = (fn: Function) => {\n    assert(isFunction(fn), '.use argument should be a function')\n    runner.scope.handler = fn\n    return instance\n  }\n  instance.use.getCurrent = () => runner.scope.handler\n  const anyway = (instance.finally = createNamedEvent('finally'))\n  const done = (instance.done = (anyway as any).filterMap({\n    named: 'done',\n    fn({status, params, result}: any) {\n      if (status === 'done') return {params, result}\n    },\n  }))\n  const fail = (instance.fail = (anyway as any).filterMap({\n    named: 'fail',\n    fn({status, params, error}: any) {\n      if (status === 'fail') return {params, error}\n    },\n  }))\n  const doneData = (instance.doneData = done.map({\n    named: 'doneData',\n    fn: ({result}: any) => result,\n  }))\n  const failData = (instance.failData = fail.map({\n    named: 'failData',\n    fn: ({error}: any) => error,\n  }))\n\n  const runner = createNode({\n    scope: {\n      handlerId: getMeta(node, 'sid'),\n      handler:\n        instance.defaultConfig.handler ||\n        (() => assert(false, `no handler used in ${instance.getType()}`)),\n    },\n    node: [\n      calc(\n        (upd, scope_, stack) => {\n          const scope: {handlerId: string; handler: Function} = scope_ as any\n          let handler = scope.handler\n          if (getForkPage(stack)) {\n            const handler_ = getForkPage(stack)!.handlers[scope.handlerId]\n            if (handler_) handler = handler_\n          }\n          upd.handler = handler\n          return upd\n        },\n        false,\n        true,\n      ),\n      calc(\n        ({params, req, handler, args = [params]}, _, stack) => {\n          const onResolve = onSettled(params, req, true, anyway, stack)\n          const onReject = onSettled(params, req, false, anyway, stack)\n          const [ok, result] = runFn(handler, onReject, args)\n          if (ok) {\n            if (isObject(result) && isFunction(result.then)) {\n              result.then(onResolve, onReject)\n            } else {\n              onResolve(result)\n            }\n          }\n        },\n        false,\n        true,\n      ),\n    ],\n    meta: {op: 'fx', fx: 'runner'},\n  })\n  node.scope.runner = runner\n  add(\n    node.seq,\n    calc(\n      (params, {runner}, stack) => {\n        const upd = getParent(stack)\n          ? {params, req: {rs(data: any) {}, rj(data: any) {}}}\n          : /** empty stack means that this node was launched directly */\n            params\n        launch({\n          target: runner,\n          params: upd,\n          defer: true,\n          scope: getForkPage(stack),\n        })\n        return upd.params\n      },\n      false,\n      true,\n    ),\n  )\n  instance.create = (params: Payload) => {\n    const req = createDefer()\n    const payload = {params, req}\n    if (forkPage) {\n      if (!isWatch) {\n        const savedFork = forkPage\n        req.req\n          .finally(() => {\n            setForkPage(savedFork)\n          })\n          .catch(() => {})\n      }\n      launch({target: instance, params: payload, scope: forkPage})\n    } else {\n      launch(instance, payload)\n    }\n    return req.req\n  }\n\n  const inFlight = (instance.inFlight = createStore(0, {named: 'inFlight'})\n    .on(instance, x => x + 1)\n    .on(anyway, x => x - 1))\n  setMeta(anyway, 'needFxCounter', 'dec')\n  setMeta(instance, 'needFxCounter', true)\n  const pending = (instance.pending = inFlight.map({\n    //@ts-expect-error\n    fn: amount => amount > 0,\n    named: 'pending',\n  }))\n\n  own(instance, [anyway, done, fail, doneData, failData, pending, inFlight])\n  return instance\n}\nexport const runFn = (\n  fn: Function,\n  onReject: (data: any) => void,\n  args: any[],\n): [boolean, any] => {\n  try {\n    return [true, fn(...args)]\n  } catch (err) {\n    onReject(err)\n    return [false, null]\n  }\n}\n\nexport const onSettled =\n  (\n    params: any,\n    req: {\n      rs(_: any): any\n      rj(_: any): any\n    },\n    ok: boolean,\n    anyway: Unit,\n    stack: Stack,\n  ) =>\n  (data: any) =>\n    launch({\n      target: [anyway, sidechain],\n      params: [\n        ok\n          ? {status: 'done', params, result: data}\n          : {status: 'fail', params, error: data},\n        {value: data, fn: ok ? req.rs : req.rj},\n      ],\n      defer: true,\n      page: stack.page,\n      scope: getForkPage(stack),\n    })\n\nexport const sidechain = createNode({\n  node: [run({fn: ({fn, value}) => fn(value)})],\n  meta: {op: 'fx', fx: 'sidechain'},\n})\n","import {combine} from './combine'\nimport {createEffect, onSettled, runFn} from './createEffect'\nimport {applyParentHook} from './createUnit'\nimport {processArgsToConfig} from './config'\nimport {getGraph, getStoreState, setMeta} from './getter'\nimport {own} from './own'\nimport {is} from './is'\nimport {read, calc} from './step'\nimport {launch} from './kernel'\nimport {EFFECT} from './tag'\n\nexport function attach(config: any) {\n  let injected\n  ;[config, injected] = processArgsToConfig(config, true)\n  let {source, effect, mapParams} = config\n  const attached = createEffect(config, injected)\n  setMeta(attached, 'attached', true)\n  const {runner} = getGraph(attached).scope\n  let runnerSteps\n  const runnerFnStep = calc(\n    (upd, _, stack) => {\n      const {params, req, handler} = upd\n      const anyway = attached.finally\n      const rj = onSettled(params, req, false, anyway, stack)\n      const sourceData = stack.a\n      const isEffectHandler = is.effect(handler)\n      let ok = true\n      let computedParams: any\n      if (mapParams) {\n        ;[ok, computedParams] = runFn(mapParams, rj, [params, sourceData])\n      } else {\n        computedParams = source && isEffectHandler ? sourceData : params\n      }\n      if (ok) {\n        if (isEffectHandler) {\n          launch({\n            target: handler as any,\n            params: {\n              params: computedParams,\n              req: {rs: onSettled(params, req, true, anyway, stack), rj},\n            },\n            page: stack.page,\n            defer: true,\n          })\n        } else {\n          upd.args = [sourceData, computedParams]\n          return true\n        }\n      }\n    },\n    true,\n    true,\n  )\n  if (source) {\n    let state\n    if (is.store(source)) {\n      state = source\n      own(state, [attached])\n    } else {\n      state = combine(source)\n      own(attached, [state])\n    }\n    runnerSteps = [read(getStoreState(state)), runnerFnStep]\n  } else {\n    runnerSteps = [runnerFnStep]\n  }\n  runner.seq.splice(1, 0, ...runnerSteps)\n  attached.use(effect)\n  applyParentHook(effect, attached, EFFECT)\n  return attached\n}\n","import type {Store, Event} from './unit.h'\nimport {createEvent, applyParentHook} from './createUnit'\nimport {forIn} from './collection'\nimport {getParent} from './getter'\nimport {processArgsToConfig} from './config'\n\nexport function createApi(...args: [Store<any>, {[key: string]: Function}]) {\n  let [[store, setters], metadata] = processArgsToConfig(args)\n  const result: Record<string, Event<any>> = {}\n  forIn(setters, (fn, key) => {\n    const event = (result[key] = createEvent(key, {\n      parent: getParent(store),\n      config: metadata,\n    }))\n    store.on(event, fn)\n    applyParentHook(store, event)\n  })\n  return result\n}\n","import type {Domain} from './unit.h'\nimport {own} from './own'\nimport {createNode} from './createNode'\nimport type {Config, NodeUnit} from './index.h'\nimport {\n  createEvent,\n  createStore,\n  createNamedEvent,\n  initUnit,\n} from './createUnit'\nimport {createEffect} from './createEffect'\nimport {createLinkNode} from './forward'\nimport {add, forEach, forIn} from './collection'\nimport {getGraph, getParent} from './getter'\nimport {DOMAIN} from './tag'\nimport {launch} from './kernel'\nimport {calc} from './step'\n\nexport function createDomain(nameOrConfig: any, maybeConfig?: any): Domain {\n  const node = createNode({family: {type: DOMAIN}, regional: true})\n\n  const result: any = {\n    history: {},\n    graphite: node,\n    hooks: {},\n  }\n\n  node.meta = initUnit(DOMAIN, result, nameOrConfig, maybeConfig)\n\n  forIn(\n    {\n      Event: createEvent,\n      Effect: createEffect,\n      Store: createStore,\n      Domain: createDomain,\n    },\n    (factory: any, tag) => {\n      const lowerCaseTag = tag.toLowerCase()\n\n      const trigger = createNamedEvent(`on${tag}`)\n      result.hooks[lowerCaseTag] = trigger\n\n      const acc = new Set<any>()\n      result.history[`${lowerCaseTag}s`] = acc\n\n      trigger.create = res => {\n        launch(trigger, res)\n        return res\n      }\n      add(\n        getGraph(trigger).seq,\n        calc((upd, _, stack) => {\n          stack.scope = null\n          return upd\n        }),\n      )\n      trigger.watch(data => {\n        own(result, [data])\n        acc.add(data)\n        if (!data.ownerSet) data.ownerSet = acc\n        if (!getParent(data)) data.parent = result\n      })\n      own(result, [trigger])\n\n      result[`onCreate${tag}`] = (hook: (data: any) => any) => {\n        forEach(acc, hook)\n        return trigger.watch(hook)\n      }\n      result[`create${tag}`] = result[lowerCaseTag] = (\n        nameOrConfig: any,\n        config?: Config,\n      ) => trigger(factory(nameOrConfig, {parent: result, or: config}))\n    },\n  )\n\n  const parent = getParent(result)\n  if (parent) {\n    forIn(result.hooks, (from: NodeUnit, key) =>\n      createLinkNode(from, parent.hooks[key]),\n    )\n  }\n  return result\n}\n","import {observableSymbol} from './observable'\nimport type {Event} from './unit.h'\nimport {createEvent} from './createUnit'\nimport {assertObject} from './is'\nimport {assert} from './throw'\nimport {createSubscription} from './subscription'\n\nexport function fromObservable<T>(observable: any): Event<T> {\n  assertObject(observable)\n  const observableItem =\n    observableSymbol in observable ? observable[observableSymbol]() : observable\n  assert(observableItem.subscribe, 'expect observable to have .subscribe')\n  const event = createEvent<T>()\n  const disposer = createSubscription(event)\n  observableItem.subscribe({\n    next: event,\n    error: disposer,\n    complete: disposer,\n  })\n  return event\n}\n","import type {Store, Event, Effect} from './unit.h'\nimport {createEvent} from './createUnit'\nimport {createLinkNode} from './forward'\nimport {unitObjectName} from './naming'\nimport {assertNodeSet} from './is'\n\nexport function merge<T>(\n  events: Array<Event<T> | Store<T> | Effect<T, any, any>>,\n  config?: object,\n): Event<T> {\n  const result = createEvent(config || unitObjectName(events, 'merge'))\n  assertNodeSet(events, 'merge', 'first argument')\n  createLinkNode(events, result, [], 'merge')\n  return result\n}\n","import {combine} from './combine'\nimport {mov, compute, read, calc} from './step'\nimport {createStateRef, readRef} from './stateRef'\nimport {callStackAReg, callARegStack} from './caller'\nimport {processArgsToConfig} from './config'\nimport {getStoreState, getGraph} from './getter'\nimport {own} from './own'\nimport {assertNodeSet, is, isObject, isVoid} from './is'\nimport {createStore} from './createUnit'\nimport {createEvent} from './createUnit'\nimport {createLinkNode} from './forward'\nimport {createNode} from './createNode'\nimport {assert} from './throw'\nimport {forEach} from './collection'\nimport {SAMPLE, STACK, VALUE} from './tag'\nimport {merge} from './merge'\nimport {applyTemplate} from './template'\n\nconst sampleConfigFields = ['source', 'clock', 'target']\n\nconst fieldErrorMessage = (method: string, field: string) =>\n  method + `: ${field} should be defined`\n\nexport function validateSampleConfig(config: any, method: string) {\n  let atLeastOneFieldExists = false\n  forEach(sampleConfigFields, field => {\n    if (field in config) {\n      assert(config[field] != null, fieldErrorMessage(method, field))\n      atLeastOneFieldExists = true\n    }\n  })\n  return atLeastOneFieldExists\n}\nexport const groupInputs = (source: any, clock: any, method: string) => {\n  assert(\n    !isVoid(source) || !isVoid(clock),\n    fieldErrorMessage(method, 'either source or clock'),\n  )\n  if (isVoid(source)) {\n    assertNodeSet(clock, method, 'clock')\n    if (Array.isArray(clock)) {\n      clock = merge(clock)\n    }\n    source = clock\n  } else if (!is.unit(source)) {\n    source = combine(source)\n  }\n  return [source, clock] as const\n}\nexport function sample(...args: any): any {\n  let target\n  let name\n  let [[source, clock, fn], metadata] = processArgsToConfig(args)\n  let sid\n  let batched = true\n  /** config case */\n  if (\n    isVoid(clock) &&\n    isObject(source) &&\n    validateSampleConfig(source, 'sample')\n  ) {\n    clock = source.clock\n    fn = source.fn\n    batched = !source.greedy\n    /** optional target & name accepted only from config */\n    target = source.target\n    name = source.name\n    sid = source.sid\n    source = source.source\n  }\n  ;[source, clock] = groupInputs(source, clock, 'sample')\n  if (isVoid(clock)) {\n    /** still undefined! */\n    clock = source\n  }\n  assertNodeSet(clock, 'sample', 'clock')\n  if (!metadata && !name) name = source.shortName\n  const isUpward = !!target\n  if (!target) {\n    if (is.store(source) && is.store(clock)) {\n      const initialState = fn\n        ? fn(readRef(getStoreState(source)), readRef(getStoreState(clock)))\n        : readRef(getStoreState(source))\n      target = createStore(initialState, {name, sid, or: metadata})\n    } else {\n      target = createEvent(name, metadata)\n      applyTemplate('sampleTarget', getGraph(target))\n    }\n  }\n  // const targetTemplate =\n  //   isUpward && is.unit(target) && getGraph(target).meta.nativeTemplate\n  if (is.store(source)) {\n    const sourceRef = getStoreState(source)\n    own(source, [\n      createLinkNode(\n        clock,\n        target,\n        [\n          applyTemplate('sampleSourceLoader'),\n          read(sourceRef, !fn, batched),\n          fn && compute({fn: callARegStack}),\n          applyTemplate('sampleSourceUpward', isUpward),\n        ],\n        SAMPLE,\n        fn,\n        // scope: {fn, targetTemplate}\n      ),\n    ])\n    applyTemplate('sampleStoreSource', sourceRef)\n  } else {\n    const hasSource = createStateRef(false)\n    const sourceRef = createStateRef()\n    const clockState = createStateRef()\n    applyTemplate('sampleNonStoreSource', hasSource, sourceRef, clockState)\n    createNode({\n      parent: source,\n      node: [\n        mov({from: STACK, target: sourceRef}),\n        mov({from: VALUE, store: true, target: hasSource}),\n      ],\n      family: {owners: [source, target, clock], links: target},\n      meta: {op: SAMPLE},\n      regional: true,\n    })\n    own(source, [\n      createLinkNode(\n        clock,\n        target,\n        [\n          applyTemplate('sampleSourceLoader'),\n          mov({from: STACK, target: clockState}),\n          read(hasSource, true),\n          calc(hasSource => hasSource, true),\n          read(sourceRef, true, batched),\n          read(clockState),\n          fn && compute({fn: callStackAReg}),\n          applyTemplate('sampleSourceUpward', isUpward),\n        ],\n        SAMPLE,\n        fn,\n        // scope: {fn, targetTemplate}\n      ),\n    ])\n  }\n  return target\n}\n","import {processArgsToConfig} from './config'\nimport {createLinkNode} from './forward'\nimport {groupInputs, validateSampleConfig, sample} from './sample'\nimport {createEvent} from './createUnit'\nimport {calc, filter} from './step'\nimport {callStack} from './caller'\nimport {assertNodeSet, is, isFunction} from './is'\nimport {createNode} from './createNode'\nimport {assert} from './throw'\n\nexport function guard(...args: any[]) {\n  const METHOD = 'guard'\n  let [[source, config], metadata] = processArgsToConfig(args)\n  if (!config) {\n    config = source\n    source = config.source\n  }\n  validateSampleConfig(config, METHOD)\n  let {\n    filter: filterFn,\n    greedy,\n    clock,\n    name = metadata && metadata.name ? metadata.name : METHOD,\n  } = config\n  const target = config.target || createEvent(name, metadata)\n  const filterIsUnit = is.unit(filterFn)\n  ;[source, clock] = groupInputs(source, clock, METHOD)\n  if (clock) {\n    assertNodeSet(clock, METHOD, 'clock')\n    source = sample({\n      source,\n      clock,\n      greedy,\n      fn: filterIsUnit ? null : (source: any, clock: any) => ({source, clock}),\n    })\n  }\n  assertNodeSet(target, METHOD, 'target')\n  if (filterIsUnit) {\n    sample({\n      source: filterFn,\n      clock: source,\n      target: createNode({\n        node: [calc(({guard}) => guard, true), calc(({data}) => data)],\n        child: target,\n        meta: {op: METHOD},\n        family: {\n          owners: [source, filterFn, target, ...[].concat(clock ? clock : [])],\n          links: target,\n        },\n        regional: true,\n      }),\n      fn: (guard: any, data: any) => ({guard, data}),\n      greedy,\n      name,\n    })\n  } else {\n    assert(isFunction(filterFn), '`filter` should be function or unit')\n    createLinkNode(\n      source,\n      target,\n      clock\n        ? [\n            filter({fn: ({source, clock}, {fn}) => fn(source, clock)}),\n            calc(({source}) => source),\n          ]\n        : [filter({fn: callStack})],\n      METHOD,\n      filterFn,\n    )\n  }\n  return target\n}\n","import {createStore} from './createUnit'\nimport {is} from './is'\nimport {forIn} from './collection'\nimport {getParent} from './getter'\nimport {createLinkNode} from './forward'\n\nexport function restore(obj: any, defaultState: any, config?: any): any {\n  if (is.store(obj)) return obj\n  if (is.event(obj) || is.effect(obj)) {\n    const domain = getParent(obj)\n    const result = createStore(defaultState, {\n      parent: domain,\n      name: obj.shortName,\n      and: config,\n    })\n    createLinkNode(is.effect(obj) ? obj.doneData : obj, result)\n    if (domain) domain.hooks.store(result)\n    return result\n  }\n  const result: Record<string, any> = Array.isArray(obj) ? [] : {}\n  forIn(\n    obj,\n    (value, key) =>\n      (result[key] = is.store(value) ? value : createStore(value, {name: key})),\n  )\n  return result\n}\n","import type {Event} from './unit.h'\nimport type {NodeUnit, Cmd} from './index.h'\nimport {is, isFunction, isObject} from './is'\nimport {add, forIn, includes} from './collection'\nimport {addRefOp, createStateRef} from './stateRef'\nimport {createLinkNode} from './forward'\nimport {processArgsToConfig} from './config'\nimport {compute, filter, calc, read} from './step'\nimport {createNode} from './createNode'\nimport {launch} from './kernel'\nimport {getStoreState} from './getter'\nimport {assert} from './throw'\nimport {createEvent} from './createUnit'\nimport {applyTemplate} from './template'\n\nconst launchCase = (\n  scopeTargets: Record<string, NodeUnit>,\n  field: string,\n  data: any,\n  stack: any,\n) => {\n  const target = scopeTargets[field]\n  if (target) {\n    launch({\n      target,\n      params: Array.isArray(target) ? target.map(() => data) : data,\n      defer: true,\n      stack,\n    })\n  }\n}\n\nexport function split(...args: any[]): any {\n  let targets: Record<string, Event<any> | NodeUnit>\n  let [[source, match], metadata] = processArgsToConfig(args)\n  const knownCases = !match\n  if (knownCases) {\n    targets = source.cases\n    match = source.match\n    source = source.source\n  }\n  const matchIsUnit = is.store(match)\n  const matchIsFunction = !is.unit(match) && isFunction(match)\n  const matchIsShape = !matchIsUnit && !matchIsFunction && isObject(match)\n  if (!targets!) targets = {}\n  if (!knownCases) {\n    assert(matchIsShape, 'match should be an object')\n    forIn(match, (_, key) => (targets[key] = createEvent(metadata)))\n    targets.__ = createEvent(metadata)\n  }\n  const owners = new Set(\n    ([] as NodeUnit[]).concat(source, Object.values(targets)),\n  )\n  const caseNames = Object.keys(\n    matchIsUnit || matchIsFunction ? targets : match,\n  )\n  let splitterSeq: Array<Cmd | false>\n  if (matchIsUnit || matchIsFunction) {\n    if (matchIsUnit) owners.add(match)\n    splitterSeq = [\n      matchIsUnit && read(getStoreState(match), false, true),\n      compute({\n        safe: matchIsUnit,\n        filter: true,\n        fn(data, scopeTargets, stack) {\n          const value = String(matchIsUnit ? stack.a : match(data))\n          launchCase(\n            scopeTargets,\n            includes(caseNames, value) ? value : '__',\n            data,\n            stack,\n          )\n        },\n      }),\n    ]\n  } else if (matchIsShape) {\n    const lastValues = createStateRef({})\n    lastValues.type = 'shape'\n    const units = [] as string[]\n    let needBarrier: boolean\n    forIn(match, (storeOrFn: any, key) => {\n      if (is.unit(storeOrFn)) {\n        needBarrier = true\n        add(units, key)\n        owners.add(storeOrFn)\n        const updater = createLinkNode(\n          storeOrFn,\n          [],\n          [read(lastValues), calc((upd, _, {a}) => (a[key] = upd))],\n        )\n        if (is.store(storeOrFn)) {\n          lastValues.current[key] = storeOrFn.getState()\n          const storeRef = getStoreState(storeOrFn)\n          addRefOp(lastValues, {from: storeRef, field: key, type: 'field'})\n          applyTemplate('splitMatchStore', storeRef, updater)\n        }\n      }\n    })\n    if (needBarrier!) {\n      applyTemplate('splitBase', lastValues)\n    }\n    splitterSeq = [\n      needBarrier! && read(lastValues, false, true),\n      filter({\n        fn(data, scopeTargets, stack) {\n          for (let i = 0; i < caseNames.length; i++) {\n            const caseName = caseNames[i]\n            const caseValue = includes(units, caseName)\n              ? stack.a[caseName]\n              : match[caseName](data)\n            if (caseValue) {\n              launchCase(scopeTargets, caseName, data, stack)\n              return\n            }\n          }\n          launchCase(scopeTargets, '__', data, stack)\n        },\n      }),\n    ]\n  } else {\n    assert(false, 'expect match to be unit, function or object')\n  }\n  createNode({\n    meta: {op: 'split'},\n    parent: source,\n    scope: targets,\n    node: splitterSeq!,\n    family: {owners: Array.from(owners)},\n    regional: true,\n  })\n  if (!knownCases) return targets\n}\n","import {add} from '../collection'\nimport {createDefer} from '../defer'\nimport {is} from '../is'\nimport {launch, forkPage} from '../kernel'\nimport type {Scope} from '../unit.h'\n\nexport function allSettled(\n  start: any,\n  {scope, params: ctx}: {scope: Scope; params?: any},\n) {\n  if (!is.unit(start))\n    return Promise.reject(Error('first argument should be unit'))\n  const defer = createDefer()\n  //@ts-expect-error\n  defer.parentFork = forkPage\n  const {fxCount} = scope\n  add(fxCount.scope.defers, defer)\n\n  const launchUnits = [start]\n  const launchParams = [] as Array<{params: any; req: any} | null>\n  add(\n    launchParams,\n    is.effect(start)\n      ? {\n          params: ctx,\n          req: {\n            rs(value: any) {\n              //@ts-ignore\n              defer.value = {status: 'done', value}\n            },\n            rj(value: any) {\n              //@ts-ignore\n              defer.value = {status: 'fail', value}\n            },\n          },\n        }\n      : ctx,\n  )\n  add(launchUnits, fxCount)\n  add(launchParams, null)\n  launch({\n    target: launchUnits,\n    params: launchParams,\n    scope,\n  })\n  return defer.req\n}\n","import {getMeta, getOwners, getLinks} from '../getter'\nimport {is} from '../is'\nimport {assert} from '../throw'\nimport type {Store} from '../unit.h'\nimport type {Node} from '../index.h'\nimport {add, forEach, includes} from '../collection'\nimport {STORE} from '../tag'\n\nexport function traverseStores(\n  root: Node,\n  fn: (node: Node, sid: string) => void,\n) {\n  const list = [] as Node[]\n  ;(function visit(node) {\n    if (includes(list, node)) return\n    add(list, node)\n    if (getMeta(node, 'op') === STORE && getMeta(node, 'sid')) {\n      fn(node, getMeta(node, 'sid'))\n    }\n    forEach(node.next, visit)\n    forEach(getOwners(node), visit)\n    forEach(getLinks(node), visit)\n  })(root)\n}\n\nexport function normalizeValues(\n  values: Map<Store<any>, any> | Array<[any, any]> | Record<string, any>,\n  assertEach?: (key: any, value: any) => void,\n) {\n  if (Array.isArray(values)) values = new Map(values)\n  if (values instanceof Map) {\n    const result = {} as Record<string, any>\n    forEach(values, (value, key) => {\n      assert(is.unit(key), 'Map key should be a unit')\n      if (assertEach) assertEach(key, value)\n      assert(key.sid, 'unit should have a sid')\n      assert(!(key.sid! in result), 'duplicate sid found')\n      result[key.sid!] = value\n    })\n    return result\n  }\n  return values\n}\n","import {is} from '../is'\nimport {assert} from '../throw'\nimport type {Domain} from '../unit.h'\nimport {normalizeValues} from './util'\nimport {createScope} from './createScope'\n\nexport function fork(\n  domainOrConfig?: Domain | {values?: any; handlers?: any},\n  optiionalConfig?: {values?: any; handlers?: any},\n) {\n  let config: {values?: any; handlers?: any} | void = domainOrConfig as any\n  let domain: Domain\n  if (is.domain(domainOrConfig)) {\n    domain = domainOrConfig\n    config = optiionalConfig\n  }\n\n  const scope = createScope(domain!)\n\n  if (config) {\n    if (config.values) {\n      const valuesSidMap = normalizeValues(config.values, unit =>\n        assert(is.store(unit), 'Values map can contain only stores as keys'),\n      )\n      Object.assign(scope.sidValuesMap, valuesSidMap)\n    }\n    if (config.handlers) {\n      scope.handlers = normalizeValues(config.handlers, unit =>\n        assert(\n          is.effect(unit),\n          `Handlers map can contain only effects as keys`,\n        ),\n      )\n    }\n  }\n  return scope\n}\n","import {getForkPage, getGraph, getMeta, getParent} from '../getter'\nimport {setForkPage, getPageRef, currentPage} from '../kernel'\nimport {createNode} from '../createNode'\nimport {calc, compute} from '../step'\nimport type {Domain, Scope} from '../unit.h'\nimport type {StateRef} from '../index.h'\nimport {forEach} from '../collection'\nimport {DOMAIN, SAMPLER, SCOPE} from '../tag'\n\nexport function createScope(unit?: Domain): Scope {\n  const forkInFlightCounter = createNode({\n    scope: {\n      defers: [],\n      inFlight: 0,\n      fxID: 0,\n    },\n    node: [\n      calc((_, scope, stack) => {\n        if (!getParent(stack)) {\n          scope.fxID += 1\n          return\n        }\n        if (getMeta(getParent(stack).node, 'needFxCounter') === 'dec') {\n          scope.inFlight -= 1\n        } else {\n          scope.inFlight += 1\n          scope.fxID += 1\n        }\n      }),\n      compute({priority: SAMPLER, batch: true}),\n      calc(\n        (_, scope) => {\n          const {defers, fxID} = scope\n          if (scope.inFlight > 0 || defers.length === 0) return\n          Promise.resolve().then(() => {\n            if (scope.fxID !== fxID) return\n            forEach(defers.splice(0, defers.length), (defer: any) => {\n              setForkPage(defer.parentFork)\n              defer.rs(defer.value)\n            })\n          })\n        },\n        false,\n        true,\n      ),\n    ],\n  })\n  const page = {} as Record<string, StateRef>\n  const storeChange = createNode({\n    node: [\n      calc((value, __, stack) => {\n        const storeStack = getParent(stack)\n        if (storeStack && getParent(storeStack)) {\n          const storeNode = storeStack.node\n          if (\n            !getMeta(storeNode, 'isCombine') ||\n            getMeta(getParent(storeStack).node, 'op') !== 'combine'\n          ) {\n            const forkPage = getForkPage(stack)!\n            const id = storeNode.scope.state.id\n            const sid = getMeta(storeNode, 'sid')\n            forkPage.sidIdMap[sid] = id\n            forkPage.sidValuesMap[sid] = value\n          }\n        }\n      }),\n    ],\n  })\n  const resultScope: Scope = {\n    cloneOf: unit,\n    reg: page,\n    sidValuesMap: {},\n    sidIdMap: {},\n    getState(store: any) {\n      if ('current' in store) {\n        return getPageRef(currentPage, resultScope, null, store).current\n      }\n      const node = getGraph(store)\n      return getPageRef(currentPage, resultScope, node, node.scope.state, true)\n        .current\n    },\n    kind: SCOPE,\n    graphite: createNode({\n      family: {\n        type: DOMAIN,\n        links: [forkInFlightCounter, storeChange],\n      },\n      meta: {unit: 'fork'},\n      scope: {forkInFlightCounter},\n    }),\n    additionalLinks: {},\n    handlers: {},\n    fxCount: forkInFlightCounter,\n    storeChange,\n  }\n  return resultScope\n}\n","import {is, isObject} from '../is'\nimport {assert} from '../throw'\nimport {launch} from '../kernel'\nimport type {Domain, Scope} from '../unit.h'\nimport type {Node} from '../index.h'\nimport {add, includes} from '../collection'\nimport {normalizeValues, traverseStores} from './util'\nimport {getGraph} from '../getter'\n\n/**\n hydrate state on client\n\n const root = createDomain()\n hydrate(root, {\n  values: window.__initialState__\n})\n\n */\nexport function hydrate(domain: Domain | Scope, {values}: {values: any}) {\n  assert(isObject(values), 'values property should be an object')\n  const normalizedValues = normalizeValues(values)\n  const valuesSidList = Object.getOwnPropertyNames(normalizedValues)\n  const storeNodes: Node[] = []\n  const storeValues: any[] = []\n  let forkPage: Scope\n  let traverseTarget: Node\n  let needToAssign: true | void\n  if (is.scope(domain)) {\n    forkPage = domain\n    needToAssign = true\n    assert(forkPage.cloneOf, 'scope should be created from domain')\n    traverseTarget = getGraph(forkPage.cloneOf)\n  } else if (is.domain(domain)) {\n    traverseTarget = getGraph(domain)\n  } else {\n    assert(false, 'first argument of hydrate should be domain or scope')\n  }\n  traverseStores(traverseTarget!, (node, sid) => {\n    // forkPage.sidIdMap[sid] = node.scope.state.id\n    if (includes(valuesSidList, sid)) {\n      add(storeNodes, node)\n      add(storeValues, normalizedValues[sid])\n    }\n  })\n  launch({\n    target: storeNodes,\n    params: storeValues,\n    scope: forkPage!,\n  })\n  if (needToAssign) {\n    Object.assign(forkPage!.sidValuesMap, normalizedValues)\n  }\n}\n","import {createDefer} from '../defer'\nimport {is} from '../is'\nimport {assert} from '../throw'\nimport {launch, forkPage} from '../kernel'\nimport type {Scope} from '../unit.h'\n\n/** bind event to scope */\nexport function scopeBind(unit: any, {scope}: {scope?: Scope} = {}) {\n  assert(\n    scope || forkPage,\n    'scopeBind cannot be called outside of forked .watch',\n  )\n  const savedForkPage = scope || forkPage!\n  return is.effect(unit)\n    ? (params: any) => {\n        const req = createDefer()\n        launch({\n          target: unit,\n          params: {\n            params,\n            req,\n          },\n          scope: savedForkPage,\n        })\n        return req.req\n      }\n    : (params: any) => {\n        launch({target: unit, params, scope: savedForkPage})\n        return params\n      }\n}\n","import type {Scope, Store} from '../unit.h'\nimport {forIn, includes} from '../collection'\nimport {assert} from '../throw'\nimport {traverseStores} from './util'\nimport {getGraph, getMeta} from '../getter'\n\n/**\n serialize state on server\n */\nexport function serialize(\n  scope: Scope,\n  config: {ignore?: Array<Store<any>>; onlyChanges?: boolean} = {},\n) {\n  const ignoredStores = config.ignore ? config.ignore.map(({sid}) => sid) : []\n  const result = {} as Record<string, any>\n  forIn(scope.sidValuesMap, (value, sid) => {\n    if (includes(ignoredStores, sid)) return\n    const id = scope.sidIdMap[sid]\n    // if (!scope.changedStores.has(id)) return\n    if (id && id in scope.reg) {\n      result[sid] = scope.reg[id].current\n    } else {\n      result[sid] = value\n    }\n  })\n  if ('onlyChanges' in config && !config.onlyChanges) {\n    assert(scope.cloneOf, 'scope should be created from domain')\n    traverseStores(getGraph(scope.cloneOf), (node, sid) => {\n      if (\n        !(sid in result) &&\n        !includes(ignoredStores, sid) &&\n        !getMeta(node, 'isCombine') &&\n        getMeta(node, 'serialize') !== 'ignore'\n      )\n        result[sid] = scope.getState(node as any)\n    })\n  }\n  return result\n}\n","export const observableSymbol: any =\n  (typeof Symbol !== 'undefined' && Symbol.observable) || '@@observable'\n","import {kind} from './index.h'\nimport {DOMAIN, STORE, EVENT, EFFECT, SCOPE} from './tag'\nimport {isObject, isFunction} from './is'\nimport {Domain, Effect, Event, Scope, Store} from './unit.h'\n\nexport const unit = (obj: any) =>\n  (isFunction(obj) || isObject(obj)) && 'kind' in obj\n\nconst is = (type: kind) => (obj: any) => unit(obj) && obj.kind === type\n\nexport const store = is(STORE) as (value: any) => value is Store<unknown>\nexport const event = is(EVENT) as (value: any) => value is Event<unknown>\nexport const effect = is(EFFECT) as (\n  value: any,\n) => value is Effect<unknown, unknown, unknown>\nexport const domain = is(DOMAIN) as (value: any) => value is Domain\nexport const scope = is(SCOPE) as (value: any) => value is Scope\n","export * as is from './validate'\nimport {forEach} from './collection'\nimport {assert} from './throw'\n\nexport const isObject = (value: any) =>\n  typeof value === 'object' && value !== null\nexport const isFunction = (value: any) => typeof value === 'function'\n\nexport const isVoid = (value: any) => value === undefined\n\nexport const assertObject = (value: any) =>\n  assert(\n    isObject(value) || isFunction(value),\n    'expect first argument be an object',\n  ) // or function\n\nconst assertNodeSetItem = (\n  value: any,\n  method: string,\n  valueName: string,\n  reason: string,\n) =>\n  assert(\n    !(\n      (!isObject(value) && !isFunction(value)) ||\n      (!('family' in value) && !('graphite' in value))\n    ),\n    `${method}: expect ${valueName} to be a unit (store, event or effect)${reason}`,\n  )\n\nexport const assertNodeSet = (\n  value: any,\n  method: string,\n  valueName: string,\n) => {\n  if (Array.isArray(value)) {\n    forEach(value, (item, i) =>\n      assertNodeSetItem(item, method, `${i} item of ${valueName}`, ''),\n    )\n  } else {\n    assertNodeSetItem(value, method, valueName, ' or array of units')\n  }\n}\n","const idCount = () => {\n  let id = 0\n  return () => `${++id}`\n}\n\nexport const nextUnitID = idCount()\nexport const nextStepID = idCount()\nexport const nextNodeID = idCount()\n","import type {\n  StateRef,\n  Compute,\n  MovValueToRegister,\n  MovValueToStore,\n  MovStoreToRegister,\n  MovStoreToStore,\n  MovRegisterToStore,\n} from './index.h'\nimport {nextStepID} from './id'\nimport {EFFECT, REG_A, SAMPLER, STACK, STORE} from './tag'\nimport type {BarrierPriorityTag, Stack} from './kernel'\n\nconst cmd = (\n  type: 'compute' | 'mov',\n  data: any,\n  priority?: BarrierPriorityTag | false,\n  batch?: boolean,\n) => {\n  const result: any = {\n    id: nextStepID(),\n    type,\n    data,\n  }\n  if (priority) {\n    result.order = {priority}\n    if (batch) result.order.barrierID = ++nextBarrierID\n  }\n  return result\n}\n\nlet nextBarrierID = 0\n\nexport const mov: {\n  <T>(data: {\n    from: 'value'\n    store: T\n    target: StateRef\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovValueToStore<T>\n  <T>(data: {\n    from: 'value'\n    to: 'stack' | 'a' | 'b'\n    store: T\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovValueToRegister<T>\n  (data: {\n    from: 'a' | 'b' | 'stack'\n    target: StateRef\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovRegisterToStore\n  (data: {\n    from: 'a' | 'b' | 'stack'\n    to: 'a' | 'b' | 'stack'\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovRegisterToStore\n  (data: {\n    store: StateRef\n    target: StateRef\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovStoreToStore\n  (data: {\n    store: StateRef\n    to: 'stack' | 'a' | 'b'\n    batch?: boolean\n    priority?: BarrierPriorityTag | false\n  }): MovStoreToRegister\n  (data: {\n    store: StateRef\n    batch?: boolean\n    priority?: BarrierPriorityTag | false\n  }): MovStoreToRegister\n  // (data: {\n  //   from?: 'value' | 'store' | 'stack' | 'a' | 'b'\n  //   to?: 'stack' | 'a' | 'b' | 'store'\n  //   store?: StateRef\n  //   target?: StateRef\n  // }): Mov\n} = ({\n  from = STORE,\n  store,\n  target,\n  to = target ? STORE : STACK,\n  batch,\n  priority,\n}: {\n  from?: 'value' | 'store' | 'stack' | 'a' | 'b'\n  to?: 'stack' | 'a' | 'b' | 'store'\n  store?: StateRef\n  target?: StateRef\n  batch?: boolean\n  priority?: BarrierPriorityTag | false\n}) => cmd('mov', {from, store, to, target}, priority, batch)\n\nexport const compute = ({\n  fn,\n  batch,\n  priority,\n  safe = false,\n  filter = false,\n}: {\n  fn?: (data: any, scope: {[key: string]: any}, stack: Stack) => any\n  batch?: boolean\n  priority?: BarrierPriorityTag | false\n  safe?: boolean\n  filter?: boolean\n}): Compute => cmd('compute', {fn, safe, filter}, priority, batch)\n\nexport const filter = ({\n  fn,\n}: {\n  fn(data: any, scope: {[key: string]: any}, stack: Stack): any\n}) => compute({fn, filter: true})\n\nexport const run = ({\n  fn,\n}: {\n  fn(data: any, scope: {[key: string]: any}, stack: Stack): any\n}) => compute({fn, priority: EFFECT})\n\nexport const calc = (\n  fn: (data: any, scope: {[key: string]: any}, stack: Stack) => any,\n  filter?: boolean,\n  isEffect?: boolean,\n) => compute({fn, safe: true, filter, priority: isEffect && EFFECT})\n\n/**\n * `read(ref, true, true)`: **reg.stack** with **sampler** batch\n *\n * `read(ref, true, false)`: **reg.stack** without batch\n *\n * `read(ref, false, true)`: **reg.a** with **sampler** batch\n *\n * `read(ref, false, false)`: **reg.a** without batch\n *\n */\nexport const read = (\n  store: StateRef,\n  toStack?: boolean,\n  samplerPriority?: boolean,\n) =>\n  mov({\n    store,\n    to: toStack ? STACK : REG_A,\n    priority: samplerPriority && SAMPLER,\n    batch: true,\n  })\n\nexport const step = {mov, compute, filter, run}\n","import type {StateRef, StateRefOp} from './index.h'\nimport {nextStepID} from './id'\nimport {add} from './collection'\n\nexport const createStateRef = (current?: any): StateRef => ({\n  id: nextStepID(),\n  current,\n})\nexport const readRef = ({current}: StateRef | {current: any}) => current\n\nexport const addRefOp = (ref: StateRef, op: StateRefOp) => {\n  if (!ref.before) ref.before = []\n  add(ref.before!, op as any)\n}\n","import type {Stack} from './kernel'\n\nexport const callStackAReg = (stack: any, {fn}: any, {a}: Stack) => fn(stack, a)\nexport const callARegStack = (stack: any, {fn}: any, {a}: Stack) => fn(a, stack)\nexport const callStack = (stack: any, {fn}: any, _: Stack) => fn(stack)\n","import type {Node, StateRef} from './index.h'\nimport type {Scope} from './unit.h'\n\nexport const getGraph = (graph: any): Node => graph.graphite || graph\nexport const getOwners = (node: Node) => node.family.owners\nexport const getLinks = (node: Node) => node.family.links\nexport const getStoreState = (store: any): StateRef => store.stateRef\nexport const getValue = (stack: any) => stack.value\nexport const getSubscribers = (store: any) => store.subscribers\nexport const getParent = (unit: any) => unit.parent\nexport const getForkPage = (val: any): Scope | void => val.scope\nexport const getMeta = (unit: any, field: string) => getGraph(unit).meta[field]\nexport const setMeta = (unit: any, field: string, value: any) =>\n  (getGraph(unit).meta[field] = value)\n","import type {NodeUnit} from './index.h'\nimport {getGraph, getOwners, getLinks} from './getter'\nimport {DOMAIN, CROSSLINK} from './tag'\nimport {add, forEach} from './collection'\n\nexport const own = (ownerUnit: NodeUnit, links: NodeUnit[]) => {\n  const owner = getGraph(ownerUnit)\n  forEach(links, _link => {\n    const link = getGraph(_link)\n    if (owner.family.type !== DOMAIN) link.family.type = CROSSLINK\n    add(getOwners(link), owner)\n    add(getLinks(owner), link)\n  })\n}\n","import {Node, NodeUnit} from './index.h'\nimport {getGraph, getOwners, getLinks, getSubscribers, getMeta} from './getter'\nimport {is} from './is'\nimport {removeItem} from './collection'\nimport {CROSSLINK} from './tag'\n\nconst removeFromNode = (currentNode: Node, targetNode: Node) => {\n  removeItem(currentNode.next, targetNode)\n  removeItem(getOwners(currentNode), targetNode)\n  removeItem(getLinks(currentNode), targetNode)\n}\nconst clearNodeNormalized = (\n  targetNode: Node,\n  deep: boolean,\n  isDomainUnit: boolean,\n) => {\n  targetNode.next.length = 0\n  targetNode.seq.length = 0\n  //@ts-ignore\n  targetNode.scope = null\n  let currentNode\n  let list = getLinks(targetNode)\n  while ((currentNode = list.pop())) {\n    removeFromNode(currentNode, targetNode)\n    if (\n      deep ||\n      (isDomainUnit && getMeta(targetNode, 'op') !== 'sample') ||\n      currentNode.family.type === CROSSLINK\n    ) {\n      clearNodeNormalized(\n        currentNode,\n        deep,\n        getMeta(currentNode, 'op') !== 'on' && isDomainUnit,\n      )\n    }\n  }\n  list = getOwners(targetNode)\n  while ((currentNode = list.pop())) {\n    removeFromNode(currentNode, targetNode)\n    if (isDomainUnit && currentNode.family.type === CROSSLINK) {\n      clearNodeNormalized(\n        currentNode,\n        deep,\n        getMeta(currentNode, 'op') !== 'on' && isDomainUnit,\n      )\n    }\n  }\n}\nconst clearMap = (map: any) => map.clear()\nexport const clearNode = (\n  graphite: NodeUnit,\n  {\n    deep,\n  }: {\n    deep?: boolean\n  } = {},\n) => {\n  let isDomainUnit = false\n  //@ts-ignore\n  if (graphite.ownerSet) graphite.ownerSet.delete(graphite)\n  if (is.store(graphite)) {\n    clearMap(getSubscribers(graphite))\n  } else if (is.domain(graphite)) {\n    isDomainUnit = true\n    //@ts-ignore\n    const history = graphite.history\n    clearMap(history.events)\n    clearMap(history.effects)\n    clearMap(history.stores)\n    clearMap(history.domains)\n  }\n  clearNodeNormalized(getGraph(graphite), !!deep, isDomainUnit)\n}\n","import type {Subscription, NodeUnit} from './index.h'\nimport {clearNode} from './clearNode'\n\nexport const createSubscription = (node: NodeUnit): Subscription => {\n  const result = () => clearNode(node)\n  result.unsubscribe = result\n  return result\n}\n","import {processArgsToConfig} from './config'\nimport {createNode} from './createNode'\nimport type {Subscription, NodeUnit, Cmd} from './index.h'\nimport {createSubscription} from './subscription'\nimport {assertNodeSet} from './is'\n\nexport const createLinkNode = (\n  parent: NodeUnit | NodeUnit[],\n  child: NodeUnit | NodeUnit[],\n  node?: Array<Cmd | false | void | null>,\n  op?: string,\n  scopeFn?: Function,\n) =>\n  createNode({\n    node,\n    parent,\n    child,\n    scope: {fn: scopeFn},\n    meta: {op},\n    family: {owners: [parent, child], links: child},\n    regional: true,\n  })\nexport const forward = (opts: {\n  from: NodeUnit | NodeUnit[]\n  to: NodeUnit | NodeUnit[]\n  meta?: Record<string, any>\n}): Subscription => {\n  const [{from, to}, config] = processArgsToConfig(opts, true)\n  assertNodeSet(from, 'forward', '\"from\"')\n  assertNodeSet(to, 'forward', '\"to\"')\n  return createSubscription(\n    createNode({\n      parent: from,\n      child: to,\n      meta: {op: 'forward', config},\n      family: {},\n      regional: true,\n    }),\n  )\n}\n","import {run} from './step'\nimport {callStack} from './caller'\nimport {createNode} from './createNode'\nimport {Subscription, NodeUnit} from './index.h'\nimport {createSubscription} from './subscription'\nimport {assert} from './throw'\nimport {isFunction} from './is'\n\nexport const watchUnit = (\n  unit: NodeUnit,\n  handler: (payload: any) => any,\n): Subscription => {\n  assert(isFunction(handler), '.watch argument should be a function')\n  return createSubscription(\n    createNode({\n      scope: {fn: handler},\n      node: [run({fn: callStack})],\n      parent: unit,\n      meta: {op: 'watch'},\n      family: {owners: unit},\n      regional: true,\n    }),\n  )\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import {combine, is} from 'effector'\nimport {Word, createWordsArray} from '../wordsArray'\n\nexport function val(x: TemplateStringsArray, ...args: Array<Word>) {\n  if (args.every(arg => !is.store(arg)))\n    return createWordsArray(x, args).join('')\n  return combine(args, args => createWordsArray(x, args).join(''))\n}\n","import {TASK_DEADLINE} from '../platform/env'\nimport {now} from '../platform/now'\nimport {beginMark, endMark} from '../platform/mark'\nimport {raf} from '../platform/raf'\nimport type {\n  Op,\n  OpPriorityQueue,\n  OpGroup,\n  AsyncValue,\n  Linkable,\n} from './index.h'\n\nfunction addItemToQueue(\n  queue: {first: Linkable | null; last: Linkable | null},\n  item: Linkable,\n) {\n  if (queue.last) {\n    item.cursor.prev = queue.last\n    queue.last.cursor.next = item\n    queue.last = item\n  } else {\n    queue.first = queue.last = item\n  }\n}\n\nfunction removeItemFromQueue(\n  queue: {first: Linkable | null; last: Linkable | null},\n  item: Linkable,\n) {\n  if (item.cursor.prev) {\n    item.cursor.prev.cursor.next = item.cursor.next\n  }\n  if (item.cursor.next) {\n    item.cursor.next.cursor.prev = item.cursor.prev\n  }\n  if (queue.last === item) {\n    queue.last = item.cursor.prev\n  }\n  if (queue.first === item) {\n    queue.first = item.cursor.next\n  }\n  item.cursor.prev = null\n  item.cursor.next = null\n}\n\n//prettier-ignore\nfunction removeOpGroupFromQueue(\n  group: OpGroup,\n  priority: 'props' | 'tree' | 'data'\n) {\n  if (group.cursor[priority].prev) {\n    group.cursor[priority].prev!.cursor[priority].next = group.cursor[priority].next\n  }\n  if (group.cursor[priority].next) {\n    group.cursor[priority].next!.cursor[priority].prev = group.cursor[priority].prev\n  }\n  if (group.queue[priority].last === group) {\n    group.queue[priority].last = group.cursor[priority].prev\n  }\n  if (group.queue[priority].first === group) {\n    group.queue[priority].first = group.cursor[priority].next\n  }\n  group.cursor[priority].prev = null\n  group.cursor[priority].next = null\n}\n\nfunction removeOpFromQueue(op: Op) {\n  op.status = 'active'\n  removeItemFromQueue(getOpQueue(op), op)\n}\n\nfunction addOpGroupToQueue(\n  group: OpGroup,\n  priority: 'props' | 'tree' | 'data',\n) {\n  if (group.queue[priority].last) {\n    group.cursor[priority].prev = group.queue[priority].last\n    group.queue[priority].last!.cursor[priority].next = group\n    group.queue[priority].last = group\n  } else {\n    group.queue[priority].first = group.queue[priority].last = group\n  }\n}\n\nfunction getOpQueue(op: Op) {\n  return op.group.activeChilds[op.priority]\n}\n\nexport function forceSetOpValue(value: any, op: Op) {\n  op.value.active = op.value.pending = value\n  if (op.status === 'active') return\n  removeOpFromQueue(op)\n}\n\nexport function pushOpToQueue(value: any, op: Op) {\n  if (op.value.active === value) {\n    op.value.pending = value\n    if (op.status === 'pending') {\n      removeOpFromQueue(op)\n      if (!getOpQueue(op).first) {\n        removeOpGroupFromQueue(op.group, op.priority)\n      }\n    }\n    return\n  }\n  if (op.status === 'active') {\n    op.status = 'pending'\n    if (!getOpQueue(op).first) {\n      addOpGroupToQueue(op.group, op.priority)\n    }\n    addItemToQueue(getOpQueue(op), op)\n  }\n  op.value.pending = value\n  if (!op.group.queue.rafID) {\n    op.group.queue.rafID = raf(op.group.queue.execQueue)\n  }\n}\n\nfunction execQueue(queue: OpPriorityQueue) {\n  beginMark('execQueue')\n  const start = now()\n  let interrupted = false\n  let group: OpGroup | null\n  let op: Op | null\n\n  quant: {\n    while (queue.props.first || queue.tree.first || queue.data.first) {\n      if (now() - start >= TASK_DEADLINE) {\n        interrupted = true\n        break quant\n      }\n      const hasPropsTasks = !!queue.props.first\n      if (hasPropsTasks) beginMark('props')\n\n      while ((group = queue.props.first)) {\n        while ((op = group.activeChilds.props.first)) {\n          if (now() - start >= TASK_DEADLINE) {\n            interrupted = true\n            endMark('props')\n            break quant\n          }\n          op.runOp(op.value.pending)\n          op.value.active = op.value.pending\n          removeOpFromQueue(op)\n        }\n        removeOpGroupFromQueue(group, 'props')\n      }\n      if (hasPropsTasks) endMark('props')\n\n      const hasTreeTasks = !!queue.tree.first\n      if (hasTreeTasks) beginMark('tree')\n\n      while ((group = queue.tree.first)) {\n        while ((op = group.activeChilds.tree.first)) {\n          if (now() - start >= TASK_DEADLINE) {\n            interrupted = true\n            endMark('tree')\n            break quant\n          }\n          op.runOp(op.value.pending)\n          op.value.active = op.value.pending\n          removeOpFromQueue(op)\n        }\n        removeOpGroupFromQueue(group, 'tree')\n      }\n      if (hasTreeTasks) endMark('tree')\n\n      const hasDataTasks = !!queue.data.first\n      if (hasDataTasks) beginMark('data')\n\n      while ((group = queue.data.first)) {\n        while ((op = group.activeChilds.data.first)) {\n          if (now() - start >= TASK_DEADLINE) {\n            interrupted = true\n            endMark('data')\n            break quant\n          }\n          op.runOp(op.value.pending)\n          op.value.active = op.value.pending\n          removeOpFromQueue(op)\n        }\n        removeOpGroupFromQueue(group, 'data')\n      }\n      if (hasDataTasks) endMark('data')\n    }\n  }\n  endMark('execQueue')\n  if (interrupted) {\n    queue.rafID = raf(queue.execQueue)\n  } else {\n    queue.rafID = null\n    if (queue.onDrain) {\n      const rs = queue.onDrain\n      queue.onDrain = null\n      rs()\n    }\n  }\n}\n\nexport function createOp({\n  value,\n  runOp,\n  group,\n  priority,\n}: {\n  value: any\n  runOp: (value: any) => void\n  group: OpGroup\n  priority: 'props' | 'tree' | 'data'\n}): Op {\n  return {\n    value: {\n      active: value,\n      pending: value,\n    },\n    runOp,\n    status: 'active',\n    priority,\n    group,\n    cursor: {\n      prev: null,\n      next: null,\n    },\n  }\n}\n\nexport function createOpQueue({\n  onComplete,\n}: {\n  onComplete?: () => void\n}): OpPriorityQueue {\n  const queue: OpPriorityQueue = {\n    props: {\n      first: null,\n      last: null,\n    },\n    tree: {\n      first: null,\n      last: null,\n    },\n    data: {\n      first: null,\n      last: null,\n    },\n    rafID: null,\n    execQueue() {},\n    onDrain: onComplete,\n  }\n  queue.execQueue = execQueue.bind(null, queue)\n  return queue\n}\n\nexport function createOpGroup(queue: OpPriorityQueue): OpGroup {\n  return {\n    ops: [],\n    queue,\n    activeChilds: {\n      props: {\n        first: null,\n        last: null,\n      },\n      tree: {\n        first: null,\n        last: null,\n      },\n      data: {\n        first: null,\n        last: null,\n      },\n    },\n    cursor: {\n      props: {\n        prev: null,\n        next: null,\n      },\n      tree: {\n        prev: null,\n        next: null,\n      },\n      data: {\n        prev: null,\n        next: null,\n      },\n    },\n  }\n}\n\nexport function createAsyncValue({\n  value,\n  group,\n  onInit,\n  onChange,\n}: {\n  value: any\n  group: OpGroup\n  onInit: (value: any) => void\n  onChange: (value: any) => void\n}): AsyncValue {\n  const change = createOp({\n    value,\n    group,\n    runOp(value) {\n      item.status = 'A'\n      onChange(value)\n    },\n    priority: 'data',\n  })\n  const item: AsyncValue = {\n    status: 'IA',\n    value: change.value,\n    ops: {\n      init: createOp({\n        value: false,\n        group,\n        runOp(value) {\n          item.status = 'A'\n          onInit(item.value.active)\n        },\n        priority: 'data',\n      }),\n      change,\n      terminate: createOp({\n        value: false,\n        group,\n        runOp(value) {\n          item.status = 'T'\n        },\n        priority: 'data',\n      }),\n    },\n  }\n  pushOpToQueue(true, item.ops.init)\n  return item\n}\n\nexport function stopAsyncValue(item: AsyncValue) {\n  switch (item.status) {\n    case 'I':\n    case 'T':\n    case 'AT':\n      return\n    case 'A':\n      item.status = 'AT'\n      pushOpToQueue(true, item.ops.terminate)\n      break\n    case 'AA':\n      item.status = 'AT'\n      pushOpToQueue(true, item.ops.terminate)\n      pushOpToQueue(item.value.active, item.ops.change)\n      break\n    case 'IA':\n      item.status = 'T'\n      pushOpToQueue(false, item.ops.init)\n      break\n  }\n}\n\nexport function updateAsyncValue(value: any, item: AsyncValue) {\n  switch (item.status) {\n    case 'I':\n    case 'T':\n      return\n    case 'A':\n      if (item.value.active !== value) {\n        item.status = 'AA'\n        pushOpToQueue(value, item.ops.change)\n      }\n      break\n    case 'AA':\n      if (item.value.active === value) {\n        item.status = 'A'\n        pushOpToQueue(value, item.ops.change)\n      } else if (item.value.pending !== value) {\n        item.value.pending = value\n      }\n      break\n    case 'IA':\n      item.value.active = item.value.pending = value\n      break\n    case 'AT':\n      // item.status = item.value.active === value ? 'A' : 'AA'\n      // pushOpToQueue(value, item.ops.change)\n      // pushOpToQueue(false, item.ops.terminate)\n      break\n  }\n}\n","export const USE_PERF = true\n\nexport const TASK_DEADLINE = 1000\n","import type {DOMElement, StaticOperationDef} from './index.h'\n\nconst defMap = {\n  attr: applyAttr,\n  data: applyDataAttr,\n  style: applyStyle,\n  styleVar: applyStyleVar,\n}\n\nexport function escapeTag(value: string) {\n  value = String(value)\n  switch (value) {\n    case '__proto__':\n    case '__defineGetter__':\n    case '__defineSetter__':\n    case 'constructor':\n    case 'prototype':\n    case 'hasOwnProperty':\n    case 'toString':\n    case 'valueOf':\n    case 'setProperty':\n    case 'removeProperty':\n      return 'forbidden'\n    default:\n      return value.replace(/[^a-zA-Z0-9\\-_]/g, '')\n  }\n}\n\nexport function applyStaticOps(\n  element: DOMElement,\n  defs: StaticOperationDef[],\n) {\n  for (let i = 0; i < defs.length; i++) {\n    const {type, field, value} = defs[i]\n    defMap[type](element, field, value)\n  }\n}\n\nexport function isFalse(val: any) {\n  return (\n    val !== '' &&\n    val !== 0 &&\n    val !== '0' &&\n    (val === false || val === undefined || val === null)\n  )\n}\n\nexport function applyStyleVar(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    element.style.removeProperty(`--${field}`)\n  } else {\n    element.style.setProperty(`--${field}`, `${value}`)\n  }\n}\n\nexport function applyStyle(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    delete element.style[field as any]\n  } else {\n    element.style[field as any] = `${value}`\n  }\n}\n\nexport function applyDataAttr(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    delete element.dataset[field]\n  } else {\n    element.dataset[field] = `${value}`\n  }\n}\nexport function applyAttr(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    switch (field) {\n      case 'value':\n        //@ts-expect-error\n        delete element.value\n        break\n      case 'checked':\n        //@ts-expect-error\n        element.checked = false\n        break\n      case 'spellcheck':\n        if (value === false) {\n          element.setAttribute('spellcheck', 'false')\n          return\n        }\n        break\n    }\n    element.removeAttribute(field)\n  } else {\n    switch (field) {\n      case 'value':\n        //@ts-expect-error\n        element.value = `${value}`\n        break\n      case 'checked':\n        //@ts-expect-error\n        element.checked = `${value}`\n        break\n    }\n    element.setAttribute(field, `${value}`)\n  }\n}\n\nexport function applyText(textNode: Text, text: string | number | boolean) {\n  textNode.replaceData(0, (textNode.textContent || '').length, String(text))\n}\n","import {\n  Store,\n  Event,\n  launch,\n  step,\n  createNode,\n  withRegion,\n  restore,\n  createEvent,\n} from 'effector'\nimport type {Scope} from '../effector/unit.h'\nimport type {StateRef} from '../effector/index.h'\nimport type {Stack} from '../effector/kernel'\nimport type {\n  Leaf,\n  NSType,\n  DOMElement,\n  LeafData,\n  Template,\n  NodeDraft,\n  Root,\n} from './index.h'\nimport type {OpGroup} from './plan/index.h'\nimport {handlers} from './templateHandlers'\n\nlet templateID = 0\nlet spawnID = 0\nexport let currentTemplate: Template | null = null\nexport let currentLeaf: Leaf | null = null\n\nexport function createTemplate<Api extends {[method: string]: any}>(config: {\n  fn: (\n    state: {\n      [field: string]: Store<any>\n    },\n    triggers: {\n      mount: Event<Leaf>\n    },\n  ) => {[K in keyof Api]: Event<Api[K]>}\n  state?: {[field: string]: any}\n  defer?: boolean\n  name: string\n  isSvgRoot: boolean\n  draft: NodeDraft\n  namespace: NSType\n  env: {\n    document: Document\n  }\n  isBlock?: boolean\n}): Template\n//@ts-expect-error\nexport function createTemplate(config: {\n  fn: (\n    state: {\n      [field: string]: Store<any>\n    },\n    triggers: {\n      mount: Event<Leaf>\n    },\n  ) => void\n  state?: {[field: string]: any}\n  defer?: boolean\n  name: string\n  isSvgRoot: boolean\n  draft: NodeDraft\n  namespace: NSType\n  env: {\n    document: Document\n  }\n  isBlock?: boolean\n}): Template\nexport function createTemplate<Api extends {[method: string]: any}>({\n  fn,\n  state: values = {},\n  defer = false,\n  name = '',\n  draft,\n  isSvgRoot,\n  namespace,\n  env,\n  isBlock = false,\n}: {\n  fn: (\n    state: {\n      [field: string]: Store<any>\n    },\n    triggers: {\n      mount: Event<Leaf>\n    },\n  ) => {[K in keyof Api]: Event<Api[K]>}\n  state?: {[field: string]: any}\n  defer?: boolean\n  name: string\n  isSvgRoot: boolean\n  draft: NodeDraft\n  namespace: NSType\n  env: {\n    document: Document\n  }\n  isBlock?: boolean\n}): Template {\n  const parent = currentTemplate\n  const template: Template = {\n    id: ++templateID,\n    name,\n    plain: [],\n    watch: [],\n    nameMap: {},\n    pages: [],\n    closure: [],\n    childTemplates: [],\n    handlers,\n    upward: step.filter({\n      //@ts-expect-error\n      fn(upd, scope, stack: Stack) {\n        if (!stack.page) {\n          if (stack.parent && stack.parent.page) {\n            stack.page = stack.parent.page\n          } else {\n            // console.error('context lost', stack)\n            return true\n          }\n        }\n        if (!stack.page.root.activeSpawns.has(stack.page.fullID)) {\n          console.count('inactive page upward')\n          return false\n        }\n        const stackTemplates = [stack.page.template]\n        const stackPages = [stack.page]\n        {\n          let currentStackPage = stack.page.parent\n          while (currentStackPage) {\n            stackPages.push(currentStackPage)\n            stackTemplates.push(currentStackPage.template)\n            currentStackPage = currentStackPage.parent\n          }\n        }\n        stack.node.next.forEach(node => {\n          /**\n           * node.meta.nativeTemplate is used in units\n           * it represents template in which unit was created (belongs to)\n           */\n          const targetTemplate: Template | void = node.meta.nativeTemplate\n          if (targetTemplate) {\n            if (stackTemplates.includes(targetTemplate)) {\n              const page = stackPages[stackTemplates.indexOf(targetTemplate)]\n              launch({\n                //@ts-expect-error\n                target: node,\n                params: upd,\n                defer: true,\n                page,\n                stack,\n                //@ts-expect-error\n                scope: stack.scope,\n              })\n            } else {\n              console.error('context drift', {stack, node})\n            }\n          } else {\n            launch({\n              //@ts-expect-error\n              target: node,\n              params: upd,\n              defer: true,\n              page: stack.page,\n              stack,\n              //@ts-expect-error\n              scope: stack.scope,\n            })\n          }\n        })\n        return false\n      },\n    }),\n    loader: step.filter({\n      //@ts-expect-error\n      fn(upd, scope, stack: Stack) {\n        if (stack.parent) {\n          const forkId = stack.scope ? stack.scope.graphite.id : null\n          if (stack.page) {\n            if (!stack.page.root.activeSpawns.has(stack.page.fullID)) {\n              console.count('inactive page loader')\n              return false\n            }\n            if (stack.page.template === template) {\n              return true\n            }\n\n            if (stack.page.root.childSpawns[stack.page.fullID][template.id]) {\n              const fullID = stack.page!.fullID\n              stack.page.root.childSpawns[fullID][template.id].forEach(page => {\n                if (forkId) {\n                  if (\n                    !page.root.scope ||\n                    forkId !== page.root.scope.graphite.id\n                  )\n                    return\n                }\n                launch({\n                  params: upd,\n                  //@ts-expect-error\n                  target: stack.node,\n                  page,\n                  defer: true,\n                  //@ts-expect-error\n                  scope: stack.scope,\n                })\n              })\n            } else {\n              const fullID = stack.page.fullID\n              const isRecTemplate = stack.page.template.name === 'rec'\n\n              template.pages.forEach(page => {\n                if (forkId) {\n                  if (\n                    !page.root.scope ||\n                    forkId !== page.root.scope.graphite.id\n                  )\n                    return\n                }\n                if (\n                  page.fullID === fullID ||\n                  page.fullID.startsWith(`${fullID}_`)\n                ) {\n                  let validTarget = true\n                  if (isRecTemplate) {\n                    const recID = stack.page!.template.id\n                    let parentPage = page.parent\n                    while (parentPage) {\n                      if (parentPage === stack.page) {\n                        break\n                      }\n                      if (parentPage.template.id === recID) {\n                        validTarget = false\n                        break\n                      }\n                      parentPage = parentPage.parent\n                    }\n                  }\n                  if (validTarget) {\n                    launch({\n                      params: upd,\n                      //@ts-expect-error\n                      target: stack.node,\n                      page,\n                      defer: true,\n                      //@ts-expect-error\n                      scope: stack.scope,\n                    })\n                  }\n                } else {\n                  if (fullID.startsWith(`${page.fullID}_`)) {\n                    launch({\n                      params: upd,\n                      //@ts-expect-error\n                      target: stack.node,\n                      page: stack.page,\n                      defer: true,\n                      //@ts-expect-error\n                      scope: stack.scope,\n                    })\n                  } else {\n                    // console.count('no page match')\n                  }\n                }\n              })\n            }\n          } else {\n            template.pages.forEach(page => {\n              if (forkId) {\n                if (!page.root.scope || forkId !== page.root.scope.graphite.id)\n                  return\n              }\n              launch({\n                params: upd,\n                //@ts-expect-error\n                target: stack.node,\n                page,\n                defer: true,\n                //@ts-expect-error\n                scope: stack.scope,\n              })\n            })\n          }\n          return false\n        }\n        return true\n      },\n    }),\n    parent,\n    node: null as any,\n    api: null as any,\n    trigger: {\n      //@ts-expect-error\n      mount: createEvent<Leaf>({named: 'mount'}),\n    },\n    draft,\n    isSvgRoot,\n    namespace,\n    env,\n    isBlock: isBlock || !!(parent && parent.isBlock),\n  }\n  if (parent) {\n    parent.childTemplates.push(template)\n  }\n  const node = createNode({\n    meta: {\n      template,\n    },\n  })\n  template.node = node\n  currentTemplate = template\n  if (!defer) {\n    withRegion(node, () => {\n      const state = restore(values)\n      template.api = fn(state, template.trigger)\n      template.nameMap = state\n    })\n  } else {\n    template.deferredInit = () => {\n      const prevTemplate = currentTemplate\n      currentTemplate = template\n      template.deferredInit = null\n      try {\n        withRegion(node, () => {\n          const state = restore(values)\n          template.api = fn(state, template.trigger)\n          template.nameMap = state\n        })\n      } finally {\n        currentTemplate = prevTemplate\n      }\n    }\n  }\n  currentTemplate = parent\n  return template\n}\n\nfunction getCurrent(ref: StateRef, forkPage?: Scope) {\n  let result\n  if (forkPage) result = forkPage.getState(ref)\n  else result = ref.current\n  switch (ref.type) {\n    case 'list':\n      return [...result]\n    case 'shape':\n      return {...result}\n    default:\n      return result\n  }\n}\nfunction findRef(\n  ref: StateRef,\n  targetLeaf: Leaf | null,\n  forkPage?: Scope,\n): StateRef {\n  let currentLeaf = targetLeaf\n  while (currentLeaf && !regRef(currentLeaf, ref)) {\n    currentLeaf = currentLeaf.parent\n  }\n  if (!currentLeaf) {\n    if (forkPage) {\n      forkPage.getState(ref)\n      return forkPage.reg[ref.id]\n    }\n    return ref\n  }\n  return regRef(currentLeaf, ref)\n}\nfunction findRefValue(\n  ref: StateRef,\n  targetLeaf: Leaf | null,\n  forkPage?: Scope,\n) {\n  return findRef(ref, targetLeaf, forkPage).current\n}\nfunction ensureLeafHasRef(ref: StateRef, leaf: Leaf) {\n  if (!regRef(leaf, ref)) {\n    leaf.reg[ref.id] = findRef(ref, leaf.parent, leaf.root.scope)\n  }\n}\nconst regRef = (page: {reg: Record<string, StateRef>}, ref: StateRef) =>\n  page.reg[ref.id]\nfunction addMapItems<T>(\n  values: T[],\n  id: string | number,\n  record: Record<string | number, T[]>,\n) {\n  if (!(id in record)) {\n    record[id] = []\n  }\n  record[id].push(...values)\n}\nexport function spawn(\n  template: Template,\n  {\n    values = {},\n    parentLeaf,\n    mountNode,\n    svgRoot,\n    leafData,\n    opGroup,\n    domSubtree,\n    hydration,\n    root,\n  }: {\n    values?: {[field: string]: any}\n    parentLeaf: Leaf | null\n    mountNode: DOMElement\n    svgRoot: SVGSVGElement | null\n    leafData: LeafData\n    opGroup: OpGroup\n    domSubtree: OpGroup\n    hydration: boolean\n    root: Root\n  },\n): Leaf {\n  const page = {} as Record<string, StateRef>\n\n  const leaf: Leaf = {\n    draft: template.draft,\n    svgRoot,\n    data: leafData,\n    parent: parentLeaf,\n    hydration,\n    mountNode,\n    root,\n    id: ++spawnID,\n    fullID: '',\n    reg: page,\n    template,\n  }\n  template.pages.push(leaf)\n  const previousSpawn = currentLeaf\n  currentLeaf = leaf\n  if (parentLeaf) {\n    addMapItems([leaf], template.id, root.childSpawns[parentLeaf.fullID])\n  }\n  if (parentLeaf) {\n    leaf.fullID = `${parentLeaf.fullID}_${leaf.id}`\n  } else {\n    leaf.fullID = `${leaf.id}`\n  }\n  root.childSpawns[leaf.fullID] = {}\n  root.activeSpawns.add(leaf.fullID)\n  root.leafOps[leaf.fullID] = {group: opGroup, domSubtree}\n  for (let i = 0; i < template.closure.length; i++) {\n    const ref = template.closure[i]\n    let closureRef = ref\n    let parent = leaf.parent\n    findClosure: while (parent) {\n      if (regRef(parent, ref)) {\n        closureRef = regRef(parent, ref)\n        break findClosure\n      }\n      parent = parent.parent\n    }\n    if (!parent && root.scope) {\n      root.scope.getState(ref)\n      closureRef = root.scope.reg[ref.id]\n    }\n    page[ref.id] = closureRef\n  }\n\n  for (let i = 0; i < template.plain.length; i++) {\n    const ref = template.plain[i]\n    const next: StateRef = {\n      id: ref.id,\n      current: getCurrent(ref, root.scope),\n    }\n    page[ref.id] = next\n  }\n  for (const name in values) {\n    const id = template.nameMap[name].stateRef.id\n    page[id] = {\n      id,\n      current: values[name],\n    }\n  }\n  function execRef(ref: StateRef) {\n    if (ref.before) {\n      for (let i = 0; i < ref.before.length; i++) {\n        const cmd = ref.before[i]\n        switch (cmd.type) {\n          case 'map': {\n            const from = cmd.from\n            if (!cmd.fn && !from) break\n            let value\n            if (from) {\n              ensureLeafHasRef(from, leaf)\n              value = page[from.id].current\n            }\n            page[ref.id].current = cmd.fn ? cmd.fn(value) : value\n            break\n          }\n          case 'field': {\n            const from = cmd.from\n            ensureLeafHasRef(from, leaf)\n            page[ref.id].current[cmd.field] = page[from.id].current\n            break\n          }\n          case 'closure':\n            ensureLeafHasRef(cmd.of, leaf)\n            break\n        }\n      }\n    }\n  }\n  template.closure.forEach(execRef)\n  template.plain.forEach(execRef)\n\n  function runWatchersFrom(\n    list: any[],\n    state: {i: number; stop: boolean},\n    page: Record<string, StateRef>,\n  ) {\n    state.stop = true\n    let val\n    try {\n      while (state.i < list.length) {\n        val = list[state.i]\n        state.i++\n        val.fn(\n          page[val.of.id]\n            ? page[val.of.id].current\n            : findRefValue(val.of, leaf.parent, leaf.root.scope),\n        )\n      }\n    } catch (err) {\n      console.error(err)\n      state.stop = false\n    }\n  }\n  const state = {i: 0, stop: false}\n  while (!state.stop) {\n    runWatchersFrom(template.watch, state, page)\n  }\n  if (parentLeaf) {\n    for (const id in root.childSpawns[leaf.fullID]) {\n      addMapItems(\n        root.childSpawns[leaf.fullID][id],\n        id,\n        root.childSpawns[parentLeaf.fullID],\n      )\n    }\n  }\n  if (mountQueue) {\n    mountQueue.steps.push({\n      target: template.trigger.mount,\n      params: leaf,\n      defer: true,\n      page: leaf,\n      scope: root.scope,\n    })\n  } else {\n    mountQueue = {\n      parent: mountQueue,\n      steps: [\n        {\n          target: template.trigger.mount,\n          params: leaf,\n          defer: true,\n          page: leaf,\n          scope: root.scope,\n        },\n      ],\n    }\n    let step: any\n    do {\n      while ((step = mountQueue.steps.shift())) {\n        mountQueue = {\n          parent: mountQueue,\n          steps: [],\n        }\n        launch(step)\n      }\n    } while ((mountQueue = mountQueue.parent))\n  }\n  currentLeaf = previousSpawn\n  return leaf\n}\n\ntype MountQueue = {\n  parent: MountQueue | null\n  steps: any[]\n}\n\nlet mountQueue: MountQueue | null = null\n","import type {DOMElement} from './index.h'\n\nimport type {\n  ElementBlock,\n  TextBlock,\n  UsingBlock,\n  Block,\n  BlockBlock,\n} from './relation.h'\n\nexport function findParentDOMElement(\n  block: Exclude<Block, UsingBlock | BlockBlock>,\n): DOMElement | null {\n  let parent = block.parent\n  while (parent.type !== 'element' && parent.type !== 'using') {\n    parent = parent.parent\n  }\n  if (parent) return parent.value\n  return null\n}\nfunction findLastVisibleChildBlock(\n  block: Exclude<Block, UsingBlock>,\n): ElementBlock | TextBlock | null {\n  if (!block.visible) return null\n  switch (block.type) {\n    case 'text':\n    case 'element':\n      return block\n    case 'LF':\n    case 'route':\n    case 'rec':\n    case 'recItem':\n    case 'block':\n    case 'blockItem': {\n      for (let i = block.child.length - 1; i >= 0; i--) {\n        const child = block.child[i]\n        const visibleChild = findLastVisibleChildBlock(child)\n        if (visibleChild) return visibleChild\n      }\n      return null\n    }\n    case 'list': {\n      let child = block.lastChild\n      if (!child) return null\n      while (child) {\n        const visibleChild = findLastVisibleChildBlock(child)\n        if (visibleChild) return visibleChild\n        child = child.left\n      }\n      return null\n    }\n    default: {\n      const _: never = block\n      return null\n    }\n  }\n}\n\nexport function findPreviousVisibleSiblingBlock(\n  block: Block,\n): TextBlock | ElementBlock | null {\n  switch (block.type) {\n    case 'using':\n      return null\n    case 'LF': {\n      let sibling = block.left\n      while (sibling) {\n        const visibleChild = findLastVisibleChildBlock(sibling)\n        if (visibleChild) return visibleChild\n        sibling = sibling.left\n      }\n      return findPreviousVisibleSiblingBlock(block.parent)\n    }\n    case 'element':\n    case 'text':\n    case 'route':\n    case 'rec':\n    case 'recItem':\n    case 'block':\n    case 'blockItem':\n    case 'list': {\n      const parentFragment = block.parent\n      for (let i = block.index - 1; i >= 0; i--) {\n        const sibling = parentFragment.child[i]\n        if (!sibling) continue\n        const visibleChild = findLastVisibleChildBlock(sibling)\n        if (visibleChild) return visibleChild\n      }\n      switch (parentFragment.type) {\n        case 'element':\n        case 'using':\n          return null\n      }\n      return findPreviousVisibleSiblingBlock(parentFragment)\n    }\n    default: {\n      const _: never = block\n      return null\n    }\n  }\n}\n\nexport function findPreviousVisibleSibling(\n  block: Exclude<Block, UsingBlock>,\n): DOMElement | Text | null {\n  const child = findPreviousVisibleSiblingBlock(block)\n  if (child) return child.value\n  return null\n}\n","export function assert(condition: any, msg: string): asserts condition {\n  if (!condition) throw Error(msg)\n}\n\nexport function assertClosure(\n  currentActor: any,\n  methodName: string,\n): asserts currentActor {\n  if (!currentActor)\n    throw Error(`${methodName}() called outside from using() closure`)\n}\n","import {launch, createEvent} from 'effector'\n\nimport type {\n  DOMElement,\n  Leaf,\n  BindingsDraft,\n  LeafData,\n  Env,\n  LeafDataElement,\n  Template,\n} from './index.h'\n\nimport type {\n  ElementBlock,\n  ListBlock,\n  TextBlock,\n  RouteBlock,\n  FragmentParent,\n  RecItemBlock,\n  RecBlock,\n  BlockBlock,\n  BlockItemBlock,\n} from './relation.h'\n\nimport {createOpGroup, createOp} from './plan'\n\nimport {spawn, currentTemplate} from './template'\nimport {findParentDOMElement, findPreviousVisibleSibling} from './search'\nimport {applyStaticOps} from './bindings'\nimport {assert} from './assert'\n\nexport function setInParentIndex(template: Template) {\n  if (!currentTemplate) return\n  const {draft} = template\n  if (draft.type === 'listItem') return\n  if (draft.type === 'rec') return\n  switch (currentTemplate.draft.type) {\n    case 'element':\n    case 'using':\n    case 'route':\n    case 'list':\n    case 'rec':\n    case 'recItem':\n    case 'block':\n    case 'blockItem':\n      draft.inParentIndex = currentTemplate.draft.childCount\n      currentTemplate.draft.childCount += 1\n      currentTemplate.draft.childTemplates.push(template)\n      break\n    default:\n      console.warn(\n        `unexpected currentTemplate type ${currentTemplate.draft.type}`,\n      )\n  }\n}\n\nexport function mountChildTemplates(\n  draft: BindingsDraft,\n  {\n    parentBlockFragment,\n    leaf,\n    node,\n    svgRoot,\n    values,\n  }: {\n    parentBlockFragment: FragmentParent\n    leaf: Leaf\n    node?: DOMElement\n    svgRoot?: SVGSVGElement | null\n    values?: {[name: string]: any}\n  },\n) {\n  draft.childTemplates.forEach(actor => {\n    mountChild({\n      parentBlockFragment,\n      leaf,\n      node,\n      svgRoot,\n      values,\n      actor,\n    })\n  })\n}\nconst fragmentParentTypes: Array<FragmentParent['type']> = [\n  'LF',\n  'using',\n  'element',\n  'recItem',\n  'rec',\n  'block',\n  'blockItem',\n  'route',\n]\n\nexport function mountChild({\n  parentBlockFragment,\n  leaf,\n  node = leaf.mountNode,\n  actor,\n  svgRoot,\n  values,\n}: {\n  parentBlockFragment: FragmentParent\n  leaf: Leaf\n  node?: DOMElement\n  actor: Template\n  svgRoot?: SVGSVGElement | null\n  values?: {[name: string]: any}\n}) {\n  assert(\n    fragmentParentTypes.includes(parentBlockFragment.type),\n    `incorrect parent ${parentBlockFragment.type}`,\n  )\n  let leafData: LeafData\n  const {draft} = actor\n  const {queue} = leaf.root.leafOps[leaf.fullID].group\n  const opGroup = createOpGroup(queue)\n  const parentDomSubtree = leaf.root.leafOps[leaf.fullID].domSubtree\n  let domSubtree = parentDomSubtree\n  switch (draft.type) {\n    case 'route': {\n      const routeBlock: RouteBlock = {\n        type: 'route',\n        parent: parentBlockFragment,\n        child: [],\n        visible: false,\n        index: draft.inParentIndex,\n      }\n      parentBlockFragment.child[draft.inParentIndex] = routeBlock\n      leafData = {\n        type: 'route',\n        block: routeBlock,\n        ops: {},\n        initialized: false,\n        pendingInit: null,\n      }\n      break\n    }\n    case 'element': {\n      let element: DOMElement\n      if (actor.isBlock) {\n        let env: Env | void\n        let type: 'html' | 'svg' | void\n        let currentLeaf = leaf\n        while (currentLeaf && (!type || !env)) {\n          if (currentLeaf.template.env) env = currentLeaf.template.env\n          const {draft} = currentLeaf\n          if (draft.type === 'element') {\n            if (draft.tag === 'svg') {\n              type = 'svg'\n            } else if (draft.tag === 'foreignObject') {\n              type = 'html'\n            }\n          }\n          currentLeaf = currentLeaf.parent!\n        }\n        if (!type) type = 'html'\n        if (env) {\n          element =\n            type === 'svg'\n              ? env.document.createElementNS(\n                  'http://www.w3.org/2000/svg',\n                  draft.tag,\n                )\n              : env.document.createElement(draft.tag)\n          applyStaticOps(element, draft.staticSeq)\n        }\n      } else {\n        element = draft.stencil.cloneNode() as DOMElement\n      }\n      const elementBlock: ElementBlock = {\n        type: 'element',\n        parent: parentBlockFragment,\n        child: [],\n        value: element!,\n        visible: false,\n        index: draft.inParentIndex,\n      }\n      parentBlockFragment.child[draft.inParentIndex] = elementBlock\n      leafData = {\n        type: 'element',\n        block: elementBlock,\n        ops: {\n          visible: createOp({\n            value: false,\n            priority: 'tree',\n            runOp(value) {\n              if (leaf.hydration) {\n              }\n              if (value) {\n                appendChild(elementBlock)\n                const leafData_ = leafData as LeafDataElement\n                if (leafData_.needToCallNode) {\n                  leafData_.needToCallNode = false\n                  launch({\n                    target: onMount,\n                    params: {\n                      element: elementBlock.value,\n                      fns: draft.node,\n                    },\n                    page: childSpawn,\n                    //@ts-expect-error\n                    scope: leaf.root.scope,\n                  })\n                }\n                elementBlock.visible = true\n              } else {\n                elementBlock.value.remove()\n                elementBlock.visible = false\n              }\n            },\n            group: parentDomSubtree,\n          }),\n        },\n        needToCallNode: draft.node.length > 0,\n      }\n      domSubtree = createOpGroup(queue)\n      break\n    }\n    case 'list': {\n      const listBlock: ListBlock = {\n        type: 'list',\n        parent: parentBlockFragment,\n        child: [],\n        lastChild: null,\n        visible: true,\n        index: draft.inParentIndex,\n      }\n      parentBlockFragment.child[draft.inParentIndex] = listBlock\n      leafData = {\n        type: 'list',\n        draft,\n        block: listBlock,\n        records: [],\n        pendingUpdate: null,\n      }\n      break\n    }\n    case 'using':\n    case 'listItem':\n      break\n    case 'rec': {\n      const recBlock: RecBlock = {\n        type: 'rec',\n        parent: parentBlockFragment,\n        child: [],\n        visible: true,\n        index: draft.inParentIndex,\n      }\n      parentBlockFragment.child[draft.inParentIndex] = recBlock\n      leafData = {\n        type: 'rec',\n        block: recBlock,\n      }\n      break\n    }\n    case 'recItem': {\n      const recItemBlock: RecItemBlock = {\n        type: 'recItem',\n        parent: parentBlockFragment,\n        child: [],\n        visible: true,\n        index: draft.inParentIndex,\n      }\n      parentBlockFragment.child[draft.inParentIndex] = recItemBlock\n      leafData = {\n        type: 'rec item',\n        block: recItemBlock,\n      }\n      break\n    }\n    case 'block': {\n      const block: BlockBlock = {\n        type: 'block',\n        parent: parentBlockFragment,\n        child: [],\n        visible: true,\n        index: draft.inParentIndex,\n      }\n      parentBlockFragment.child[draft.inParentIndex] = block\n      leafData = {\n        type: 'block',\n        block,\n      }\n      break\n    }\n    case 'blockItem': {\n      const block: BlockItemBlock = {\n        type: 'blockItem',\n        parent: parentBlockFragment,\n        child: [],\n        visible: true,\n        index: draft.inParentIndex,\n      }\n      parentBlockFragment.child[draft.inParentIndex] = block\n      leafData = {\n        type: 'block item',\n        block: block,\n      }\n      break\n    }\n    default: {\n      //@ts-expect-error\n      console.warn(`unexpected draft type ${draft.type}`)\n    }\n  }\n  const childSpawn = spawn(actor, {\n    values,\n    parentLeaf: leaf,\n    mountNode: node,\n    svgRoot: svgRoot ? svgRoot : leaf.svgRoot,\n    //@ts-expect-error\n    leafData,\n    opGroup,\n    domSubtree,\n    hydration: leaf.hydration,\n    root: leaf.root,\n  })\n}\n\nexport function appendChild(block: TextBlock | ElementBlock) {\n  const visibleSibling = findPreviousVisibleSibling(block)\n  if (visibleSibling) {\n    visibleSibling.after(block.value)\n  } else {\n    const parent = findParentDOMElement(block)\n    parent!.prepend(block.value)\n  }\n  block.visible = true\n}\n\n//@ts-expect-error\nexport const onMount = createEvent<{\n  fns: Array<(node: DOMElement) => (() => void) | void>\n  element: DOMElement\n}>({named: 'onMount'})\n\nonMount.watch(({fns, element}) => {\n  fns.forEach(fn => {\n    fn(element)\n  })\n})\n","import {Store, Event, sample} from 'effector'\n\nexport function mutualSample<Mount, State, T>({\n  mount,\n  state,\n  onMount,\n  onState,\n}: {\n  mount: Event<Mount>\n  state: Store<State>\n  onMount: (state: State, mount: Mount) => T\n  onState: (mount: Mount, state: State) => T\n}): {\n  onMount: Event<T>\n  onState: Event<T>\n} {\n  return {\n    onMount: sample({\n      source: state,\n      clock: mount,\n      fn: onMount,\n      greedy: true,\n    }),\n    onState: sample({\n      source: mount,\n      clock: state,\n      fn: onState,\n      greedy: true,\n    }),\n  }\n}\n","export function forIn<T extends Record<string, unknown>>(\n  obj: T,\n  cb: (value: T[keyof T], key: Exclude<keyof T, number>) => void,\n) {\n  for (const key in obj) {\n    cb(obj[key], key as any)\n  }\n}\n","import {Event, is} from 'effector'\n\nimport {currentTemplate} from '../template'\nimport {assert} from '../assert'\n\nexport function handler(\n  map: Partial<\n    {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n  >,\n): void\nexport function handler(\n  options: {\n    passive?: boolean\n    capture?: boolean\n    prevent?: boolean\n    stop?: boolean\n  },\n  map: Partial<\n    {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n  >,\n): void\nexport function handler(options: any, map?: any) {\n  if (!currentTemplate) return\n  const draft = currentTemplate.draft\n  assert(\n    draft.type === 'element',\n    `\"handler\" extension can be used only with element nodes, got \"${draft.type}\"`,\n  )\n  if (map === undefined) {\n    map = options\n    options = {}\n  }\n  for (const key in map) {\n    assert(is.unit(map[key]), `handler for \"${key}\" should be event`)\n  }\n  const {\n    passive = false,\n    capture = false,\n    prevent = false,\n    stop = false,\n  } = options\n  draft.handler.push({\n    options: {\n      prevent,\n      stop,\n    },\n    domConfig: {\n      passive: prevent ? false : passive,\n      capture,\n    },\n    map,\n  })\n}\n","import type {Store, Event} from 'effector'\n\nimport type {\n  PropertyMap,\n  StoreOrData,\n  DOMProperty,\n  StylePropertyMap,\n} from '../index.h'\n\nimport {escapeTag} from '../bindings'\nimport {currentTemplate} from '../template'\nimport {assertClosure} from '../assert'\nimport {handler} from './handler'\n\nexport function spec(config: {\n  attr?: PropertyMap\n  data?: PropertyMap\n  text?: StoreOrData<DOMProperty> | Array<StoreOrData<DOMProperty>>\n  style?: StylePropertyMap\n  styleVar?: PropertyMap\n  visible?: Store<boolean>\n  handler?:\n    | {\n        config?: {\n          passive?: boolean\n          capture?: boolean\n          prevent?: boolean\n          stop?: boolean\n        }\n        on: Partial<\n          {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n        >\n      }\n    | Partial<{[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}>\n  ɔ?: any\n}) {\n  assertClosure(currentTemplate, 'spec')\n  const draft = currentTemplate.draft\n  switch (draft.type) {\n    case 'list':\n      if (config.visible) draft.itemVisible = config.visible\n      return\n    case 'listItem':\n    case 'using':\n    case 'route':\n    case 'rec':\n    case 'recItem':\n    case 'block':\n    case 'blockItem':\n      return\n  }\n  if (config.attr) draft.attr.push(config.attr)\n  if (config.data) draft.data.push(config.data)\n  if ('text' in config) {\n    const text = config.text\n    const firstIndex = draft.childCount\n    if (Array.isArray(text)) {\n      draft.text.push(\n        ...text.map((value, i) => ({\n          index: i + firstIndex,\n          value,\n        })),\n      )\n      draft.childCount += text.length\n    } else {\n      draft.text.push({\n        index: firstIndex,\n        value: text!,\n      })\n      draft.childCount += 1\n    }\n  }\n  if (config.style) {\n    const escaped = {} as StylePropertyMap\n    for (const field in config.style) {\n      //@ts-expect-error\n      escaped[escapeTag(field)] = config.style[field]\n    }\n    draft.style.push(escaped)\n  }\n  if (config.styleVar) draft.styleVar.push(config.styleVar)\n  if (config.visible) draft.visible = config.visible\n  if (config.handler) {\n    const handlerDef = config.handler\n    //@ts-expect-error\n    if (typeof handlerDef.on === 'object') {\n      //@ts-expect-error\n      handler(handlerDef.config || {}, handlerDef.on)\n    } else {\n      //@ts-expect-error\n      handler(handlerDef)\n    }\n  }\n  if (config.ɔ) {\n    spec(config.ɔ)\n  }\n}\n","import {Store, Event, is, launch, createEvent, sample, merge} from 'effector'\n\nimport type {StateRef} from '../../effector/index.h'\n\nimport type {\n  DOMElement,\n  ElementDraft,\n  NSType,\n  PropertyMap,\n  StoreOrData,\n  DOMProperty,\n  StylePropertyMap,\n  Leaf,\n  LeafDataElement,\n  Template,\n  HandlerRecord,\n  PropertyOperationDef,\n  PropertyOperationKind,\n} from '../index.h'\n\nimport type {ElementBlock, TextBlock} from '../relation.h'\n\nimport {pushOpToQueue, forceSetOpValue, createOp} from '../plan'\n\nimport {\n  applyStyle,\n  applyStyleVar,\n  applyDataAttr,\n  applyAttr,\n  applyText,\n  applyStaticOps,\n} from '../bindings'\nimport {createTemplate, currentTemplate} from '../template'\nimport {\n  findParentDOMElement,\n  findPreviousVisibleSibling,\n  findPreviousVisibleSiblingBlock,\n} from '../search'\nimport {\n  appendChild,\n  onMount as onMountSync,\n  mountChildTemplates,\n  setInParentIndex,\n} from '../mountChild'\nimport {assertClosure} from '../assert'\nimport {mutualSample} from '../mutualSample'\nimport {forIn} from '../forIn'\nimport {spec} from './spec'\n\nfunction createPropsOp<T, S>(\n  draft: ElementDraft,\n  {\n    initCtx,\n    runOp,\n    hooks: {onMount, onState},\n  }: {\n    initCtx(value: T, leaf: Leaf): S\n    runOp(value: T, ctx: S): void\n    hooks: {\n      onMount: Event<{leaf: Leaf; value: T}>\n      onState: Event<{leaf: Leaf; value: T}>\n    }\n  },\n) {\n  const opID = draft.opsAmount++\n  onMount.watch(({value, leaf}) => {\n    const op = createOp({\n      value,\n      priority: 'props',\n      runOp(value) {\n        runOp(value, ctx)\n      },\n      group: leaf.root.leafOps[leaf.fullID].group,\n    })\n    leaf.root.leafOps[leaf.fullID].group.ops[opID] = op\n    const ctx = initCtx(value, leaf)\n  })\n  onState.watch(({value, leaf}) => {\n    pushOpToQueue(value, leaf.root.leafOps[leaf.fullID].group.ops[opID])\n  })\n}\n\nconst syncOperations: Array<{\n  field: string\n  type: PropertyOperationKind\n}> = [\n  {type: 'attr', field: 'value'},\n  {type: 'attr', field: 'checked'},\n  {type: 'attr', field: 'min'},\n  {type: 'attr', field: 'max'},\n]\n\nconst propertyOperationBinding: Record<\n  PropertyOperationKind,\n  (\n    element: DOMElement,\n    field: string,\n    value: string | number | boolean | null,\n  ) => void\n> = {\n  attr: applyAttr,\n  data: applyDataAttr,\n  style: applyStyle,\n  styleVar: applyStyleVar,\n}\n\nconst readElement = (leaf: Leaf) => (leaf.data as LeafDataElement).block.value\n\n/** operation family for things represented as <el \"thing\"=\"value\" /> */\nfunction propertyMapToOpDef(\n  draft: ElementDraft,\n  type: PropertyOperationKind,\n  ops: {\n    attr: PropertyMap\n    data: PropertyMap\n    style: StylePropertyMap\n    styleVar: PropertyMap\n  },\n) {\n  draft[type].forEach(record => {\n    forIn(record as unknown as PropertyMap, (value, key) => {\n      switch (type) {\n        case 'data':\n        case 'styleVar':\n          ops[type][key] = value\n          break\n        case 'attr':\n          ops.attr[key === 'xlink:href' ? 'href' : key] = value\n          break\n        case 'style':\n          if (key.startsWith('--')) {\n            ops.styleVar[key.slice(2)] = value\n          } else {\n            //@ts-expect-error inconsistency in StylePropertyMap key type\n            ops.style[key] = value\n          }\n          break\n      }\n    })\n  })\n}\n\nfunction installTextNode(leaf: Leaf, value: string, childIndex: number) {\n  const parentBlock = leaf.data.block as ElementBlock\n  const textBlock: TextBlock = {\n    type: 'text',\n    parent: parentBlock,\n    visible: false,\n    index: childIndex,\n    //@ts-expect-error\n    value: null,\n  }\n  parentBlock.child[childIndex] = textBlock\n  if (leaf.hydration) {\n    const siblingBlock = findPreviousVisibleSiblingBlock(textBlock)\n    if (siblingBlock) {\n      switch (siblingBlock.type) {\n        case 'text': {\n          textBlock.value = leaf.root.env.document.createTextNode(value)\n          siblingBlock.value.after(textBlock.value)\n          break\n        }\n        case 'element': {\n          textBlock.value = siblingBlock.value.nextSibling! as Text\n          applyText(textBlock.value, value)\n          break\n        }\n      }\n    } else {\n      const parentElement = findParentDOMElement(textBlock)\n      textBlock.value = parentElement!.firstChild! as Text\n      applyText(textBlock.value, value)\n    }\n    textBlock.visible = true\n  } else {\n    textBlock.value = leaf.root.env.document.createTextNode(value)\n    appendChild(textBlock)\n  }\n  return textBlock\n}\n\nfunction processStoreRef(store: Store<any>) {\n  //@ts-expect-error\n  const ref: StateRef = store.stateRef\n  const templ: Template = currentTemplate!\n  if (!templ.plain.includes(ref) && !templ.closure.includes(ref)) {\n    templ.closure.push(ref)\n  }\n}\nexport function h(tag: string): void\nexport function h(tag: string, cb: () => void): void\nexport function h(\n  tag: string,\n  spec: {\n    fn?: () => void\n    attr?: PropertyMap\n    data?: PropertyMap\n    text?: StoreOrData<DOMProperty> | Array<StoreOrData<DOMProperty>>\n    visible?: Store<boolean>\n    style?: StylePropertyMap\n    styleVar?: PropertyMap\n    handler?:\n      | {\n          config?: {\n            passive?: boolean\n            capture?: boolean\n            prevent?: boolean\n            stop?: boolean\n          }\n          on: Partial<\n            {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n          >\n        }\n      | Partial<\n          {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n        >\n  },\n): void\nexport function h(tag: string, opts?: any) {\n  let hasCb = false\n  let hasOpts = false\n  let cb: () => void\n  if (typeof opts === 'function') {\n    hasCb = true\n    cb = opts\n  } else {\n    if (opts) {\n      hasOpts = true\n      if (opts.fn) {\n        hasCb = true\n        cb = opts.fn\n      }\n      if (opts.ɔ) {\n        if (typeof opts.ɔ === 'function') {\n          hasCb = true\n          cb = opts.ɔ\n        } else if (typeof opts.ɔ.fn === 'function') {\n          hasCb = true\n          cb = opts.ɔ.fn\n        }\n      }\n    }\n  }\n  assertClosure(currentTemplate, 'h')\n  const env = currentTemplate.env\n  const parentNS = currentTemplate.namespace\n  let ns: NSType = parentNS\n  let type = 'html'\n  ns = type = parentNS === 'svg' ? 'svg' : 'html'\n  if (tag === 'svg') {\n    type = 'svg'\n    ns = 'svg'\n  }\n  let node: DOMElement\n  if (!currentTemplate.isBlock) {\n    node =\n      type === 'svg'\n        ? env.document.createElementNS('http://www.w3.org/2000/svg', tag)\n        : env.document.createElement(tag)\n  }\n  const stencil = node!\n  const draft: ElementDraft = {\n    type: 'element',\n    tag,\n    attr: [],\n    data: [],\n    text: [],\n    style: [],\n    styleVar: [],\n    handler: [],\n    stencil,\n    seq: [],\n    staticSeq: [],\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: -1,\n    opsAmount: 1,\n    node: [],\n  }\n  if (parentNS === 'foreignObject') {\n    draft.attr.push({\n      xmlns: 'http://www.w3.org/1999/xhtml',\n    })\n    ns = 'html'\n  } else if (tag === 'svg') {\n    draft.attr.push({\n      xmlns: 'http://www.w3.org/2000/svg',\n    })\n    ns = 'svg'\n  } else if (tag === 'foreignObject') {\n    ns = 'foreignObject'\n  }\n\n  const elementTemplate = createTemplate({\n    name: 'element',\n    draft,\n    isSvgRoot: tag === 'svg',\n    namespace: ns,\n    fn(_, {mount}) {\n      //@ts-expect-error\n      const domElementCreated = createEvent<Leaf>({named: 'domElementCreated'})\n\n      if (hasCb) {\n        cb()\n      }\n      if (hasOpts) {\n        spec(opts)\n      }\n      if (is.unit(draft.visible)) {\n        draft.seq.push({type: 'visible', value: draft.visible})\n        processStoreRef(draft.visible)\n      }\n      const ops: {\n        attr: PropertyMap\n        data: PropertyMap\n        style: StylePropertyMap\n        styleVar: PropertyMap\n      } = {\n        attr: {},\n        data: {},\n        style: {},\n        styleVar: {},\n      }\n      propertyMapToOpDef(draft, 'attr', ops)\n      propertyMapToOpDef(draft, 'data', ops)\n      propertyMapToOpDef(draft, 'style', ops)\n      propertyMapToOpDef(draft, 'styleVar', ops)\n      forIn(ops, (opsMap, type) => {\n        forIn(opsMap as unknown as PropertyMap, (value, field) => {\n          if (is.unit(value)) {\n            draft.seq.push({type, field, value})\n            processStoreRef(value)\n          } else {\n            draft.staticSeq.push({type, field, value})\n          }\n        })\n      })\n      draft.text.forEach(item => {\n        if (item.value === null) return\n        if (is.unit(item.value)) {\n          draft.seq.push({\n            type: 'dynamicText',\n            value: item.value,\n            childIndex: item.index,\n          })\n          processStoreRef(item.value)\n        } else {\n          draft.seq.push({\n            type: 'staticText',\n            value: String(item.value),\n            childIndex: item.index,\n          })\n        }\n      })\n      draft.handler.forEach(item => {\n        forIn(item.map, (handler, key) => {\n          draft.seq.push({\n            type: 'handler',\n            for: key,\n            //@ts-expect-error\n            handler,\n            options: item.options,\n            domConfig: item.domConfig,\n          })\n        })\n      })\n      if (stencil) applyStaticOps(stencil, draft.staticSeq)\n      draft.seq.forEach(item => {\n        switch (item.type) {\n          case 'visible': {\n            const {onMount, onState} = mutualSample({\n              mount,\n              state: item.value,\n              onMount: (value, leaf) => ({\n                leaf,\n                value,\n                hydration: leaf.hydration,\n              }),\n              onState: (leaf, value) => ({leaf, value, hydration: false}),\n            })\n            onMount.watch(({leaf, value, hydration}) => {\n              const leafData = leaf.data as LeafDataElement\n              const visibleOp = leafData.ops.visible\n              const parentBlock = leafData.block\n              if (hydration) {\n                forceSetOpValue(value, visibleOp)\n                if (value) {\n                  const visibleSibling = findPreviousVisibleSibling(parentBlock)\n                  let foundElement: DOMElement\n                  if (visibleSibling) {\n                    foundElement = visibleSibling.nextSibling! as DOMElement\n                  } else {\n                    foundElement = findParentDOMElement(parentBlock)!\n                      .firstChild! as DOMElement\n                  }\n                  if (foundElement.nodeName === '#text') {\n                    const emptyText = foundElement\n                    foundElement = foundElement.nextSibling! as DOMElement\n                    emptyText.remove()\n                  }\n                  parentBlock.value = foundElement\n                  parentBlock.visible = true\n                }\n              }\n              const svgRoot = elementTemplate.isSvgRoot\n                ? (parentBlock.value as SVGSVGElement)\n                : null\n              mountChildTemplates(draft, {\n                parentBlockFragment: parentBlock,\n                leaf,\n                node: parentBlock.value,\n                svgRoot,\n              })\n              if (value) {\n                if (leafData.needToCallNode) {\n                  leafData.needToCallNode = false\n                  launch({\n                    target: onMountSync,\n                    params: {\n                      element: leafData.block.value,\n                      fns: draft.node,\n                    },\n                    page: leaf,\n                    defer: true,\n                    //@ts-expect-error\n                    scope: leaf.root.scope,\n                  })\n                }\n              }\n              launch({\n                target: domElementCreated,\n                params: leaf,\n                defer: true,\n                page: leaf,\n                //@ts-expect-error\n                scope: leaf.root.scope,\n              })\n            })\n            merge([onState, onMount]).watch(({leaf, value, hydration}) => {\n              const leafData = leaf.data as LeafDataElement\n              const visibleOp = leafData.ops.visible\n              if (!hydration) {\n                pushOpToQueue(value, visibleOp)\n              }\n            })\n            break\n          }\n          case 'attr':\n          case 'data':\n          case 'style':\n          case 'styleVar': {\n            const fn = propertyOperationBinding[item.type]\n            const immediate = syncOperations.some(\n              ({type, field}) => item.type === type && item.field === field,\n            )\n            const hooks = mutualSample({\n              mount: domElementCreated,\n              state: item.value,\n              onMount: (value, leaf) => ({leaf, value}),\n              onState: (leaf, value) => ({leaf, value}),\n            })\n            if (immediate) {\n              merge([hooks.onState, hooks.onMount]).watch(({leaf, value}) => {\n                fn(readElement(leaf), item.field, value)\n              })\n            } else {\n              createPropsOp(draft, {\n                initCtx(value: DOMProperty, leaf) {\n                  const element = readElement(leaf)\n                  fn(element, item.field, value)\n                  return element\n                },\n                runOp(value, element: DOMElement) {\n                  fn(element, item.field, value)\n                },\n                hooks,\n              })\n            }\n            break\n          }\n          case 'dynamicText':\n            createPropsOp(draft, {\n              initCtx(value: string, leaf) {\n                return installTextNode(leaf, value, item.childIndex)\n              },\n              runOp(value, ctx: TextBlock) {\n                applyText(ctx.value, value)\n              },\n              hooks: mutualSample({\n                mount: domElementCreated,\n                state: item.value,\n                onMount: (value, leaf) => ({leaf, value: String(value)}),\n                onState: (leaf, value) => ({leaf, value: String(value)}),\n              }),\n            })\n            break\n          case 'staticText':\n            domElementCreated.watch(leaf => {\n              installTextNode(leaf, item.value, item.childIndex)\n            })\n            break\n          case 'handler': {\n            const handlerTemplate: Template | null =\n              //@ts-expect-error\n              item.handler.graphite.meta.nativeTemplate || null\n            domElementCreated.watch(leaf => {\n              let page: Leaf | null = null\n              if (handlerTemplate) {\n                let handlerPageFound = false\n                let currentPage: Leaf | null = leaf\n                while (!handlerPageFound && currentPage) {\n                  if (currentPage.template === handlerTemplate) {\n                    handlerPageFound = true\n                    page = currentPage\n                  } else {\n                    currentPage = currentPage.parent\n                  }\n                }\n              } else {\n                page = null //leaf\n              }\n              readElement(leaf).addEventListener(\n                item.for,\n                value => {\n                  if (item.options.prevent) value.preventDefault()\n                  if (item.options.stop) value.stopPropagation()\n                  launch({\n                    target: item.handler,\n                    params: value,\n                    page,\n                    //@ts-expect-error\n                    scope: leaf.root.scope,\n                  })\n                },\n                item.domConfig,\n              )\n            })\n            break\n          }\n        }\n      })\n      mount.watch(leaf => {\n        const leafData = leaf.data as LeafDataElement\n        if (!draft.visible) {\n          const visibleOp = leafData.ops.visible\n          const parentBlock = leafData.block\n          if (leaf.hydration) {\n            forceSetOpValue(true, visibleOp)\n            const visibleSibling = findPreviousVisibleSibling(parentBlock)\n            let foundElement: DOMElement\n            if (visibleSibling) {\n              foundElement = visibleSibling.nextSibling! as DOMElement\n            } else {\n              foundElement = findParentDOMElement(parentBlock)!\n                .firstChild! as DOMElement\n            }\n            if (foundElement.nodeName === '#text') {\n              const emptyText = foundElement\n              foundElement = foundElement.nextSibling! as DOMElement\n              emptyText.remove()\n            }\n            parentBlock.value = foundElement\n            parentBlock.visible = true\n          }\n          const svgRoot = elementTemplate.isSvgRoot\n            ? (parentBlock.value as SVGSVGElement)\n            : null\n          mountChildTemplates(draft, {\n            parentBlockFragment: parentBlock,\n            leaf,\n            node: parentBlock.value,\n            svgRoot,\n          })\n          launch({\n            target: domElementCreated,\n            params: leaf,\n            defer: true,\n            page: leaf,\n            //@ts-expect-error\n            scope: leaf.root.scope,\n          })\n          if (leaf.hydration) {\n            if (leafData.needToCallNode) {\n              leafData.needToCallNode = false\n              launch({\n                target: onMountSync,\n                params: {\n                  element: leafData.block.value,\n                  fns: draft.node,\n                },\n                page: leaf,\n                defer: true,\n                //@ts-expect-error\n                scope: leaf.root.scope,\n              })\n            }\n          } else {\n            pushOpToQueue(true, visibleOp)\n          }\n        }\n      })\n    },\n    env,\n  })\n  setInParentIndex(elementTemplate)\n}\n","import type {Scope} from '../../effector/unit.h'\n\nimport type {\n  DOMElement,\n  NSType,\n  UsingDraft,\n  Leaf,\n  Root,\n  Template,\n} from '../index.h'\n\nimport type {UsingBlock} from '../relation.h'\n\nimport {createOpGroup, createOpQueue} from '../plan'\n\nimport {createTemplate, spawn, currentLeaf} from '../template'\nimport {assert} from '../assert'\nimport {mountFn} from '../mountFn'\n\nfunction getDefaultEnv(): {\n  document: Document\n} {\n  if (typeof document !== 'undefined') return {document}\n  throw Error('your environment has no document')\n}\nexport function using(node: DOMElement, cb: () => any): void\nexport function using(\n  node: DOMElement,\n  opts: {\n    fn: () => void\n    hydrate?: boolean\n    env?: {\n      document: Document\n    }\n    onComplete?: () => void\n    onRoot?: (config: {template: Template; leaf: Leaf}) => void\n    scope?: Scope\n  },\n): void\nexport function using(node: DOMElement, opts: any): void {\n  let cb: () => any\n  let onComplete: (() => void) | undefined\n  let env: {\n    document: Document\n  }\n  let hydrate: boolean\n  let onRoot: ((config: {template: Template; leaf: Leaf}) => void) | undefined\n  let scope: Scope\n  if (typeof opts === 'function') {\n    cb = opts\n    env = getDefaultEnv()\n    hydrate = false\n  } else if (opts) {\n    cb = opts.fn\n    env = opts.env ? opts.env : getDefaultEnv()\n    hydrate = opts.hydrate\n    onComplete = opts.onComplete\n    onRoot = opts.onRoot\n    scope = opts.scope\n  } else throw Error('using() second argument is missing')\n  assert(node, 'using() first argument is missing')\n  const root: Root = {\n    scope: scope!,\n    env,\n    activeSpawns: new Set(),\n    childSpawns: {},\n    leafOps: {},\n  }\n  const namespaceURI = node.namespaceURI\n  const tag = node.tagName.toLowerCase()\n  const ns: NSType =\n    namespaceURI === 'http://www.w3.org/2000/svg'\n      ? 'svg'\n      : tag === 'foreignobject'\n      ? 'foreignObject'\n      : 'html'\n  const draft: UsingDraft = {\n    type: 'using',\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: -1,\n  }\n  const usingTemplate = createTemplate({\n    name: 'using',\n    draft,\n    isSvgRoot: tag === 'svg',\n    namespace: ns,\n    fn(_, {mount}) {\n      cb()\n      mount.watch(mountFn.using)\n    },\n    env,\n  })\n\n  const usingBlock: UsingBlock = {\n    type: 'using',\n    child: [],\n    value: node,\n  }\n  const queue = createOpQueue({onComplete})\n  const rootLeaf = spawn(usingTemplate, {\n    parentLeaf: currentLeaf || null,\n    mountNode: node,\n    svgRoot: usingTemplate.isSvgRoot\n      ? (node as SVGSVGElement)\n      : currentLeaf\n      ? currentLeaf.svgRoot\n      : null,\n    leafData: {\n      type: 'using',\n      draft,\n      element: node,\n      block: usingBlock,\n    },\n    opGroup: createOpGroup(queue),\n    domSubtree: createOpGroup(queue),\n    hydration: hydrate,\n    root,\n  })\n\n  if (onRoot) {\n    onRoot({\n      template: usingTemplate,\n      leaf: rootLeaf,\n    })\n  }\n  if (queue.onDrain && !queue.rafID) {\n    const rs = queue.onDrain\n    queue.onDrain = null\n    rs()\n  }\n}\n","import {launch} from 'effector'\nimport type {Leaf} from './index.h'\nimport {pushOpToQueue} from './plan'\n\nexport function iterateChildLeafs(leaf: Leaf, cb: (child: Leaf) => void) {\n  const childSpawns = leaf.root.childSpawns[leaf.fullID]\n  for (const key in childSpawns) {\n    const childs = childSpawns[key]\n    for (let i = 0; i < childs.length; i++) {\n      cb(childs[i])\n    }\n  }\n}\n\nexport function changeChildLeafsVisible(visible: boolean, leaf: Leaf) {\n  const childLeafIterator = (child: Leaf) => {\n    const data = child.data\n    if (visible && data.type === 'list' && data.pendingUpdate) {\n      const update = data.pendingUpdate\n      data.pendingUpdate = null\n      launch({\n        target: child.template.api.pendingUpdate,\n        params: update,\n        defer: true,\n        page: child,\n        //@ts-expect-error\n        scope: child.root.scope,\n      })\n    }\n    if (visible && data.type === 'route') {\n      if (data.pendingInit) {\n        const update = data.pendingInit.value\n        data.pendingInit = null\n        launch({\n          target: child.template.api.pendingInit,\n          params: update,\n          defer: true,\n          page: child,\n          //@ts-expect-error\n          scope: child.root.scope,\n        })\n      } else if (!data.block.visible) return\n    }\n    switch (data.type) {\n      case 'element':\n        pushOpToQueue(visible, data.ops.visible)\n        break\n      case 'route':\n      case 'list':\n      case 'list item':\n        iterateChildLeafs(child, childLeafIterator)\n        break\n      default:\n        console.log('unsupported type', data.type)\n    }\n  }\n  iterateChildLeafs(leaf, childLeafIterator)\n}\n","import type {Leaf} from './index.h'\n\nimport {pushOpToQueue} from './plan'\nimport {iterateChildLeafs} from './iterateChildLeafs'\n\nfunction unmountChildLeafsNoEvent(leaf: Leaf) {\n  leaf.root.activeSpawns.delete(leaf.fullID)\n  iterateChildLeafs(leaf, unmountLeafTree)\n}\n\nfunction unmountOwnSpawn(leaf: Leaf) {\n  removeItem(leaf, leaf.root.childSpawns[leaf.parent!.fullID][leaf.template.id])\n  removeItem(leaf, leaf.template.pages)\n}\n\nexport function unmountLeafTree(leaf: Leaf) {\n  const {data, root} = leaf\n  switch (data.type) {\n    case 'element': {\n      removeItem(leaf, root.childSpawns[leaf.parent!.fullID][leaf.template.id])\n      function halt(leaf: Leaf) {\n        root.activeSpawns.delete(leaf.fullID)\n        const childSpawns = root.childSpawns[leaf.fullID]\n        delete root.childSpawns[leaf.fullID]\n        delete root.leafOps[leaf.fullID]\n        removeItem(leaf, leaf.template.pages)\n        for (const id in childSpawns) {\n          childSpawns[id].forEach(halt)\n        }\n      }\n      halt(leaf)\n\n      const visibleOp = data.ops.visible\n      pushOpToQueue(false, visibleOp)\n      break\n    }\n    case 'list': {\n      const records = data.records\n      for (let i = 0; i < records.length; i++) {\n        const item = records[i]\n\n        if (item.instance) {\n          unmountLeafTree(item.instance)\n        }\n        item.active = false\n      }\n      leaf.root.activeSpawns.delete(leaf.fullID)\n      unmountOwnSpawn(leaf)\n      break\n    }\n    case 'list item': {\n      const listItemBlock = data.block\n      removeItem(listItemBlock, listItemBlock.parent.child)\n      const leftBlock = listItemBlock.left\n      const rightBlock = listItemBlock.right\n      if (leftBlock) {\n        leftBlock.right = rightBlock\n        if (!rightBlock && listItemBlock.parent.lastChild === listItemBlock) {\n          listItemBlock.parent.lastChild = leftBlock\n        }\n      }\n      if (rightBlock) {\n        rightBlock.left = leftBlock\n      }\n      if (\n        !leftBlock &&\n        !rightBlock &&\n        listItemBlock.parent.lastChild === listItemBlock\n      ) {\n        listItemBlock.parent.lastChild = null\n      }\n      listItemBlock.left = null\n      listItemBlock.right = null\n      unmountChildLeafsNoEvent(leaf)\n      unmountOwnSpawn(leaf)\n      break\n    }\n    // including route item\n    case 'route':\n      unmountChildLeafsNoEvent(leaf)\n      unmountOwnSpawn(leaf)\n      break\n    case 'block':\n    case 'block item':\n    case 'rec':\n    case 'rec item':\n      unmountChildLeafsNoEvent(leaf)\n      break\n    case 'using':\n      break\n    default: {\n      const _: never = data\n    }\n  }\n  delete root.childSpawns[leaf.fullID]\n  delete root.leafOps[leaf.fullID]\n}\n\nfunction removeItem<T>(item: T, list?: T[]) {\n  if (!list) return\n  const index = list.indexOf(item)\n  if (index !== -1) {\n    list.splice(index, 1)\n  }\n}\n","import type {Store} from 'effector'\n\nexport function remap<T extends {[field: string]: any}, S extends keyof T>(\n  store: Store<T>,\n  key: S,\n): Store<T[S]>\nexport function remap<\n  T extends {[field: string]: any},\n  S extends {[field: number]: keyof T} | {[field: string]: keyof T},\n>(\n  store: Store<T>,\n  shape: S,\n): {[K in keyof S]: S[K] extends keyof T ? Store<T[S[K]]> : never}\n\nexport function remap(\n  store: Store<any>,\n  shape: string | Array<any> | {[field: string]: any},\n) {\n  if (Array.isArray(shape)) {\n    return shape.map(key => store.map(value => value[key]))\n  }\n  if (typeof shape === 'object' && shape !== null) {\n    const result = {} as any\n    for (const key in shape) {\n      const projectedKey = shape[key]\n      result[key] = store.map(\n        typeof projectedKey === 'function'\n          ? value => projectedKey(value)\n          : value => value[projectedKey],\n      )\n    }\n    return result\n  }\n  return store.map(value => value[shape])\n}\n","import {\n  Store,\n  Event,\n  is,\n  launch,\n  createStore,\n  createEvent,\n  sample,\n} from 'effector'\n\nimport type {ListItemType, ListType, LeafDataList, Leaf} from '../index.h'\nimport type {LF} from '../relation.h'\n\nimport {beginMark, endMark} from '../platform/mark'\nimport {\n  createOpGroup,\n  createAsyncValue,\n  stopAsyncValue,\n  updateAsyncValue,\n} from '../plan'\nimport {createTemplate, spawn, currentTemplate} from '../template'\nimport {mountChildTemplates, setInParentIndex} from '../mountChild'\nimport {unmountLeafTree} from '../unmount'\nimport {assertClosure} from '../assert'\nimport {mountFn} from '../mountFn'\nimport {mutualSample} from '../mutualSample'\nimport {changeChildLeafsVisible} from '../iterateChildLeafs'\nimport {remap} from './remap'\n\nexport function list<T, K extends keyof T>(config: {\n  source: Store<T[]>\n  fn: (opts: {store: Store<T>; id: Store<T[K]>}) => void\n  key: T[K] extends string | number | symbol ? K : never\n}): void\nexport function list<T>(config: {\n  source: Store<T[]>\n  fn: (opts: {store: Store<T>; id: Store<number>}) => void\n}): void\nexport function list<T>(\n  source: Store<T[]>,\n  fn: (opts: {store: Store<T>; id: Store<number>}) => void,\n): void\nexport function list<T>(opts: any, maybeFn?: any) {\n  assertClosure(currentTemplate, 'list')\n  if (typeof maybeFn === 'function') {\n    if (is.unit(opts)) {\n      opts = {source: opts, fn: maybeFn}\n    } else {\n      opts.fn = maybeFn\n    }\n  }\n  const {fn: cb, key, source, fields = []} = opts\n  const getID: (item: T, i: number) => string | number | symbol =\n    key !== undefined\n      ? typeof key === 'function'\n        ? key\n        : (item: any, i: number) => item[key]\n      : (item, i) => i\n  const draft: ListType = {\n    type: 'list',\n    key: is.store(opts) ? {type: 'index'} : {type: 'key', key: opts.key},\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: -1,\n  }\n  const {env, namespace} = currentTemplate\n\n  const listTemplate = createTemplate({\n    name: 'list',\n    draft,\n    isSvgRoot: false,\n    namespace,\n    fn(_, {mount}) {\n      const listItemTemplate = createTemplate<{\n        itemUpdater: any\n      }>({\n        name: 'list item',\n        state: {id: -1, store: null},\n        draft,\n        isSvgRoot: false,\n        namespace,\n        fn({id, store}, {mount}) {\n          cb({store, key: id, fields: remap(store, fields)})\n          //@ts-expect-error\n          const itemUpdater = createEvent<any>({named: 'itemUpdater'})\n          store.on(itemUpdater, (_, e) => e)\n          if (draft.itemVisible) {\n            const {onMount: mountAndVisible, onState: onVisibleChanges} =\n              mutualSample({\n                mount,\n                state: draft.itemVisible,\n                onMount: (visible, leaf) => ({visible, leaf}),\n                onState: (leaf, visible) => ({visible, leaf}),\n              })\n            mountAndVisible.watch(({visible, leaf}) => {\n              const parentBlock = leaf.data.block as LF\n              parentBlock.visible = visible\n              parentBlock.childInitialized = visible\n              if (visible) {\n                mountChildTemplates(draft, {\n                  parentBlockFragment: parentBlock,\n                  leaf,\n                })\n              }\n            })\n            onVisibleChanges.watch(({visible, leaf}) => {\n              const parentBlock = leaf.data.block as LF\n              parentBlock.visible = visible\n              if (!parentBlock.childInitialized) {\n                if (visible) {\n                  parentBlock.childInitialized = true\n                  mountChildTemplates(draft, {\n                    parentBlockFragment: parentBlock,\n                    leaf,\n                  })\n                }\n                return\n              }\n              changeChildLeafsVisible(visible, leaf)\n            })\n          } else {\n            mount.watch(mountFn.listItem)\n          }\n          return {\n            itemUpdater,\n          }\n        },\n        env,\n      })\n      const updates = createStore<ListItemType[]>([])\n      const mappedUpdates = source.map((x: any) => x)\n      const mountData = sample({\n        source: source as Store<T[]>,\n        clock: mount,\n        fn: (data, leaf) => {\n          return {\n            updates: data,\n            leaf,\n            hydration: leaf.hydration,\n          }\n        },\n        greedy: true,\n      })\n\n      const pendingUpdate = createEvent<T[]>()\n      const parentNodeUpdateSpawn = sample({\n        source: mountData,\n        clock: [mappedUpdates, pendingUpdate] as [Store<T[]>, Event<T[]>],\n        fn: ({leaf}, updates: T[]) => ({\n          updates,\n          leaf,\n          hydration: false,\n        }),\n        greedy: true,\n      })\n      sample({\n        source: updates,\n        clock: [mountData, parentNodeUpdateSpawn],\n        greedy: true,\n        fn(\n          records: ListItemType[],\n          {updates: input, leaf, hydration},\n        ): ListItemType[] {\n          const listData = leaf.data as LeafDataList\n          let curLeaf: Leaf | null = leaf\n          while (curLeaf) {\n            if (curLeaf.data.type === 'route' && !curLeaf.data.block.visible) {\n              listData.pendingUpdate = input\n              //@ts-expect-error skip updates\n              return\n            }\n            curLeaf = curLeaf.parent\n          }\n          const parentBlock = listData.block\n          beginMark('list update [' + source.shortName + ']')\n          const skipNode: boolean[] = Array(input.length).fill(false)\n          const keys = input.map(getID)\n          const resultRecords: ListItemType[] = []\n          for (let i = 0; i < records.length; i++) {\n            const record = records[i]\n            const index = keys.indexOf(record.key)\n            if (index !== -1) {\n              resultRecords.push(record)\n              skipNode[index] = true\n              updateAsyncValue(input[index], record.asyncValue)\n            } else {\n              record.active = false\n              if (record.instance) {\n                unmountLeafTree(record.instance)\n              }\n              stopAsyncValue(record.asyncValue)\n            }\n          }\n          for (let i = 0; i < input.length; i++) {\n            if (skipNode[i]) continue\n            const value = input[i]\n            const id = keys[i]\n            const group = createOpGroup(\n              leaf.root.leafOps[leaf.fullID].group.queue,\n            )\n            const listItemBlock: LF = {\n              type: 'LF',\n              parent: parentBlock,\n              child: [],\n              childInitialized: false,\n              visible: false,\n              left: null,\n              right: null,\n            }\n            const item: ListItemType = {\n              type: 'listItem',\n              key: id as string,\n              index: id as number,\n              active: true,\n              leafData: {\n                type: 'list item',\n                block: listItemBlock,\n                listDraft: draft,\n              },\n              asyncValue: createAsyncValue({\n                value,\n                group,\n                onChange(value) {\n                  if (item.instance) {\n                    launch({\n                      target: item.instance.template.api.itemUpdater,\n                      params: value,\n                      defer: true,\n                      page: item.instance,\n                      //@ts-expect-error\n                      scope: item.instance.root.scope,\n                    })\n                  }\n                },\n                onInit(value) {\n                  if (!item.active) return\n                  if (hydration) return\n                  item.instance = spawn(listItemTemplate, {\n                    values: {\n                      id,\n                      store: value,\n                    },\n                    parentLeaf: leaf,\n                    mountNode: leaf.mountNode,\n                    svgRoot: leaf.svgRoot,\n                    leafData: item.leafData,\n                    opGroup: group,\n                    domSubtree: leaf.root.leafOps[leaf.fullID].domSubtree,\n                    hydration,\n                    root: leaf.root,\n                  })\n                },\n              }),\n            }\n            const inParentIndex = resultRecords.length\n            resultRecords.push(item)\n            const leftSibling =\n              inParentIndex > 0\n                ? resultRecords[inParentIndex - 1].leafData\n                : null\n\n            parentBlock.child.push(listItemBlock)\n            if (leftSibling) {\n              const leftBlock = leftSibling.block\n              listItemBlock.left = leftBlock\n              const rightBlock = leftBlock.right\n              if (rightBlock) {\n                rightBlock.left = listItemBlock\n                listItemBlock.right = rightBlock\n              } else {\n                parentBlock.lastChild = listItemBlock\n              }\n              leftBlock.right = listItemBlock\n            } else {\n              parentBlock.lastChild = listItemBlock\n            }\n            if (hydration) {\n              item.instance = spawn(listItemTemplate, {\n                values: {\n                  id,\n                  store: value,\n                },\n                parentLeaf: leaf,\n                mountNode: leaf.mountNode,\n                svgRoot: leaf.svgRoot,\n                leafData: item.leafData,\n                opGroup: group,\n                domSubtree: leaf.root.leafOps[leaf.fullID].domSubtree,\n                hydration,\n                root: leaf.root,\n              })\n            }\n          }\n          endMark('list update [' + source.shortName + ']')\n          if (resultRecords.length === 0) {\n            parentBlock.lastChild = null\n          }\n          listData.records = resultRecords\n          return resultRecords\n        },\n        target: updates,\n      })\n      return {pendingUpdate}\n    },\n    env,\n  })\n  setInParentIndex(listTemplate)\n}\n","import type {DOMElement} from '../index.h'\n\nimport {currentTemplate} from '../template'\n\nimport {assertClosure} from '../assert'\n\nexport function node(cb: (node: DOMElement) => (() => void) | void) {\n  assertClosure(currentTemplate, 'node')\n  const draft = currentTemplate.draft\n  switch (draft.type) {\n    case 'list':\n    case 'listItem':\n    case 'using':\n    case 'route':\n    case 'rec':\n    case 'recItem':\n    case 'block':\n    case 'blockItem':\n      console.error('node() hook supported only in h() nodes')\n      return\n  }\n  draft.node.push(cb)\n}\n","import {Store, is, launch, createEvent, sample, merge, combine} from 'effector'\n\nimport type {Leaf, LeafDataRoute, RouteDraft} from '../index.h'\n\nimport {createTemplate, currentTemplate} from '../template'\nimport {mountChild, setInParentIndex} from '../mountChild'\nimport {assertClosure} from '../assert'\nimport {mountFn} from '../mountFn'\nimport {mutualSample} from '../mutualSample'\nimport {changeChildLeafsVisible} from '../iterateChildLeafs'\n\nexport function route<T>(config: {\n  source: Store<T>\n  visible: (value: T) => boolean\n  fn: (config: {store: Store<T>}) => void\n}): void\nexport function route<T, S extends T>(config: {\n  source: Store<T>\n  visible: (value: T) => value is S\n  fn: (config: {store: Store<S>}) => void\n}): void\nexport function route<T>(config: {\n  source: Store<T>\n  visible: Store<boolean>\n  fn: (config: {store: Store<T>}) => void\n}): void\nexport function route<T>({\n  source,\n  visible,\n  fn,\n}: {\n  source: Store<T>\n  visible: Store<boolean> | ((value: T) => boolean)\n  fn: (config: {store: Store<T>}) => void\n}) {\n  assertClosure(currentTemplate, 'route')\n  const draft: RouteDraft = {\n    type: 'route',\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: -1,\n  }\n  const {env, namespace} = currentTemplate\n  const routeTemplate = createTemplate({\n    name: 'route',\n    isSvgRoot: false,\n    namespace,\n    env,\n    draft,\n    fn(_, {mount}) {\n      let state: Store<{\n        value: T\n        visible: boolean\n      }>\n      if (is.store(visible)) {\n        state = combine({value: source, visible})\n      } else {\n        const visibleFn = visible as (value: T) => boolean\n        state = source.map(value => ({\n          value,\n          visible: visibleFn(value),\n        }))\n      }\n      const childDraft: RouteDraft = {\n        type: 'route',\n        childTemplates: [],\n        childCount: 0,\n        inParentIndex: -1,\n      }\n      const routeItemTemplate = createTemplate({\n        name: 'route item',\n        isSvgRoot: false,\n        namespace,\n        env,\n        draft: childDraft,\n        state: {store: null},\n        fn({store}, {mount}) {\n          //@ts-expect-error\n          const itemUpdater = createEvent<any>({named: 'itemUpdater'})\n          store.on(itemUpdater, (_, upd) => upd)\n          fn({store})\n          const onValueUpdate = sample({\n            source: mount,\n            clock: state,\n            fn: (leaf, {visible, value}) => ({\n              leaf,\n              visible,\n              value,\n            }),\n            greedy: true,\n          })\n          mount.watch(mountFn.routeItem)\n          onValueUpdate.watch(({leaf, visible, value}) => {\n            const data = leaf.data as LeafDataRoute\n            data.block.visible = visible\n            if (visible) {\n              launch({\n                target: itemUpdater,\n                params: value,\n                defer: true,\n                page: leaf,\n                //@ts-expect-error\n                scope: leaf.root.scope,\n              })\n            }\n            if (visible) {\n              let curLeaf: Leaf | null = leaf.parent\n              while (curLeaf) {\n                if (\n                  curLeaf.data.type === 'route' &&\n                  !curLeaf.data.block.visible\n                ) {\n                  // listData.pendingUpdate = input\n                  return\n                }\n                curLeaf = curLeaf.parent\n              }\n            }\n            changeChildLeafsVisible(visible, leaf)\n          })\n        },\n      })\n      setInParentIndex(routeItemTemplate)\n      const {onMount, onState: onVisibleChange} = mutualSample({\n        mount,\n        state,\n        onMount: ({visible, value}, leaf) => ({\n          leaf,\n          visible,\n          value,\n        }),\n        onState: (leaf, {visible, value}) => ({\n          leaf,\n          visible,\n          value,\n        }),\n      })\n      const pendingInit = createEvent<T>()\n      const pendingInitWithData = sample({\n        source: mount,\n        clock: pendingInit,\n        greedy: true,\n        fn: (leaf, value) => ({leaf, value, visible: true}),\n      })\n      merge([onMount, onVisibleChange, pendingInitWithData]).watch(\n        ({leaf, visible, value}) => {\n          const data = leaf.data as LeafDataRoute\n          data.block.visible = visible\n          /** stop pending route initialization if route become invisible */\n          if (!visible && !data.initialized && data.pendingInit) {\n            data.pendingInit = null\n            return\n          }\n          if (visible && !data.initialized) {\n            let curLeaf: Leaf | null = leaf.parent\n            while (curLeaf) {\n              if (\n                curLeaf.data.type === 'route' &&\n                !curLeaf.data.block.visible\n              ) {\n                data.pendingInit = {value}\n                return\n              }\n              curLeaf = curLeaf.parent\n            }\n          }\n          if (visible && !data.initialized) {\n            mountChild({\n              parentBlockFragment: data.block,\n              leaf,\n              actor: routeItemTemplate,\n              values: {store: value},\n            })\n            data.initialized = true\n          }\n        },\n      )\n      return {pendingInit}\n    },\n  })\n  setInParentIndex(routeTemplate)\n}\n","import {Store, is} from 'effector'\n\nimport {currentTemplate} from '../template'\nimport {assert, assertClosure} from '../assert'\n\nimport {route} from './route'\n\nexport function variant<T, K extends keyof T>({\n  source,\n  cases,\n  key,\n}: {\n  source: Store<T>\n  key: K\n  cases: T[K] extends string\n    ? Record<T[K], (config: {store: Store<T>}) => void>\n    : {\n        [caseName: string]: (config: {store: Store<T>}) => void\n        __: (config: {store: Store<T>}) => void\n      }\n}) {\n  assertClosure(currentTemplate, 'variant')\n  assert(is.unit(source), 'variant({source}) should be unit')\n  let keyReader: (value: any) => any\n\n  if (typeof key === 'function') keyReader = key\n  else if (key == null) keyReader = (value: any) => String(value)\n  else keyReader = (value: any) => String(value[key])\n\n  let defaultCase = false\n\n  for (const caseName in cases) {\n    if (caseName === '__') {\n      defaultCase = true\n      continue\n    }\n    route({\n      source,\n      visible: value => keyReader(value) === caseName,\n      fn: cases[caseName],\n    })\n  }\n  if (defaultCase) {\n    const nonDefaultCases = Object.keys(cases)\n    route({\n      source,\n      visible: value => !nonDefaultCases.includes(keyReader(value)),\n      //@ts-expect-error\n      fn: cases.__,\n    })\n  }\n}\n","import {Store, launch, createEvent} from 'effector'\n\nimport type {RecItemDraft, LeafDataRecItem, RecDraft} from '../index.h'\n\nimport {createTemplate, currentTemplate} from '../template'\nimport {mountChild, setInParentIndex} from '../mountChild'\nimport {iterateChildLeafs} from '../iterateChildLeafs'\nimport {assertClosure} from '../assert'\nimport {mountFn} from '../mountFn'\nimport {mutualSample} from '../mutualSample'\n\nexport function rec<T>(config: {\n  fn(config: {store: Store<T>}): void\n}): (opts: {store: Store<T>}) => void\nexport function rec<T>(\n  fn: (config: {store: Store<T>; state?: Store<T>}) => void,\n): (opts: {store: Store<T>; state?: Store<T>}) => void\nexport function rec<T>(\n  fnOrConfig:\n    | {\n        fn(config: {store: Store<T>}): void\n      }\n    | ((config: {store: Store<T>; state?: Store<T>}) => void),\n): (opts: {store: Store<T>; state?: Store<T>}) => void {\n  const fn = typeof fnOrConfig === 'function' ? fnOrConfig : fnOrConfig.fn\n  const recDraft: RecDraft = {\n    type: 'rec',\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: 0,\n  }\n  const recTemplate = createTemplate<{\n    itemUpdater: any\n  }>({\n    name: 'rec',\n    state: {store: null},\n    isSvgRoot: false,\n    //@ts-expect-error\n    namespace: null,\n    //@ts-expect-error\n    env: null,\n    draft: recDraft,\n    defer: true,\n    isBlock: true,\n    fn({store}, {mount}) {\n      fn({store, state: store})\n      //@ts-expect-error\n      const itemUpdater = createEvent<any>({named: 'itemUpdater'})\n      store.on(itemUpdater, (_, e) => e)\n      mount.watch(mountFn.rec)\n      return {itemUpdater}\n    },\n  })\n  return ({store, state = store}) => {\n    assertClosure(currentTemplate, '(rec instance)')\n    const {env, namespace} = currentTemplate\n    if (recTemplate.deferredInit) recTemplate.deferredInit()\n\n    const recItemDraft: RecItemDraft = {\n      type: 'recItem',\n      childTemplates: [],\n      childCount: 0,\n      inParentIndex: -1,\n    }\n    const recItemTemplate = createTemplate({\n      name: 'rec item',\n      isSvgRoot: false,\n      namespace,\n      env,\n      draft: recItemDraft,\n      fn(_, {mount}) {\n        const {onMount, onState} = mutualSample({\n          state,\n          mount,\n          onMount: (state, leaf) => ({state, leaf}),\n          onState: (leaf, state) => ({state, leaf}),\n        })\n        onState.watch(({state, leaf}) => {\n          iterateChildLeafs(leaf, child => {\n            launch({\n              target: child.template.api.itemUpdater,\n              params: state,\n              defer: true,\n              page: leaf,\n              //@ts-expect-error\n              scope: leaf.root.scope,\n            })\n          })\n        })\n        onMount.watch(({leaf, state}) => {\n          const data = leaf.data as LeafDataRecItem\n          mountChild({\n            parentBlockFragment: data.block,\n            leaf,\n            actor: recTemplate,\n            values: {store: state},\n          })\n        })\n      },\n    })\n    setInParentIndex(recItemTemplate)\n  }\n}\n","import type {Store} from 'effector'\n\nimport {rec} from './rec'\nimport {list} from './list'\n\nexport function tree<\n  T,\n  ChildField extends keyof T,\n  // KeyField extends keyof T\n>(config: {\n  source: Store<T[]>\n  // key: T[KeyField] extends string ? KeyField : never\n  child: T[ChildField] extends T[] ? ChildField : never\n  fn: (config: {store: Store<T>; child: () => void}) => void\n}): void\nexport function tree({\n  source,\n  key,\n  child: childField,\n  fn,\n}: {\n  source: Store<any[]>\n  key?: string\n  child: string\n  fn: Function\n}) {\n  const treeRec = rec<any[]>(({store}) => {\n    list({\n      source: store,\n      key: key!,\n      fn({store}) {\n        const childList = store.map(value => value[childField] || [])\n        fn({\n          store,\n          child() {\n            treeRec({\n              store: childList,\n            })\n          },\n        })\n      },\n    })\n  })\n  treeRec({\n    store: source,\n  })\n}\n","import type {NSType, BlockDraft, BlockItemDraft} from '../index.h'\n\nimport {createTemplate, currentTemplate} from '../template'\nimport {assertClosure} from '../assert'\nimport {mountFn} from '../mountFn'\nimport {setInParentIndex} from '../mountChild'\n\nexport function block({\n  fn,\n  env,\n  namespace = 'html',\n}: {\n  fn: () => void\n  env: any\n  namespace?: NSType\n}): () => void {\n  const blockDraft: BlockDraft = {\n    type: 'block',\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: 0,\n  }\n  const blockTemplate = createTemplate({\n    name: 'block',\n    isSvgRoot: false,\n    namespace,\n    env,\n    draft: blockDraft,\n    isBlock: true,\n    fn({}, {mount}) {\n      fn()\n      mount.watch(mountFn.block)\n    },\n  })\n  return () => {\n    assertClosure(currentTemplate, '(block instance)')\n    const blockItemDraft: BlockItemDraft = {\n      type: 'blockItem',\n      childTemplates: [],\n      childCount: 0,\n      inParentIndex: -1,\n      itemOf: blockTemplate,\n    }\n    const {env, namespace} = currentTemplate\n    const blockItemTemplate = createTemplate({\n      name: 'block item',\n      isSvgRoot: false,\n      namespace,\n      env,\n      draft: blockItemDraft,\n      fn(_, {mount}) {\n        mount.watch(mountFn.blockItem)\n      },\n    })\n    setInParentIndex(blockItemTemplate)\n  }\n}\n","import type {StoreOrData, DOMProperty} from './index.h'\n\nexport type Word =\n  | StoreOrData<DOMProperty>\n  | StoreOrData<string>\n  | StoreOrData<number>\n\nexport function createWordsArray(\n  x: TemplateStringsArray,\n  args: Array<Word>,\n): Array<Word> {\n  if (args.length === 0) return x as any\n  const words: Array<Word> = [x[0]]\n  for (let i = 0; i < args.length; i++) {\n    words.push(args[i], x[i + 1])\n  }\n  return words\n}\n","import {spec} from './spec'\nimport {Word, createWordsArray} from '../wordsArray'\n\nexport function text(x: TemplateStringsArray, ...args: Array<Word>) {\n  if (Array.isArray(x)) {\n    spec({text: createWordsArray(x, args) as any})\n  } else {\n    spec({text: x as any})\n  }\n}\n","export let now: () => number\n\nif (typeof performance !== 'undefined' && performance.now) {\n  now = () => performance.now()\n} else if (typeof process !== 'undefined' && process.hrtime) {\n  now = () => {\n    const hr = process.hrtime()\n    return (hr[0] * 1e9 + hr[1]) / 1e6\n  }\n} else {\n  now = () => Date.now()\n}\n","import {USE_PERF} from './env'\nimport {now} from './now'\ntype Bucket = {\n  calls: number\n  time: number\n  label: string\n  childTime: number\n}\nexport const measures = new Map<string, Bucket>()\nconst bucketStack: Array<{bucket: Bucket; pendingStart: number}> = []\nconst startMeasure = (label: string) => {\n  let bucket = measures.get(label)\n  if (!bucket) {\n    bucket = {\n      calls: 0,\n      time: 0,\n      label,\n      childTime: 0,\n    }\n    measures.set(label, bucket)\n  }\n  bucket.calls += 1\n  bucketStack.push({bucket, pendingStart: now()})\n}\nconst endMeasure = (label: string) => {\n  const bucket = measures.get(label)!\n  const pendingStart = bucketStack.pop()!.pendingStart\n  const time = now() - pendingStart\n  bucket.time += time\n\n  if (bucketStack.length > 0) {\n    const parent = bucketStack[bucketStack.length - 1].bucket\n    parent.childTime += time\n  }\n}\n\nexport {startMeasure as perfStart, endMeasure as perfEnd}\n\nexport let beginMark: (label: string) => void\nexport let endMark: (label: string) => void\nif (USE_PERF && typeof performance !== 'undefined' && performance.mark) {\n  beginMark = label => {\n    performance.mark('☄️ ' + label + ' start')\n    startMeasure(label)\n  }\n  endMark = label => {\n    endMeasure(label)\n    try {\n      performance.measure('☄️ ' + label, '☄️ ' + label + ' start')\n    } catch (err) {} // Clear marks immediately to avoid growing buffer.\n\n    performance.clearMarks('☄️ ' + label + ' start')\n    performance.clearMeasures('☄️ ' + label)\n  }\n} else {\n  beginMark = label => {\n    startMeasure(label)\n  }\n  endMark = label => {\n    endMeasure(label)\n  }\n}\n","export const raf =\n  typeof requestAnimationFrame !== 'undefined'\n    ? requestAnimationFrame\n    : (cb: Function) => setTimeout(cb, 0)\n\nexport const cancelRaf: (id: number | NodeJS.Timeout) => void =\n  typeof cancelAnimationFrame !== 'undefined'\n    ? cancelAnimationFrame\n    : clearTimeout\n","import type {StateRef, StateRefOp, Node, Cmd} from '../effector/index.h'\nimport type {TemplateHandlers, Template} from './index.h'\n\nconst addRefOp = (ref: StateRef, op: StateRefOp) => {\n  if (!ref.before) ref.before = []\n  ref.before!.push(op as any)\n}\n\nconst includes = <T>(arr: T[], value: T) => arr.includes(value)\n\nexport const handlers: TemplateHandlers = {\n  storeBase(template: Template, plainState: StateRef) {\n    template.plain.push(plainState)\n  },\n  storeOnMap(\n    template: Template,\n    plainState: StateRef,\n    seq: (Cmd | void)[],\n    fromRef: StateRef | false,\n  ) {\n    seq.unshift(template.loader)\n    seq.push(template.upward)\n    if (fromRef) {\n      if (!includes(template.plain, fromRef)) {\n        //if (!includes(seq, template.loader)) {\n        //  seq.unshift(template.loader)\n        //}\n        if (!includes(template.closure, fromRef)) {\n          template.closure.push(fromRef)\n        }\n        addRefOp(plainState, {\n          type: 'closure',\n          of: fromRef,\n        })\n      }\n    } else {\n      //if (!includes(seq, template.loader)) {\n      //  seq.unshift(template.loader)\n      //}\n    }\n  },\n  storeMap(template: Template, plainState: StateRef, linkNode: Node) {\n    if (\n      !includes(template.plain, plainState) &&\n      !includes(linkNode.seq, template.loader)\n    ) {\n      linkNode.seq.unshift(template.loader)\n    }\n  },\n  storeWatch(\n    template: Template,\n    plainState: StateRef,\n    fn: (value: unknown) => unknown,\n  ) {\n    template.watch.push({of: plainState, fn})\n    return true\n  },\n  eventPrepend(template: Template, contramapped: Node) {\n    contramapped.seq.push(template.upward)\n  },\n  combineBase(template: Template, rawShape: StateRef, isFresh: StateRef) {\n    template.plain.push(rawShape, isFresh)\n  },\n  combineField(template: Template, childRef: StateRef, linkNode: Node) {\n    if (!includes(template.plain, childRef)) {\n      linkNode.seq.unshift(template.loader)\n    }\n  },\n  splitBase(template: Template, lastValues: StateRef) {\n    template.plain.push(lastValues)\n  },\n  splitMatchStore(template: Template, storeRef: StateRef, linkNode: Node) {\n    if (!includes(template.plain, storeRef)) {\n      linkNode.seq.unshift(template.loader)\n    }\n  },\n  sampleStoreSource(template: Template, sourceRef: StateRef) {\n    if (\n      !includes(template.plain, sourceRef) &&\n      !includes(template.closure, sourceRef)\n    ) {\n      template.closure.push(sourceRef)\n    }\n  },\n  sampleNonStoreSource(\n    template: Template,\n    hasSource: StateRef,\n    sourceRef: StateRef,\n    clockState: StateRef,\n  ) {\n    template.plain.push(hasSource, sourceRef, clockState)\n  },\n  sampleTarget(template: Template, target: Node) {\n    target.seq.push(template.loader)\n  },\n  sampleSourceLoader: (template: Template) => template.loader,\n  sampleSourceUpward: (template: Template, isUpward: boolean) =>\n    isUpward && template.upward,\n}\n","import type {\n  Leaf,\n  LeafDataRoute,\n  RouteDraft,\n  RecDraft,\n  LeafDataRec,\n  BlockDraft,\n  BlockItemDraft,\n  LeafDataBlock,\n  LeafDataBlockItem,\n  LeafDataUsing,\n  LeafDataListItem,\n} from './index.h'\n\nimport {mountChild, mountChildTemplates} from './mountChild'\n\nexport const mountFn = {\n  using(leaf: Leaf) {\n    const data = leaf.data as LeafDataUsing\n    const block = data.block\n    mountChildTemplates(data.draft, {\n      parentBlockFragment: block,\n      leaf,\n    })\n  },\n  routeItem(leaf: Leaf) {\n    const draft = leaf.draft as RouteDraft\n    const data = leaf.data as LeafDataRoute\n    data.block.visible = true\n    mountChildTemplates(draft, {\n      parentBlockFragment: data.block,\n      leaf,\n    })\n  },\n  block(leaf: Leaf) {\n    const draft = leaf.draft as BlockDraft\n    const data = leaf.data as LeafDataBlock\n    mountChildTemplates(draft, {\n      parentBlockFragment: data.block,\n      leaf,\n    })\n  },\n  blockItem(leaf: Leaf) {\n    const draft = leaf.draft as BlockItemDraft\n    const data = leaf.data as LeafDataBlockItem\n    mountChild({\n      parentBlockFragment: data.block,\n      leaf,\n      actor: draft.itemOf,\n    })\n  },\n  rec(leaf: Leaf) {\n    const draft = leaf.draft as RecDraft\n    const data = leaf.data as LeafDataRec\n    mountChildTemplates(draft, {\n      parentBlockFragment: data.block,\n      leaf,\n    })\n  },\n  listItem(leaf: Leaf) {\n    const data = leaf.data as LeafDataListItem\n    const block = data.block\n    block.visible = true\n    block.childInitialized = true\n    mountChildTemplates(data.listDraft, {\n      parentBlockFragment: block,\n      leaf,\n    })\n  },\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3)\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} value\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string} type\n * @param {string[]} props\n * @param {object[]} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {string} type\n */\nexport function copy (value, root, type) {\n\treturn node(value, root.root, root.parent, type, root.props, root.children, 0)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } / breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\treturn delimiter(type === 34 || type === 39 ? type : character)\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, trim, from, sizeof, strlen, substr, append, replace} from './Utility.js'\nimport {node, char, next, peek, caret, alloc, dealloc, delimit, whitespace, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// \" ' [ (\n\t\t\tcase 34: case 39: case 91: case 40:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0)\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, length, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import {MS, MOZ, WEBKIT} from './Enum.js'\nimport {hash, charat, strlen, indexof, replace} from './Utility.js'\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {string}\n */\nexport function prefix (value, length) {\n\tswitch (hash(value, length)) {\n\t\t// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\t\tcase 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:\n\t\t// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\t\tcase 5572: case 6356: case 5844: case 3191: case 6645: case 3005:\n\t\t// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\t\tcase 6391: case 5879: case 5623: case 6135: case 4599: case 4855:\n\t\t// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\t\tcase 4215: case 6389: case 5109: case 5365: case 5621: case 3829:\n\t\t\treturn WEBKIT + value + value\n\t\t// appearance, user-select, transform, hyphens, text-size-adjust\n\t\tcase 5349: case 4246: case 4810: case 6968: case 2756:\n\t\t\treturn WEBKIT + value + MOZ + value + MS + value + value\n\t\t// flex, flex-direction\n\t\tcase 6828: case 4268:\n\t\t\treturn WEBKIT + value + MS + value + value\n\t\t// order\n\t\tcase 6165:\n\t\t\treturn WEBKIT + value + MS + 'flex-' + value + value\n\t\t// align-items\n\t\tcase 5187:\n\t\t\treturn WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value\n\t\t// align-self\n\t\tcase 5443:\n\t\t\treturn WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value\n\t\t// align-content\n\t\tcase 4675:\n\t\t\treturn WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value\n\t\t// flex-shrink\n\t\tcase 5548:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value\n\t\t// flex-basis\n\t\tcase 5292:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value\n\t\t// flex-grow\n\t\tcase 6060:\n\t\t\treturn WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value\n\t\t// transition\n\t\tcase 4554:\n\t\t\treturn WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value\n\t\t// cursor\n\t\tcase 6187:\n\t\t\treturn replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value\n\t\t// background, background-image\n\t\tcase 5495: case 3959:\n\t\t\treturn replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1')\n\t\t// justify-content\n\t\tcase 4968:\n\t\t\treturn replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value\n\t\t// (margin|padding)-inline-(start|end)\n\t\tcase 4095: case 3583: case 4068: case 2532:\n\t\t\treturn replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value\n\t\t// (min|max)?(width|height|inline-size|block-size)\n\t\tcase 8116: case 7059: case 5753: case 5535:\n\t\tcase 5445: case 5701: case 4933: case 4677:\n\t\tcase 5533: case 5789: case 5021: case 4765:\n\t\t\t// stretch, max-content, min-content, fill-available\n\t\t\tif (strlen(value) - 1 - length > 6)\n\t\t\t\tswitch (charat(value, length + 1)) {\n\t\t\t\t\t// (m)ax-content, (m)in-content\n\t\t\t\t\tcase 109:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + '$2-$3') + value\n\t\t\t\t\t// (f)ill-available\n\t\t\t\t\tcase 102:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + '$3') + value\n\t\t\t\t\t// (s)tretch\n\t\t\t\t\tcase 115:\n\t\t\t\t\t\treturn prefix(replace(value, 'stretch', 'fill-available'), length) + value\n\t\t\t\t}\n\t\t\tbreak\n\t\t// position: sticky\n\t\tcase 4949:\n\t\t\t// (s)ticky?\n\t\t\tif (charat(value, length + 1) !== 115)\n\t\t\t\tbreak\n\t\t// display: (flex|inline-flex|inline-box)\n\t\tcase 6444:\n\t\t\tswitch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n\t\t\t\t// stic(k)y, inline-b(o)x\n\t\t\t\tcase 107: case 111:\n\t\t\t\t\treturn replace(value, value, WEBKIT + value) + value\n\t\t\t\t// (inline-)?fl(e)x\n\t\t\t\tcase 101:\n\t\t\t\t\treturn replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value\n\t\t\t}\n\t\t\tbreak\n\t\t// writing-mode\n\t\tcase 5936:\n\t\t\tswitch (charat(value, length + 11)) {\n\t\t\t\t// vertical-l(r)\n\t\t\t\tcase 114:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value\n\t\t\t\t// vertical-r(l)\n\t\t\t\tcase 108:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value\n\t\t\t\t// horizontal(-)tb\n\t\t\t\tcase 45:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value\n\t\t\t}\n\n\t\t\treturn WEBKIT + value + MS + value + value\n\t}\n\n\treturn value\n}\n","import {IMPORT, COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (!element.return)\n\t\tswitch (element.type) {\n\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length)\n\t\t\t\tbreak\n\t\t\tcase KEYFRAMES:\n\t\t\t\treturn serialize([copy(replace(element.value, '@', '@' + WEBKIT), element, '')], callback)\n\t\t\tcase RULESET:\n\t\t\t\tif (element.length)\n\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\treturn serialize([copy(replace(value, /:(read-\\w+)/, ':' + MOZ + '$1'), element, '')], callback)\n\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1'), element, ''),\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, ':' + MOZ + '$1'), element, ''),\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, MS + 'input-$1'), element, '')\n\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t})\n\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[index + 1] === 'global')\n\t\t\t\t\t\t\t\tchildren[index + 1] = '', children[index + 2] = '\\f' + substr(children[index + 2], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"forest\");","module.exports = require(\"stylis\");","module.exports = require(\"effector\");","export const domElements = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  // 'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  // 'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  // 'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'marker',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n] as const;\n","import { createEvent, createStore } from 'effector';\nimport { DOMTag, h, node, spec } from 'forest';\nimport { compile, serialize, stringify } from 'stylis';\n\nimport { domElements } from './elements';\n\nconst addStyle = createEvent<{ id: string; styles: string }>();\nconst $styles = createStore<{ map: Map<string, string> }>({ map: new Map() });\n\nexport function StyledRoot(): void {\n  const text = $styles.map(({ map }) => [...map.values()].join(' '));\n  h('style', { text });\n}\n\n$styles.on(addStyle, (state, { id, styles }) => {\n  if (state.map.has(id)) return state;\n  state.map.set(id, make(id, styles));\n  return { map: state.map };\n});\n\nfunction make(id: string, styles: string) {\n  return serialize(compile(`.es-${id} { ${styles} }`), stringify);\n}\n\nconst idCount = () => {\n  let id = 9005000;\n  return () => (++id).toString(36);\n};\n\nconst styledId = idCount();\n\ntype Callback = () => void;\n\nexport type FunctionComponent = (config: Spec | Callback) => void;\n\nexport type Component = FunctionComponent & {\n  STYLED_ID: string;\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction hasStyledId(fn: object | Function): fn is { STYLED_ID: string } {\n  // eslint-disable-next-line dot-notation\n  return typeof fn['STYLED_ID'] === 'string';\n}\n\nfunction join(\n  strings: TemplateStringsArray,\n  interps: (string | FunctionComponent | Component | number)[],\n) {\n  const result = [strings[0]];\n  interps.forEach((part, index) => {\n    if (typeof part === 'function') {\n      if (hasStyledId(part)) {\n        result.push(`.es-${part.STYLED_ID}`);\n      } else {\n        throw new TypeError('Passed not an effector styled component');\n      }\n    } else {\n      result.push(String(part));\n    }\n    result.push(strings[index + 1]);\n  });\n\n  return result.join('');\n}\n\nexport type Spec = Parameters<typeof spec>[0] & { fn?: Callback };\n\ntype Creator = (\n  content: TemplateStringsArray,\n  ...interpolations: (string | Component | number)[]\n) => Component;\n\ntype TagFabric = (tag: DOMTag) => Creator;\n\ntype TagMap = {\n  [P in DOMTag]: Creator;\n};\n\nconst fabric: TagFabric & Partial<TagMap> = (tag: DOMTag) => (\n  content,\n  ...interpolations\n) => {\n  const id = styledId();\n\n  const styles = join(content, interpolations);\n\n  const Component = (config: Spec | Callback) => {\n    addStyle({ id, styles });\n\n    h(tag, () => {\n      node((reference) => {\n        reference.classList.add(`es-${id}`);\n      });\n      if (config) {\n        if (typeof config === 'function') {\n          config();\n        } else {\n          spec(config);\n          if (typeof config.fn === 'function') {\n            config.fn();\n          }\n        }\n      }\n    });\n  };\n\n  Component.STYLED_ID = id;\n\n  return Component;\n};\n\ndomElements.forEach((element) => {\n  fabric[element] = fabric(element);\n});\n\nexport const styled = fabric as TagFabric & TagMap;\n","import { styled, Spec } from 'foliage';\nimport { spec } from 'forest';\n\nexport const Container = styled.div`\n  --primary: #ff8c00;\n  --primary-light: #ffb152;\n  --primary-dark: #c86e00;\n  --primary-text: #fff;\n\n  --text: #404040;\n  --border: #dadada;\n  --shadow: 0 4px 20px 4px rgba(0, 0, 0, 0.1);\n\n  --scrollbar: var(--primary-light);\n\n  --tabs-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);\n\n  --tab-bg: #fff;\n  --tab-text: #606060;\n  --tab-text-active: var(--primary);\n  --tab-shadow-active: var(--primary);\n\n  --content-bg: #f9f9f9;\n\n  --code-var: #ff8c00;\n  --code-func: #249ec6;\n  --code-string: #00a153;\n  --code-bool: #ff62d3;\n  --code-number: #7a70f3;\n  --code-date: #333;\n  --code-regexp: #95b70e;\n\n  @media (prefers-color-scheme: dark) {\n    --text: #ddd;\n    --border: #111;\n    --shadow: 0 4px 20px 4px rgba(0, 0, 0, 0.1);\n\n    --scrollbar: var(--primary);\n\n    --tabs-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n\n    --tab-bg: #444;\n    --tab-text: #ddd;\n    --tab-text-active: var(--primary);\n    --tab-shadow-active: var(--primary);\n\n    --content-bg: #333;\n\n    --code-var: #ff8c00;\n    --code-func: #a5d4e2;\n    --code-string: #2cb472;\n    --code-bool: #ff62d3;\n    --code-number: #9990ff;\n    --code-date: #fff;\n    --code-regexp: #e5ff7e;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--scrollbar);\n  }\n\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  ::-webkit-scrollbar:horizontal {\n    height: 6px;\n  }\n\n  position: fixed;\n  top: 64px;\n  right: 64px;\n  bottom: 64px;\n  z-index: 1000;\n\n  display: flex;\n  flex-direction: row;\n  width: 736px;\n  min-width: 400px;\n  max-width: 90%;\n\n  color: var(--text);\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Apple Color Emoji',\n    'Segoe UI Emoji', 'Segoe UI Symbol', 'PT Sans', Helvetica, Arial, sans-serif;\n  line-height: 1.5;\n\n  background-color: var(--bg);\n  border-radius: 8px;\n  box-shadow: var(--shadow);\n\n  user-select: none;\n\n  color-scheme: light dark;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n\n  @media screen and (max-width: 700px) {\n    max-width: 480px;\n  }\n`;\n\nexport const DragHandler = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  width: 8px;\n  margin-top: 48px;\n  margin-bottom: 48px;\n  margin-left: -10px;\n\n  color: var(--primary);\n  font-size: 14px;\n  font-family: monospace;\n  line-height: 6px;\n  word-break: break-all;\n\n  background-color: var(--bg);\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  cursor: col-resize;\n\n  &:hover,\n  &[data-active='true'] {\n    color: var(--bg);\n\n    background-color: var(--primary);\n  }\n`;\n\nexport const Section = styled.section`\n  position: relative;\n\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n\n  border-radius: inherit;\n`;\n\nexport const SectionHead = styled.div`\n  position: sticky;\n  top: 0;\n  right: 0;\n  left: 0;\n\n  display: flex;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n\n  background-color: var(--tab-bg);\n  border-bottom: 1px solid var(--border);\n  border-radius: inherit;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n  box-shadow: var(--tabs-shadow);\n`;\n\nexport const SectionTab = styled.div`\n  padding: 8px 16px;\n\n  color: var(--tab-text);\n\n  border-radius: inherit;\n  border-top-right-radius: 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: inset 0 -2px 0 0 var(--tab-shadow-active);\n  }\n\n  &:not(:first-child) {\n    border-top-left-radius: 0;\n  }\n\n  &[data-active='true'] {\n    color: var(--tab-text-active);\n\n    box-shadow: inset 0 -2px 0 0 var(--tab-shadow-active);\n  }\n`;\n\nexport const SectionContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-y: auto;\n\n  background-color: var(--content-bg);\n`;\n\nexport const NodeList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  margin: 0 0;\n  padding: 0 0;\n  overflow-x: auto;\n\n  list-style-type: none;\n`;\n\nexport const Node = styled.li`\n  display: flex;\n  margin: 0 0;\n  padding: 6px 10px;\n\n  font-size: 12px;\n  line-height: 1.3;\n`;\n\nexport const NodeTitle = styled.pre`\n  display: flex;\n  margin: 0 0;\n\n  color: var(--code-var);\n  font-family: 'JetBrains Mono', hasklig, monofur, monospace;\n`;\n\nexport const NodeContent = styled.pre`\n  margin: 0 0;\n\n  color: var(--code-func);\n  font-family: 'JetBrains Mono', hasklig, monofur, monospace;\n`;\n\nexport const NodeButton = styled.button`\n  margin: 0;\n  margin-left: 1rem;\n  padding: 0.2rem 0.4rem;\n\n  color: var(--primary-text);\n  font-family: 'JetBrains Mono', hasklig, monofur, monospace;\n\n  background-color: var(--primary);\n  border: var(--primary);\n  border-radius: 4px;\n\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 0 1px var(--primary-dark), 0 0 3px 0 var(--primary-dark);\n  }\n\n  &:hover {\n    background-color: var(--primary-dark);\n  }\n`;\n\nexport const ListItem = styled.span`\n  display: inline-block;\n\n  [data-opened='true'] > & {\n    display: block;\n    padding-left: 8px;\n  }\n\n  &[data-hidden='folded'] {\n    display: none;\n\n    [data-opened='true'] > & {\n      display: block;\n    }\n  }\n\n  &[data-hidden='expanded'] {\n    display: inline-block;\n\n    [data-opened='true'] > & {\n      display: none;\n    }\n  }\n\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n`;\n\nconst boolean = styled.span`\n  color: var(--code-bool);\n  font-style: italic;\n`;\n\nconst number = styled.span`\n  color: var(--code-number);\n`;\n\nconst string = styled.span`\n  color: var(--code-string);\n`;\n\nconst nullable = styled.span`\n  color: var(--code-number);\n  font-weight: bold;\n`;\n\nconst date = styled.span`\n  color: var(--code-date);\n`;\n\nconst symbol = styled.span`\n  /* nothing here */\n`;\n\nconst regexp = styled.span`\n  color: var(--code-regexp);\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  * + * {\n    margin-left: 0.5rem;\n  }\n`;\n\nexport const Content = {\n  boolean,\n  date,\n  keyword: nullable,\n  number,\n  string,\n  symbol,\n  regexp,\n};\n\nexport const Panel = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  padding: 1rem;\n`;\n\nconst Check = styled.input`\n  /* nothing here */\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-shrink: 0;\n  padding: 0 0.5rem;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-shrink: 0;\n  margin: 0 0.5rem;\n  padding: 0 0.5rem;\n\n  border: 1px solid var(--border);\n  border-radius: 0.2rem;\n\n  &:focus {\n    border-color: var(--primary);\n    outline: 0;\n    box-shadow: 0 0 0 1px var(--primary);\n  }\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Checkbox = (arg: Spec & { title: string }) => {\n  const { title, ...config } = arg;\n\n  Label(() => {\n    Check(() => {\n      spec({ attr: { type: 'checkbox' } });\n      spec(config);\n    });\n    spec({ text: title });\n  });\n};\n\nexport const Select = styled.select``;\n","import { createEvent } from 'effector';\n\nconst PREFIX = (0xeffec ** 2).toString(36);\n\nfunction read(name: string, defaultValue: string): string {\n  return localStorage.getItem(`${PREFIX}-${name}`) ?? defaultValue;\n}\n\nfunction write(name: string, value: string): string {\n  localStorage.setItem(`${PREFIX}-${name}`, value);\n  return value;\n}\n\nexport function createSetting(name: string, defaultValue: string) {\n  const save = createEvent<string>();\n  save.watch((value) => write(name, value));\n  return {\n    read: () => read(name, defaultValue),\n    write: (value: string) => write(name, value),\n    save,\n  };\n}\n\nexport function createJsonSetting<T>(name: string, defaultValue: T) {\n  const save = createEvent<T>();\n  save.watch((value) => write(name, JSON.stringify(value)));\n  return {\n    read: (): T => JSON.parse(read(name, JSON.stringify(defaultValue))),\n    write: (value: T): T => {\n      write(name, JSON.stringify(value));\n      return value;\n    },\n    save,\n  };\n}\n","import { Store, Event, createEvent, restore } from 'effector';\nimport { Section, SectionHead, SectionTab, SectionContent } from './components';\nimport { createSetting } from './setting';\n\ntype TabConfig<T> = {\n  title: string | Store<string>;\n  fn: (_: { changeTab: Event<T> }) => void;\n};\ntype TabsConfig<Keys extends string> = Record<Keys, TabConfig<Keys>>;\n\nexport function Tabs<Keys extends string>(tabs: TabsConfig<Keys>) {\n  const tabList = Object.keys(tabs) as Keys[];\n  const firstTab = tabList[0];\n\n  const lastTab = createSetting('last-tab', firstTab);\n  const savedTab = lastTab.read() as Keys;\n  const initialTab = tabList.includes(savedTab) ? savedTab : firstTab;\n\n  const changeTab = createEvent<Keys>();\n  const $tab = restore(changeTab, initialTab);\n\n  $tab.watch(lastTab.write);\n\n  Section(() => {\n    SectionHead(() => {\n      for (const key of tabList) {\n        const tab = tabs[key];\n\n        SectionTab({\n          text: tab.title,\n          data: {\n            active: $tab.map((current) => current === key),\n          },\n          handler: { click: changeTab.prepend(() => key) },\n        });\n      }\n    });\n    for (const key of tabList) {\n      const tab = tabs[key];\n\n      SectionContent({\n        visible: $tab.map((current) => current === key),\n        fn() {\n          tab.fn({ changeTab });\n        },\n      });\n    }\n  });\n}\n","import { Store, createEvent, createStore, combine } from 'effector';\nimport { list, h, variant, spec, rec, handler, remap } from 'forest';\n\nimport { Content, ListItem } from './components';\n\nconst typeRegexp = /\\[object ([\\w\\s]+)\\]/;\n\nfunction getType(value: unknown): 'unknown' | string {\n  const typeString = Object.prototype.toString.call(value);\n  const match = typeRegexp.exec(typeString);\n  return match ? match[1] : 'unknown';\n}\n\nexport function ObjectView<T extends any>(_: { value: Store<T> }): void {\n  const Value = rec<{ value: any; key: string; parentOpened: boolean }>(({ store: $props }) => {\n    const [$value, $parentOpened] = remap($props, ['value', 'parentOpened']);\n\n    const foldableClicked = createEvent<MouseEvent>();\n    const $localOpened = createStore(false).on(foldableClicked, (opened) => !opened);\n\n    const $opened = combine($parentOpened, $localOpened, (parent, local) =>\n      parent === true ? local : false,\n    );\n\n    variant({\n      source: combine($value, $opened, (value, opened) => ({\n        type: getType(value),\n        value,\n        opened,\n      })),\n      key: 'type',\n      cases: {\n        //#region\n        String: ({ store }) => Content.string({ text: ['\"', remap(store, 'value'), '\"'] }),\n        Number: ({ store }) => Content.number({ text: remap(store, 'value') }),\n        BigInt: ({ store }) =>\n          Content.number({\n            text: [remap(store, 'value'), 'n'],\n            attr: { title: 'BigInt' },\n          }),\n        Boolean: ({ store }) => Content.boolean({ text: remap(store, 'value') }),\n        Null: () => Content.keyword({ text: 'null' }),\n        Undefined: () => Content.keyword({ text: 'undefined' }),\n        Symbol: ({ store }) => Content.symbol({ text: remap(store, 'value') }),\n\n        RegExp({ store: $variantSource }) {\n          const $value = remap($variantSource, 'value') as Store<RegExp>;\n          const [$source, $flags] = remap($value, ['source', 'flags']);\n\n          Content.regexp({ text: ['/', $source, '/', $flags] });\n        },\n\n        Function({ store: $variantSource }) {\n          const $value = remap($variantSource, 'value') as Store<Function>;\n          const attr = { title: $value.map((ƒ) => ƒ.toString()) };\n          h('span', { text: 'function', attr });\n          Content.keyword({\n            text: $value.map((ƒ) => (ƒ.name ? ` ${ƒ.name}` : '')),\n            attr,\n          });\n          h('span', { text: '()', attr });\n        },\n\n        AsyncFunction({ store: $variantSource }) {\n          const $value = remap($variantSource, 'value');\n          const attr = { title: $value.map((ƒ) => ƒ.toString()) };\n          h('span', { text: 'async function', attr });\n          Content.keyword({\n            text: $value.map((ƒ) => (ƒ.name ? ` ${ƒ.name}` : '')),\n            attr,\n          });\n          h('span', { text: '()', attr });\n        },\n\n        Window({ store: $variantSource }) {\n          const $opened = remap($variantSource, 'opened');\n          h('span', () => {\n            spec({ data: { opened: $opened } });\n\n            h('span', {\n              text: 'Window {...',\n              fn() {\n                handler({ passive: true, stop: true, capture: true }, { click: foldableClicked });\n              },\n            });\n            spec({ text: '}' });\n          });\n        },\n\n        Date() {\n          Content.date({\n            text: $value.map((date) => date.toISOString?.()),\n            attr: { title: $value },\n          });\n        },\n\n        Array({ store: $variantSource }) {\n          const [$value, $opened] = remap($variantSource, ['value', 'opened']);\n          h('span', () => {\n            spec({ data: { opened: $opened } });\n\n            h('span', {\n              text: 'Array [',\n              data: { clickable: true },\n              fn() {\n                handler(\n                  { passive: true, stop: true, capture: true, prevent: true },\n                  { click: foldableClicked },\n                );\n              },\n            });\n\n            list($value, ({ store, key }) =>\n              ListItem(() =>\n                Value({\n                  store: combine({\n                    value: store,\n                    parentOpened: $opened,\n                    key: key.map(String),\n                  }),\n                }),\n              ),\n            );\n            spec({ text: ']' });\n          });\n        },\n\n        Arguments({ store: $variantSource }) {\n          const [$value, $opened] = remap($variantSource, ['value', 'opened']);\n          h('span', () => {\n            spec({ data: { opened: $opened } });\n\n            h('span', {\n              text: 'Arguments [',\n              fn() {\n                handler({ passive: true, stop: true, capture: true }, { click: foldableClicked });\n              },\n            });\n\n            list(\n              $value.map((args) => [...args] as unknown[]),\n              ({ store, key }) =>\n                ListItem(() =>\n                  Value({\n                    store: combine({\n                      value: store,\n                      parentOpened: $opened,\n                      key: key.map(String),\n                    }),\n                  }),\n                ),\n            );\n            spec({ text: ']' });\n          });\n        },\n        Set({ store: $variantSource }) {\n          const [$value, $opened] = remap($variantSource, ['value', 'opened']);\n          h('span', () => {\n            spec({ data: { opened: $opened } });\n\n            h('span', {\n              text: 'Set [',\n              fn() {\n                handler({ passive: true, stop: true, capture: true }, { click: foldableClicked });\n              },\n            });\n\n            list(\n              $value.map((set) => [...set.values()] as unknown[]),\n              ({ store, key }) =>\n                ListItem(() =>\n                  Value({\n                    store: combine({\n                      value: store,\n                      parentOpened: $opened,\n                      key: key.map(String),\n                    }),\n                  }),\n                ),\n            );\n            spec({ text: ']' });\n          });\n        },\n\n        Map({ store: $variantSource }) {\n          const [$value, $opened] = remap($variantSource, ['value', 'opened']);\n          h('span', () => {\n            spec({ data: { opened: $opened } });\n\n            h('span', () => {\n              spec({ text: 'Map {' });\n              handler({ passive: true, stop: true, capture: true }, { click: foldableClicked });\n            });\n\n            list(\n              $value.map((map) => [...map.entries()] as [string, unknown][]),\n              ({ store: $entryItem }) => {\n                const [$key, $value] = remap($entryItem, ['0', '1']);\n\n                ListItem(() => {\n                  Content.string({\n                    text: [`\"`, $key, `\"`],\n                    fn() {\n                      handler(\n                        { passive: true, stop: true, capture: true },\n                        { click: foldableClicked },\n                      );\n                    },\n                  });\n\n                  h('span', { text: ' => ' });\n                  Value({\n                    store: combine({\n                      value: $value,\n                      parentOpened: $opened,\n                      key: $key,\n                    }),\n                  });\n                });\n              },\n            );\n            spec({ text: '}' });\n          });\n        },\n\n        Error({ store: $variantSource }) {\n          const [$value, $opened] = remap($variantSource, ['value', 'opened']);\n\n          const [$name, $message] = remap($value as Store<Error>, ['name', 'message']);\n          const $stack = $value.map((error) => error.stack ?? null);\n\n          h('span', () => {\n            spec({ data: { opened: $opened } });\n\n            h('span', {\n              text: [$name, ' {'],\n              attr: { title: $value.map((error) => error.constructor.name) },\n              fn() {\n                handler({ passive: true, stop: true, capture: true }, { click: foldableClicked });\n              },\n            });\n\n            ListItem(() => {\n              spec({ data: { hidden: 'expanded' } });\n\n              Content.string({\n                text: [`\"message\"`],\n                fn() {\n                  handler({ passive: true, stop: true, capture: true }, { click: foldableClicked });\n                },\n              });\n              h('span', { text: ': ' });\n              Value({\n                store: combine({\n                  value: $message,\n                  parentOpened: $opened,\n                  key: 'message',\n                }),\n              });\n            });\n\n            ListItem(() => {\n              spec({ data: { hidden: 'folded' } });\n\n              Content.string({\n                text: [`\"stack\"`],\n                fn() {\n                  handler({ passive: true, stop: true, capture: true }, { click: foldableClicked });\n                },\n              });\n              h('span', { text: ': ' });\n\n              const store = combine({\n                value: $stack,\n                parentOpened: $opened,\n                key: 'stack',\n              });\n              Value({ store });\n            });\n\n            list(\n              $value.map((object) => [...Object.entries(object)]),\n              ({ store: $errorEntry }) => {\n                const [$key, $value] = remap($errorEntry, ['0', '1']);\n\n                ListItem(() => {\n                  Content.string({\n                    text: [`\"`, $key, `\"`],\n                    fn() {\n                      handler(\n                        { passive: true, stop: true, capture: true },\n                        { click: foldableClicked },\n                      );\n                    },\n                  });\n\n                  h('span', { text: ': ' });\n                  Value({\n                    store: combine({\n                      value: $value,\n                      parentOpened: $opened,\n                      key: $key,\n                    }),\n                  });\n                });\n              },\n            );\n          });\n\n          h('span', { text: '}' });\n        },\n        //#endregion\n        __({ store: $variantSource }) {\n          h('span', () => {\n            const [$type, $value, $opened] = remap($variantSource, ['type', 'value', 'opened']);\n            spec({ data: { opened: $opened } });\n\n            h('span', {\n              text: [$type, ' {'],\n              fn() {\n                handler({ passive: true, stop: true, capture: true }, { click: foldableClicked });\n              },\n            });\n\n            list(\n              $value.map((object) => [...Object.entries(object as object)]),\n              ({ store: $entry }) => {\n                const [$entryKey, $entryValue] = remap($entry, ['0', '1']);\n\n                ListItem(() => {\n                  Content.string({\n                    text: [`\"`, $entryKey, `\"`],\n                    fn() {\n                      handler(\n                        { passive: true, stop: true, capture: true },\n                        { click: foldableClicked },\n                      );\n                    },\n                  });\n\n                  h('span', { text: ': ' });\n                  Value({\n                    store: combine({\n                      value: $entryValue,\n                      parentOpened: $opened,\n                      key: $entryKey,\n                    }),\n                  });\n                });\n              },\n            );\n          });\n          h('span', { text: '}' });\n        },\n      },\n    });\n  });\n\n  const value = _.value;\n\n  const store = combine(\n    {\n      value,\n      parentOpened: createStore(true),\n      key: '',\n    },\n    (a) => a, // solving ts errors\n  );\n\n  Value({ store });\n}\n","import { Store } from 'effector';\nimport { Options } from './types.h';\n\nexport function trimDomain(source: Store<string>, options: Options): Store<string> {\n  if (options.trimDomain) {\n    return source.map((value) => value.replace(`${options.trimDomain!}/`, ''));\n  }\n  return source;\n}\n","import { Store, createStore, createEvent, combine, restore, Event } from 'effector';\nimport { list, h } from 'forest';\n\nimport { LogMeta, Kind, Options } from './types.h';\nimport {\n  NodeList,\n  Node,\n  NodeTitle,\n  NodeContent,\n  Panel,\n  Checkbox,\n  Input,\n  NodeButton,\n} from './components';\nimport { ObjectView } from './object-view';\nimport { createJsonSetting, createSetting } from './setting';\nimport { trimDomain } from './trim-domain';\n\nconst defaultKinds: Kind[] = ['event', 'store'];\nconst kindSetting = createJsonSetting<Kind[]>('filter-kinds', defaultKinds);\nconst textSetting = createSetting('filter-text', '');\n\nexport function Logs($logs: Store<LogMeta[]>, hotKeyClear: Event<void>, options: Options) {\n  const toggleKind = createEvent<Kind>();\n  const filterChanged = createEvent<string>();\n  const clearClicked = createEvent<MouseEvent>();\n\n  const $kinds = createStore(kindSetting.read());\n  const $filterText = restore(filterChanged, textSetting.read());\n\n  $kinds\n    .on(toggleKind, (exist, toggled) =>\n      exist.includes(toggled) ? exist.filter((i) => i !== toggled) : [...exist, toggled],\n    )\n    .watch(kindSetting.write);\n  $filterText.watch(textSetting.write);\n  $logs.on(clearClicked, () => []).on(hotKeyClear, () => []);\n\n  Panel(() => {\n    h('span', { text: 'Show: ' });\n    Checkbox({\n      title: 'Event',\n      attr: { checked: $kinds.map((list) => list.includes('event')) },\n      handler: { click: toggleKind.prepend(() => 'event') },\n    });\n    Checkbox({\n      title: 'Store',\n      attr: { checked: $kinds.map((list) => list.includes('store')) },\n      handler: { click: toggleKind.prepend(() => 'store') },\n    });\n    Checkbox({\n      title: 'Effect',\n      attr: { checked: $kinds.map((list) => list.includes('effect')) },\n      handler: { click: toggleKind.prepend(() => 'effect') },\n    });\n\n    h('span', { text: 'Filter:' });\n    Input({\n      attr: { value: $filterText },\n      handler: {\n        change: filterChanged.prepend((event) => (event.currentTarget as any)?.value ?? ''),\n      },\n    });\n\n    NodeButton({\n      text: 'Clear',\n      handler: { click: clearClicked },\n      attr: { title: 'Press CTRL+L to clear logs' },\n    });\n  });\n\n  NodeList(() => {\n    list({\n      source: $logs,\n      key: 'id',\n      fields: ['kind', 'name', 'payload', 'datetime'],\n      fn({ fields: [$kind, $rawName, $payload, $datetime] }) {\n        const $name = trimDomain($rawName, options);\n        const $kindMatched = combine($kind, $kinds, (current, visible) =>\n          visible.includes(current),\n        );\n        const $textMatched = combine($filterText, $name, (filter, name) => name.includes(filter));\n        const $visible = combine($kindMatched, $textMatched, (kind, text) => kind && text);\n\n        Node({\n          visible: $visible,\n          fn() {\n            const $iso = $datetime.map((date) => date.toISOString());\n            const $time = $datetime.map((date) => date.toLocaleTimeString());\n\n            NodeTitle({ text: [$time, ' ▸ '], attr: { title: $iso } });\n            NodeTitle({ text: $kind as Store<string> });\n            NodeTitle({ text: [' «', $name, '» '] });\n            NodeContent(() => ObjectView({ value: $payload }));\n          },\n        });\n      },\n    });\n  });\n}\n","import { Store } from 'effector';\nimport { list } from 'forest';\n\nimport { Options, StoreMeta } from './types.h';\nimport { Node, NodeContent, NodeList, NodeTitle } from './components';\nimport { ObjectView } from './object-view';\nimport { trimDomain } from './trim-domain';\n\nexport function Stores($stores: Store<Record<string, StoreMeta>>, options: Options) {\n  NodeList(() => {\n    const $list = $stores.map((map) =>\n      Object.entries(map).map(([name, meta]) => ({ name, ...meta })),\n    );\n\n    list({\n      source: $list,\n      key: 'name',\n      fields: ['name', 'value'],\n      fn({ fields: [$name, $value] }) {\n        Node(() => {\n          NodeTitle({ text: [trimDomain($name, options), ': '] });\n          NodeContent(() => {\n            ObjectView({ value: $value });\n          });\n        });\n      },\n    });\n  });\n}\n","import { Store } from 'effector';\nimport { list } from 'forest';\nimport { styled } from 'foliage';\n\nimport { EventMeta, Options } from './types.h';\nimport { Node, NodeContent, NodeList, NodeTitle } from './components';\nimport { ObjectView } from './object-view';\nimport { trimDomain } from './trim-domain';\n\nexport function Events($events: Store<Record<string, EventMeta>>, options: Options) {\n  NodeList(() => {\n    const $list = $events.map((map) =>\n      Object.entries(map).map(([name, meta]) => ({ name, ...meta })),\n    );\n\n    list({\n      source: $list,\n      key: 'name',\n      fields: ['name', 'history'],\n      fn({ fields: [$name, $history] }) {\n        Node(() => {\n          NodeTitle({ text: [trimDomain($name, options), ' '] });\n\n          HistoryLine(() => {\n            list($history, ({ store }) => {\n              NodeContent(() => {\n                ObjectView({ value: store });\n              });\n            });\n          });\n          // NodeButton({\n          //   text: 'Logs',\n          //   handler: { click: changeTab.prepend(() => 'logs') },\n          // });\n        });\n      },\n    });\n  });\n}\n\nconst HistoryLine = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n\n  :nth-child(2),\n  :nth-child(3),\n  :nth-child(4),\n  :nth-child(5) {\n    opacity: 0.8;\n  }\n\n  > :nth-child(n + 6) {\n    opacity: 0.5;\n  }\n\n  > :not(:first-child) {\n    margin-left: 0.5rem;\n  }\n`;\n","import { Store } from 'effector';\nimport { list, h, text } from 'forest';\n\nimport { EffectMeta, Options } from './types.h';\nimport { NodeList, Node, NodeTitle, NodeContent, Content, ListItem } from './components';\nimport { trimDomain } from './trim-domain';\n\nexport function Effects($effects: Store<Record<string, EffectMeta>>, options: Options) {\n  NodeList(() => {\n    const $list = $effects.map((map) =>\n      Object.entries(map).map(([sid, meta]) => ({ sid, ...meta })),\n    );\n\n    list({\n      source: $list,\n      key: 'sid',\n      fields: ['name', 'inFlight'],\n      fn({ fields: [$name, $inFlight] }) {\n        Node(() => {\n          NodeTitle({ text: [trimDomain($name, options), ' '] });\n          NodeContent(() => {\n            h('span', () => {\n              h('span', { text: [' {'] });\n              ListItem(() => {\n                Content.string({ text: `\"inFlight\": ` });\n                Content.number({ text: $inFlight });\n              });\n              text`}`;\n            });\n          });\n        });\n      },\n    });\n  });\n}\n","import { combine, createEvent, createStore, restore, sample, Store } from 'effector';\nimport { h, list } from 'forest';\nimport { styled } from 'foliage';\n\nimport { EffectMeta, EventMeta, FilesMap, Options, StoreMeta } from './types.h';\nimport { Column, NodeButton, Panel, Row, Select } from './components';\nimport { Stores } from './stores';\nimport { Events } from './events';\nimport { Effects } from './effects';\n\nexport function Files(source: {\n  $stores: Store<Record<string, StoreMeta>>;\n  $events: Store<Record<string, EventMeta>>;\n  $effects: Store<Record<string, EffectMeta>>;\n  $files: Store<FilesMap>;\n  options: Options;\n}) {\n  const $filesList = source.$files.map((files) =>\n    Object.keys(files).sort((a, b) => {\n      if (a < b) return -1;\n      if (a > b) return 1;\n      return 0;\n    }),\n  );\n  const $hasFiles = $filesList.map((files) => files.length > 0);\n\n  const fileSelected = createEvent<string>();\n  const fileCleanup = createEvent();\n\n  const $currentFile = createStore('');\n  const $hasSelectedFile = $currentFile.map((file) => file !== '');\n  const $noFileSelected = $hasSelectedFile.map((has) => !has);\n\n  $currentFile.on(fileSelected, (_, file) => file).on(fileCleanup, () => '');\n\n  Panel({\n    style: { flexDirection: 'column' },\n    visible: $hasFiles,\n    fn() {\n      Row({\n        visible: $hasSelectedFile,\n        fn() {\n          // eslint-disable-next-line @typescript-eslint/no-empty-function\n          NodeButton({\n            text: '◀',\n            handler: {\n              // eslint-disable-next-line @typescript-eslint/no-empty-function\n              click: fileCleanup.prepend(() => {}),\n            },\n          });\n          h('span', { text: 'File:' });\n          Select({\n            handler: {\n              change: fileSelected.prepend((e) => (e.currentTarget as HTMLSelectElement).value),\n            },\n            fn() {\n              list($filesList, ({ store }) => {\n                h('option', {\n                  attr: {\n                    value: store,\n                    selected: combine(store, $currentFile, (item, selected) => item === selected),\n                  },\n                  text: store,\n                });\n              });\n            },\n          });\n        },\n      });\n\n      Column({\n        visible: $noFileSelected,\n        fn() {\n          const filterChanged = createEvent<string>();\n          const $filter = restore(filterChanged, '');\n          const $filteredFiles = combine($filter, $filesList, (searchWord, list) =>\n            list.filter((file) => file.includes(searchWord)),\n          );\n\n          Title({ text: 'Please, select file from the list or type the name' });\n          const searchChanged = filterChanged.prepend(\n            (e: Event | KeyboardEvent) => (e.currentTarget as HTMLInputElement)?.value,\n          );\n          Column(() => {\n            Search({\n              attr: {\n                value: $filter,\n                placeholder: 'Type a part of the file name',\n              },\n              handler: { change: searchChanged, keydown: searchChanged as any },\n            });\n            FileList(() => {\n              list($filteredFiles, ({ store, key }) => {\n                const selectFile = createEvent<MouseEvent>();\n                sample({\n                  source: store,\n                  clock: selectFile,\n                  target: fileSelected,\n                });\n                FileItem({\n                  text: store,\n                  attr: { tabIndex: '0' },\n                  handler: { click: selectFile },\n                });\n              });\n            });\n          });\n        },\n      });\n    },\n  });\n\n  Panel({\n    visible: $hasSelectedFile,\n    fn() {\n      const $events = combine(\n        $currentFile,\n        source.$files,\n        source.$events,\n        (current, files, events) => {\n          if (current === '' || !files[current]) {\n            return {};\n          }\n\n          return Object.fromEntries(\n            files[current]\n              .filter(({ kind }) => kind === 'event')\n              .map(({ name }) => [name, events[name]]),\n          );\n        },\n      );\n      const $stores = combine(\n        $currentFile,\n        source.$files,\n        source.$stores,\n        (current, files, stores) => {\n          if (current === '' || !files[current]) {\n            return {};\n          }\n\n          return Object.fromEntries(\n            files[current]\n              .filter(({ kind }) => kind === 'store')\n              .map(({ name }) => [name, stores[name]]),\n          );\n        },\n      );\n      const $effects = combine(\n        $currentFile,\n        source.$files,\n        source.$effects,\n        (current, files, effects) => {\n          if (current === '' || !files[current]) {\n            return {};\n          }\n\n          return Object.fromEntries(\n            files[current]\n              .filter(({ kind }) => kind === 'effect')\n              .map(({ name }) => [name, effects[name]]),\n          );\n        },\n      );\n      Column(() => {\n        Events($events, source.options);\n        Stores($stores, source.options);\n        Effects($effects, source.options);\n      });\n    },\n  });\n}\n\nconst Title = styled.h4`\n  margin-top: 0;\n`;\n\nconst Search = styled.input`\n  display: flex;\n  flex-shrink: 0;\n  padding: 0 0.5rem;\n  border: 1px solid var(--border);\n  border-radius: 0.2rem;\n  margin-bottom: 1rem;\n  font-size: 1rem;\n  line-height: 2rem;\n\n  &:focus {\n    border-color: var(--primary);\n    outline: 0;\n    box-shadow: 0 0 0 2px var(--primary);\n  }\n`;\n\nconst FileList = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  margin: 0 0;\n  padding: 0 0;\n  overflow-x: auto;\n  align-items: stretch;\n\n  list-style-type: none;\n\n  :nth-child(2n) {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst FileItem = styled.button`\n  color: var(--text);\n  font-family: 'JetBrains Mono', hasklig, monofur, monospace;\n  font-size: 14px;\n  text-align: left;\n\n  border: var(--primary);\n  padding: 0.2rem 0.4rem;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: var(--primary-dark);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: inset 0 0 0 2px var(--primary-dark);\n  }\n`;\n","import { createStore, createEvent, Store, restore, sample, guard, combine } from 'effector';\n\nimport { StoreMeta, EventMeta, LogMeta, EffectMeta, FilesMap, Options } from './types.h';\nimport { Container, DragHandler } from './components';\nimport { Tabs } from './tabs';\nimport { Logs } from './logs';\nimport { Stores } from './stores';\nimport { Events } from './events';\nimport { Effects } from './effects';\nimport { DOMElement, node, spec, val } from 'forest';\nimport { createJsonSetting } from './setting';\nimport { Files } from './files';\n\nconst KEY_B = 2;\nconst KEY_L = 12;\n\nconst $isVisible = createStore(false);\nconst togglePressed = createEvent();\nconst clearPressed = createEvent();\nconst showInspector = createEvent();\n\nif (typeof document === 'object') {\n  document.addEventListener('keypress', (event) => {\n    if (event.ctrlKey) {\n      if (event.key === 'l' || event.keyCode === KEY_L) {\n        clearPressed();\n      }\n      if (event.key === 'b' || event.keyCode === KEY_B) {\n        togglePressed();\n      }\n    }\n  });\n}\n\nfunction dragdrop() {\n  const $inDrag = createStore(false);\n  const mouseDown = createEvent<MouseEvent>();\n  const mouseMove = createEvent<MouseEvent>();\n  const mouseUp = createEvent<MouseEvent>();\n\n  $inDrag.on(mouseDown, () => true).on(mouseUp, () => false);\n\n  spec({ handler: { mousedown: mouseDown } });\n\n  mouseDown.watch(() => {\n    if (document) {\n      document.addEventListener('mousemove', mouseMove);\n      document.addEventListener('mouseup', mouseUp);\n    }\n  });\n\n  mouseUp.watch(() => {\n    document.removeEventListener('mousemove', mouseMove);\n    document.removeEventListener('mouseup', mouseUp);\n  });\n\n  return { mouseMove, mouseDown, mouseUp, $inDrag };\n}\n\nfunction ref() {\n  const setRef = createEvent<DOMElement>();\n  const $ref = restore(setRef, null);\n  node(setRef);\n\n  return $ref as Store<DOMElement>;\n}\n\n$isVisible.on(togglePressed, (visible) => !visible).on(showInspector, () => true);\n\nexport function Root(\n  $stores: Store<Record<string, StoreMeta>>,\n  $events: Store<Record<string, EventMeta>>,\n  $effects: Store<Record<string, EffectMeta>>,\n  $logs: Store<LogMeta[]>,\n  $files: Store<FilesMap>,\n  options: Options = {},\n) {\n  if (options.visible) {\n    showInspector();\n  }\n\n  console.info(\n    '%c[effector-inspector] %cPress %cCTRL+B %cto open Inspector',\n    'color: gray; font-size: 1rem;',\n    'color: currentColor; font-size: 1rem;',\n    'color: deepskyblue; font-family: monospace; font-size: 1rem;',\n    'color: currentColor; font-size: 1rem;',\n  );\n\n  Container({\n    visible: $isVisible,\n    fn() {\n      const $blockRef = ref();\n\n      const widthSetting = createJsonSetting('width', 736);\n      const $width = createStore(widthSetting.read());\n      spec({ style: { width: val`${$width}px` } });\n\n      DragHandler({\n        text: '∙∙∙',\n        fn() {\n          const { mouseMove, mouseDown, mouseUp, $inDrag } = dragdrop();\n\n          spec({ data: { active: $inDrag } });\n\n          const $shift = createStore(0);\n\n          const dragStart = sample($blockRef, mouseDown, (block, event) => ({ block, event }));\n          const dragMove = sample($blockRef, mouseMove, (block, event) => {\n            const rect = block.getBoundingClientRect();\n            return rect.right - event.clientX;\n          });\n\n          const correctWidth = sample($shift, dragMove, (shift, width) => width - shift);\n\n          $width.on(correctWidth, (_, width) => width);\n\n          $shift.on(dragStart, (_, { block, event }) =>\n            block ? block.getBoundingClientRect().left - event.clientX : 0,\n          );\n\n          sample($width, mouseUp, widthSetting.save);\n        },\n      });\n\n      Tabs({\n        files: {\n          title: 'Files',\n          fn() {\n            Files({\n              $stores,\n              $events,\n              $effects,\n              $files,\n              options,\n            });\n          },\n        },\n        stores: {\n          title: 'Stores',\n          fn() {\n            Stores($stores, options);\n          },\n        },\n        effects: {\n          title: 'Effects',\n          fn() {\n            Effects($effects, options);\n          },\n        },\n        events: {\n          title: 'Events',\n          fn() {\n            Events($events, options);\n          },\n        },\n        logs: {\n          title: 'Logs',\n          fn() {\n            Logs($logs, clearPressed, options);\n          },\n        },\n      });\n    },\n  });\n}\n","import {\n  CompositeName,\n  createEffect,\n  createEvent,\n  createStore,\n  Effect,\n  Event,\n  forward,\n  Store,\n  Unit,\n} from 'effector';\nimport { using } from 'forest';\nimport { StyledRoot } from 'foliage';\n\nimport {\n  EffectCreator,\n  EffectMeta,\n  EventCreator,\n  EventMeta,\n  FilesMap,\n  Inspector,\n  Kind,\n  LogMeta,\n  Options,\n  StoreCreator,\n  StoreMeta,\n} from './types.h';\nimport { Root } from './view';\n\nconst $files = createStore<FilesMap>({});\n\nconst storeAdd = createEvent<StoreCreator>();\nconst storeUpdated = createEvent<{ name: string; value: any }>();\nconst $stores = createStore<Record<string, StoreMeta>>({});\n\nconst eventAdd = createEvent<EventCreator>();\nconst eventTriggered = createEvent<{ name: string; params: any }>();\nconst $events = createStore<Record<string, EventMeta>>({});\n\nconst effectAdd = createEvent<EffectCreator>();\nconst effectTriggered = createEvent<{ sid: string }>();\nconst $effects = createStore<Record<string, EffectMeta>>({});\n\nconst $logs = createStore<LogMeta[]>([]);\n\n$stores\n  .on(storeAdd, (map, payload) => ({\n    ...map,\n    [payload.name]: {\n      value: payload.store.getState(),\n      mapped: payload.mapped,\n    },\n  }))\n  .on(storeUpdated, (map, { name, value }) => {\n    // should not change the order of fields\n    map[name] = { ...map[name], value };\n    return { ...map };\n  });\n\n$files.on(storeAdd, (map, { name, file }) => {\n  if (file) {\n    if (map[file]) {\n      const list = map[file];\n      return { ...map, [file]: [...list, { kind: 'store', name }] };\n    }\n\n    return { ...map, [file]: [{ kind: 'store', name }] };\n  }\n\n  return map;\n});\n\n$events\n  .on(eventAdd, (map, payload) => ({\n    ...map,\n    [payload.name]: {\n      mapped: payload.mapped,\n      history: [],\n    },\n  }))\n  .on(eventTriggered, (map, { name, params }) => {\n    // should not change the order of fields\n\n    map[name] = {\n      ...map[name],\n      history: [JSON.parse(JSON.stringify(params)), ...map[name].history],\n    };\n    return { ...map };\n  });\n\n$files.on(eventAdd, (map, { name, file }) => {\n  if (file) {\n    if (map[file]) {\n      const list = map[file];\n      return { ...map, [file]: [...list, { kind: 'event', name }] };\n    }\n\n    return { ...map, [file]: [{ kind: 'event', name }] };\n  }\n\n  return map;\n});\n\n$effects\n  .on(effectAdd, (map, effect) => ({\n    ...map,\n    [effect.sid]: {\n      name: effect.name,\n      effect: effect.effect,\n      inFlight: effect.effect.inFlight.getState(),\n    },\n  }))\n  .on(effectTriggered, (map, { sid }) => {\n    const fx = map[sid];\n    map[sid] = {\n      ...fx,\n      inFlight: fx.effect.inFlight.getState(),\n    };\n    return { ...map };\n  });\n\n$files.on(effectAdd, (map, { name, file }) => {\n  if (file) {\n    if (map[file]) {\n      const list = map[file];\n      return { ...map, [file]: [...list, { kind: 'event', name }] };\n    }\n\n    return { ...map, [file]: [{ kind: 'event', name }] };\n  }\n\n  return map;\n});\n\nlet id = 1e3;\nconst nextId = () => (++id).toString(36);\n\ntype CreateRecord = Pick<LogMeta, 'name' | 'kind' | 'payload'>;\n\nconst createRecordFx = createEffect<CreateRecord, LogMeta>({\n  handler({ name, kind, payload }) {\n    return {\n      id: nextId(),\n      kind,\n      name,\n      payload,\n      datetime: new Date(),\n    };\n  },\n});\n\nforward({\n  from: eventTriggered,\n  to: createRecordFx.prepend(({ name, params }) => ({\n    kind: 'event',\n    name,\n    payload: params,\n  })),\n});\n\nforward({\n  from: storeUpdated,\n  to: createRecordFx.prepend(({ name, value }) => ({\n    kind: 'store',\n    name,\n    payload: value,\n  })),\n});\n\n$logs.on(createRecordFx.doneData, (logs, record) => [record, ...logs]);\n\nexport function createInspector(options: Options = {}): Inspector | undefined {\n  const root = typeof document === 'object' && document.createElement('div');\n  if (!root) return undefined;\n  root.classList.add('effector-inspector');\n\n  document.body.append(root);\n\n  using(root, () => Root($stores, $events, $effects, $logs, $files, options));\n  using(root, StyledRoot);\n\n  return { root };\n}\n\nfunction getLocFile(unit: Unit<any>): string | undefined {\n  return (unit as any).defaultConfig?.loc?.file;\n}\n\nexport function addStore(\n  store: Store<any>,\n  options: { mapped?: boolean; name?: string } = {},\n): void {\n  const name = options.name || createName(store);\n\n  storeAdd({\n    store,\n    name,\n    mapped: options.mapped || false,\n    file: getLocFile(store),\n  });\n\n  forward({\n    from: store.updates.map((value) => ({ name, value })),\n    to: storeUpdated,\n  });\n}\n\nexport function addEvent(\n  event: Event<any>,\n  options: { mapped?: boolean; name?: string } = {},\n): void {\n  const name = options.name || createName(event);\n\n  eventAdd({\n    event,\n    name,\n    mapped: options.mapped || false,\n    file: getLocFile(event),\n  });\n\n  forward({\n    from: event.map((params) => ({\n      name,\n      params,\n    })),\n    to: eventTriggered,\n  });\n}\n\nexport function addEffect(\n  effect: Effect<any, any, any>,\n  options: { attached?: boolean; sid?: string } = {},\n) {\n  const name = createName(effect);\n  const sid = options.sid || effect.sid || name;\n\n  effectAdd({\n    effect,\n    name,\n    sid,\n    attached: options.attached ?? false,\n    file: getLocFile(effect),\n  });\n\n  forward({\n    from: [effect, effect.finally],\n    to: effectTriggered.prepend(() => ({ sid })),\n  });\n\n  const effectRun = effect.map((params) => ({\n    kind: 'effect' as Kind,\n    name,\n    payload: params,\n  }));\n\n  const effectDone = effect.done.map((params) => ({\n    kind: 'effect' as Kind,\n    name: name + '.done',\n    payload: params,\n  }));\n\n  const effectFail = effect.fail.map((params) => ({\n    kind: 'effect' as Kind,\n    name: name + '.fail',\n    payload: params,\n  }));\n\n  forward({\n    from: [effectRun, effectDone, effectFail],\n    to: createRecordFx,\n  });\n}\n\nfunction createName<T extends { compositeName: CompositeName }>(unit: T): string {\n  return unit.compositeName.path.join('/');\n}\n","import { createStore } from 'effector';\n\nexport const $fn1 = createStore(function demo() {\n  /* */\n});\nexport const $fn2 = createStore(() => 5);\nconst op = (a: number, b: number) => a + b;\nexport const $fn3 = createStore(op);\nexport const $setOfFns = createStore({\n  ref: new Set([\n    function demo() {\n      return 0;\n    },\n    () => 5,\n    (a: number, b: number) => a + b,\n  ]),\n});\nexport const $args = createStore(\n  (function(a, b, c, d) {\n    return arguments; // eslint-disable-line prefer-rest-params\n  })(1, 5, {}, () => 0),\n);\nexport const $error = createStore(new Error('random'));\nexport const $errorType = createStore(new TypeError('random'));\n\nclass CustomError extends Error {\n  demo = 123;\n  hello = '';\n  name = 'Custom';\n\n  constructor(message: string) {\n    super(message);\n    this.hello = message;\n  }\n}\n\nexport const $errorCustom = createStore(new CustomError('message'));\nexport const $window = createStore(window);\n","import { createDomain, createEffect, createEvent, createStore } from 'effector';\nimport * as inspector from '../src';\nimport {\n  $args,\n  $error,\n  $errorCustom,\n  $errorType,\n  $fn1,\n  $fn2,\n  $fn3,\n  $setOfFns,\n  $window,\n} from './another';\n\nconst event = createEvent<{ count: number }>();\nconst just = createEvent<string>();\n\nconst $foo = createStore('hello');\nconst $bar = $foo.map((foo) => foo.length);\n\nconst $deep = createStore({\n  demo: { baz: 1, baf: 'hello', naf: false },\n});\n\nconst veryRootDomain = createDomain();\n\nconst anotherInsideDeepDarkDomainForRoot = veryRootDomain.createDomain();\n\nconst $number = anotherInsideDeepDarkDomainForRoot.createStore(0);\nconst $numberInf = createStore(Infinity);\nconst $numberNot = createStore(NaN);\nconst $bigint = createStore(BigInt(498));\nconst $bool = createStore(false);\nconst $bool2 = createStore(true);\nconst $null = createStore(null);\nconst $date = createStore(new Date());\nconst $symbol = createStore(Symbol.asyncIterator);\n\nconst domain = createDomain();\n\nconst $example = domain.createStore(100);\n\nconst $set = createStore(new Set(['a', 2, false, null, undefined, new Date()]));\n\nconst $setWrapped = createStore({\n  ref: new Set(['a', 2, false, null, undefined, new Date()]),\n});\n\nconst $map = createStore(\n  new Map<string, any>([\n    ['a', 2],\n    ['b', false],\n  ]),\n);\n\nconst $mapWrapped = createStore({\n  ref: new Map<string, any>([\n    ['a', 2],\n    ['b', false],\n  ]),\n});\n\nconst $setInMap = createStore(\n  new Map([['hello', new Set<any>(['a', 2, false, null, undefined])]]),\n);\n\nconst $mapInSet = createStore(\n  new Set([\n    new Map([['hello', new Set<any>(['b', 12])]]),\n  ]),\n);\n\nconst $array = createStore([\n  false,\n  5,\n  900e50,\n  'hello',\n  BigInt(720587) * BigInt(44),\n  new Map([['hello', new Set<any>(['a', 2, false, null, undefined])]]),\n  new Set([\n    new Map([['hello', new Set<any>(['b', 12])]]),\n  ]),\n  {\n    ref: new Set(['a', 2, false, null, undefined, new Date()]),\n  },\n]);\n\nconst $uint = createStore(new Uint32Array([0, 5, 1, 2]));\nconst $weakSet = createStore(new WeakSet([{ a: 1 }, { b: 2 }, { c: 3 }]));\n\nconst $iterators = createStore([\n  new Set(['a', 2, false, null, undefined, new Date()]).entries(),\n  ['a', 2, false, null, undefined, new Date()].entries(),\n  new Map<string, any>([\n    ['a', 2],\n    ['b', false],\n  ]).entries(),\n]);\n\nconst $regexp1 = createStore(/[\\w\\s]+/gi);\nconst $regexp2 = createStore(new RegExp('[\\\\w\\\\s]+', 'gi'));\n\nconst $promise = createStore(new Promise((resolve) => setTimeout(resolve, 5000)));\nconst $promiseResolved = createStore(Promise.resolve(1));\nconst $promiseRejected = createStore(Promise.reject(1));\n\nconst exampleFx = createEffect({\n  handler() {\n    return new Promise((resolve) => setTimeout(resolve, 1000));\n  },\n});\n\ninspector.addEffect(exampleFx);\ninspector.addEvent(event);\ninspector.addEvent(just);\ninspector.addStore($args);\ninspector.addStore($array);\ninspector.addStore($bar, { mapped: true });\ninspector.addStore($bigint);\ninspector.addStore($bool);\ninspector.addStore($bool2);\ninspector.addStore($date);\ninspector.addStore($deep);\ninspector.addStore($error);\ninspector.addStore($errorCustom);\ninspector.addStore($errorType);\ninspector.addStore($example);\ninspector.addStore($fn1);\ninspector.addStore($fn2);\ninspector.addStore($fn3);\ninspector.addStore($foo);\ninspector.addStore($iterators);\ninspector.addStore($map);\ninspector.addStore($mapInSet);\ninspector.addStore($mapWrapped);\ninspector.addStore($null);\ninspector.addStore($number);\ninspector.addStore($numberInf);\ninspector.addStore($numberNot);\ninspector.addStore($promise);\ninspector.addStore($promiseRejected);\ninspector.addStore($promiseResolved);\ninspector.addStore($regexp1);\ninspector.addStore($regexp2);\ninspector.addStore($set);\ninspector.addStore($setInMap);\ninspector.addStore($setOfFns);\ninspector.addStore($setWrapped);\ninspector.addStore($symbol);\ninspector.addStore($uint);\ninspector.addStore($weakSet);\ninspector.addStore($window);\n\ninspector.createInspector({ visible: true });\nlet incrementor = 0;\nsetInterval(() => event({ count: incrementor++ }), 2000);\nsetTimeout(() => just('hello'), 0);\nsetInterval(() => {\n  exampleFx();\n}, 1500);\n\n$number.on(event, (counter) => counter + 1);\n$date.on(event, () => new Date());\n$foo.on(just, (s, n) => s + n);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}