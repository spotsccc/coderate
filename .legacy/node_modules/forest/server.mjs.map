{"version":3,"file":"server.mjs","sources":["forest/bindings.ts","forest/server/customDocument.ts","forest/server/index.ts"],"sourcesContent":["import type {DOMElement, StaticOperationDef} from './index.h'\n\nconst defMap = {\n  attr: applyAttr,\n  data: applyDataAttr,\n  style: applyStyle,\n  styleVar: applyStyleVar,\n}\n\nexport function escapeTag(value: string) {\n  value = String(value)\n  switch (value) {\n    case '__proto__':\n    case '__defineGetter__':\n    case '__defineSetter__':\n    case 'constructor':\n    case 'prototype':\n    case 'hasOwnProperty':\n    case 'toString':\n    case 'valueOf':\n    case 'setProperty':\n    case 'removeProperty':\n      return 'forbidden'\n    default:\n      return value.replace(/[^a-zA-Z0-9\\-_]/g, '')\n  }\n}\n\nexport function applyStaticOps(\n  element: DOMElement,\n  defs: StaticOperationDef[],\n) {\n  for (let i = 0; i < defs.length; i++) {\n    const {type, field, value} = defs[i]\n    defMap[type](element, field, value)\n  }\n}\n\nexport function isFalse(val: any) {\n  return (\n    val !== '' &&\n    val !== 0 &&\n    val !== '0' &&\n    (val === false || val === undefined || val === null)\n  )\n}\n\nexport function applyStyleVar(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    element.style.removeProperty(`--${field}`)\n  } else {\n    element.style.setProperty(`--${field}`, `${value}`)\n  }\n}\n\nexport function applyStyle(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    delete element.style[field as any]\n  } else {\n    element.style[field as any] = `${value}`\n  }\n}\n\nexport function applyDataAttr(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    delete element.dataset[field]\n  } else {\n    element.dataset[field] = `${value}`\n  }\n}\nexport function applyAttr(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    switch (field) {\n      case 'value':\n        //@ts-expect-error\n        delete element.value\n        break\n      case 'checked':\n        //@ts-expect-error\n        element.checked = false\n        break\n      case 'spellcheck':\n        if (value === false) {\n          element.setAttribute('spellcheck', 'false')\n          return\n        }\n        break\n    }\n    element.removeAttribute(field)\n  } else {\n    switch (field) {\n      case 'value':\n        //@ts-expect-error\n        element.value = `${value}`\n        break\n      case 'checked':\n        //@ts-expect-error\n        element.checked = `${value}`\n        break\n    }\n    element.setAttribute(field, `${value}`)\n  }\n}\n\nexport function applyText(textNode: Text, text: string | number | boolean) {\n  textNode.replaceData(0, (textNode.textContent || '').length, String(text))\n}\n","import type {Env} from '../index.h'\nimport {escapeTag} from '../bindings'\nconst invalidValue = /[\\\\<>\"]/g\nconst dataValue = /[A-Z]/g\nconst escaped = /[&<>'\"]/g\nconst scriptEscape = /<\\/(\\s|\\\\n)*script/gim\n\nfunction setNextSibling(target: DOMNode, sibling: DOMNode | null) {\n  target.sibling.right = sibling\n  target.nextSibling = sibling\n}\n\nclass DOMNode {\n  child: {\n    first: DOMNode | null\n    last: DOMNode | null\n  } = {\n    first: null,\n    last: null,\n  }\n  sibling: {\n    left: DOMNode | null\n    right: DOMNode | null\n  } = {\n    left: null,\n    right: null,\n  }\n  parent: DOMNode | null = null\n  tagName = ''\n  nodeName = ''\n  namespaceURI = 'http://www.w3.org/1999/xhtml' as const\n  dataset = Object.create(null)\n  style = new CSSStyle()\n  value?: string\n  firstChild: DOMNode | null = null\n  nextSibling: DOMNode | null = null\n  isFragment = true\n  attributes: {[attributeName: string]: string} = Object.create(null)\n  textContent: string | null = null\n  __STATIC__ = true\n  cloneNode() {\n    const result = new DOMNode()\n    result.tagName = this.tagName\n    result.nodeName = this.nodeName\n    result.namespaceURI = this.namespaceURI\n    Object.assign(result.dataset, this.dataset)\n    Object.assign(result.style, this.style)\n    result.value = this.value\n    result.isFragment = this.isFragment\n    Object.assign(result.attributes, this.attributes)\n    result.textContent = this.textContent\n    return result\n  }\n  after(node: DOMNode): void {\n    if (this.sibling.right === node) return\n    if (node.parent) node.remove()\n    if (!this.parent) return\n    if (this.sibling.right) {\n      this.sibling.right.sibling.left = node\n      setNextSibling(node, this.sibling.right)\n    } else {\n      this.parent.child.last = node\n    }\n    setNextSibling(this, node)\n    node.sibling.left = this\n    node.parent = this.parent\n  }\n  prepend(node: DOMNode): void {\n    if (node.parent) node.remove()\n    if (!this.child.last) {\n      this.child.first = node\n      this.child.last = node\n    } else {\n      this.child.first!.sibling.left = node\n      setNextSibling(node, this.child.first)\n    }\n    this.child.first = node\n    this.firstChild = node\n    node.parent = this\n  }\n  remove(): void {\n    if (!this.parent) return\n    const {parent} = this\n    if (parent.child.first === this && parent.child.last === this) {\n      parent.firstChild = null\n      parent.child.first = null\n      parent.child.last = null\n    } else if (parent.child.first === this) {\n      parent.child.first = this.sibling.right\n      parent.firstChild = this.sibling.right\n      this.sibling.right!.sibling.left = null\n    } else if (parent.child.last === this) {\n      parent.child.last = this.sibling.left\n      setNextSibling(this.sibling.left!, null)\n    } else {\n      this.sibling.right!.sibling.left = this.sibling.left\n      setNextSibling(this.sibling.left!, this.sibling.right)\n    }\n    this.sibling.left = null\n    setNextSibling(this, null)\n    this.parent = null\n  }\n  addEventListener(key: string, fn: Function, options: object): void {}\n  removeEventListener(key: string, fn: Function, options: object): void {}\n  setAttribute(property: string, value: string): void {\n    this.attributes[escapeTag(property)] = escapeTagValue(value)\n  }\n  removeAttribute(property: string): void {\n    delete this.attributes[escapeTag(property)]\n  }\n  replaceWith(node: DOMNode): void {\n    if (!this.parent) return\n    const {parent} = this\n    if (node.parent) node.remove()\n    if (parent.child.first === this && parent.child.last === this) {\n      parent.firstChild = node\n      parent.child.first = node\n      parent.child.last = node\n    } else if (parent.child.first === this) {\n      parent.child.first = node\n      parent.firstChild = node\n      this.sibling.right!.sibling.left = node\n    } else if (parent.child.last === this) {\n      parent.child.last = node\n      setNextSibling(this.sibling.left!, node)\n    } else {\n      this.sibling.right!.sibling.left = node\n      setNextSibling(this.sibling.left!, node)\n    }\n    node.sibling.left = this.sibling.left\n    setNextSibling(node, this.sibling.right)\n    node.parent = parent\n    this.sibling.left = null\n    setNextSibling(this, null)\n    this.parent = null\n  }\n  replaceData(offset: number, length: number, content: string) {\n    if (typeof this.textContent !== 'string') return\n    this.textContent = `${this.textContent.slice(\n      0,\n      offset,\n    )}${content}${this.textContent.slice(offset + length)}`\n  }\n  splitText(offset: number) {\n    if (typeof this.textContent !== 'string') return null\n    const node = new DOMNode()\n    node.nodeName = '#text'\n    node.textContent = this.textContent.slice(offset)\n    this.textContent = this.textContent.slice(0, offset)\n    this.after(node)\n    return node\n  }\n}\nclass CSSStyle {\n  setProperty(property: string, value: string): void {\n    //@ts-expect-error\n    this[escapeTag(property)] = escapeTagValue(value)\n  }\n  removeProperty(property: string): void {\n    //@ts-expect-error\n    delete this[escapeTag(property)]\n  }\n}\nfunction convertDataChar(char: string) {\n  return `-${char.toLowerCase()}`\n}\nfunction convertDataAttr(value: string) {\n  return escapeTag(value).replace(dataValue, convertDataChar)\n}\nfunction escapeContentHandler(char: string) {\n  switch (char) {\n    case '&':\n      return '&amp;'\n    case '<':\n      return '&lt;'\n    case '>':\n      return '&gt;'\n    case '\"':\n      return '&quot;'\n    case \"'\":\n      return '&#39;'\n    default:\n      return char\n  }\n}\n\nfunction escapeTagValue(value: string) {\n  return String(value).replace(invalidValue, '')\n}\nfunction escapeContent(value: string) {\n  return String(value).replace(escaped, escapeContentHandler)\n}\nfunction escapeScriptContent(value: string) {\n  return value.replace(scriptEscape, '<\\\\/script')\n}\n\nexport function createEnv(): Env {\n  const document = {\n    createTextNode(text: string) {\n      const node = new DOMNode()\n      node.textContent = String(text)\n      node.nodeName = '#text'\n      return node\n    },\n    createElement(tag: string) {\n      const node = new DOMNode()\n      node.tagName = escapeTag(tag)\n      node.isFragment = false\n      return node\n    },\n    createElementNS(\n      namespace: 'http://www.w3.org/1999/xhtml' | 'http://www.w3.org/2000/svg',\n      tag: string,\n    ) {\n      switch (namespace) {\n        case 'http://www.w3.org/1999/xhtml':\n        case 'http://www.w3.org/2000/svg':\n          break\n        default:\n          namespace = 'http://www.w3.org/1999/xhtml'\n      }\n      const node = new DOMNode()\n      node.tagName = escapeTag(tag)\n      //@ts-expect-error\n      node.namespaceURI = namespace\n      node.isFragment = false\n      return node\n    },\n    createDocumentFragment() {\n      return new DOMNode()\n    },\n  }\n  return {\n    //@ts-expect-error\n    document,\n  }\n}\n\nfunction renderPart(node: DOMNode, parts: string[]) {\n  if (node.textContent !== null) {\n    let textContent = node.textContent\n    if (!node.parent || node.parent.tagName !== 'script') {\n      textContent = escapeContent(textContent)\n    }\n    parts.push(textContent)\n  }\n  if (node.isFragment) {\n    let child = node.firstChild\n    while (child) {\n      renderPart(child, parts)\n      child = child.sibling.right\n    }\n    return\n  }\n  parts.push('<', node.tagName)\n  for (const key in node.attributes) {\n    parts.push(' ', key, '=', '\"', escapeTagValue(node.attributes[key]), '\"')\n  }\n  for (const key in node.dataset) {\n    parts.push(\n      ' ',\n      'data-',\n      convertDataAttr(key),\n      '=',\n      '\"',\n      escapeTagValue(node.dataset[key]),\n      '\"',\n    )\n  }\n  const styles = [] as string[]\n  for (const property in node.style) {\n    //@ts-expect-error\n    const value = node.style[property]\n    if (property.startsWith('--')) {\n      styles.push(`${property}: ${value}`)\n    } else {\n      let dashedProperty = property.replace(\n        /[A-Z]/g,\n        char => `-${char.toLowerCase()}`,\n      )\n      if (property.startsWith('webkit') || property.startsWith('moz')) {\n        dashedProperty = `-${dashedProperty}`\n      }\n      styles.push(`${dashedProperty}: ${value}`)\n    }\n  }\n  if (styles.length > 0) {\n    parts.push(' ', 'style', '=', '\"', styles.join(';'), '\"')\n  }\n  parts.push('>')\n  if (nonClosedTags.includes(node.tagName)) return\n  const childParts: string[] = node.tagName === 'script' ? [] : parts\n  let child: DOMNode | null = node.firstChild\n  while (child) {\n    renderPart(child, childParts)\n    child = child.sibling.right\n  }\n  if (node.tagName === 'script') {\n    const rawScript = childParts.join('')\n    parts.push(escapeScriptContent(rawScript))\n  }\n  parts.push('</', node.tagName, '>')\n}\n\nconst nonClosedTags = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n]\n\nexport function render(node: DOMNode) {\n  const parts = [] as string[]\n  renderPart(node, parts)\n  const content = parts.join('')\n  if (detectFullPageRender(node)) {\n    return `<!DOCTYPE html>${content}`\n  }\n  return content\n}\n\nfunction detectFullPageRender(node: DOMNode): boolean {\n  if (node.tagName === 'html') return true\n  if (node.isFragment && node.textContent === null) {\n    const firstChild = node.firstChild\n    if (firstChild && node.child.last === firstChild) {\n      return detectFullPageRender(firstChild)\n    }\n  }\n  return false\n}\n","import type {Scope} from '../../effector/unit.h'\nimport {render, createEnv} from './customDocument'\nimport {using} from 'forest'\n\nexport function renderStatic(fn: () => void): Promise<string>\nexport function renderStatic(config: {\n  scope?: Scope\n  fn: () => void\n}): Promise<string>\nexport function renderStatic(fn: any) {\n  const env = createEnv()\n  const root = env.document.createDocumentFragment() as any\n  let scope: Scope\n  if (typeof fn === 'object' && fn !== null) {\n    scope = fn.scope\n    fn = fn.fn\n  }\n  return new Promise<string>(rs => {\n    //@ts-expect-error\n    using(root, {\n      fn,\n      env,\n      scope,\n      onComplete() {\n        rs(render(root))\n      },\n    })\n  })\n}\n"],"names":["escapeTag","value","String","replace","setNextSibling","target","sibling","right","nextSibling","convertDataChar","char","toLowerCase","escapeContentHandler","escapeTagValue","invalidValue","renderPart","node","parts","textContent","parent","tagName","escaped","push","isFragment","child","firstChild","key","attributes","dataset","dataValue","styles","property","style","startsWith","dashedProperty","length","join","nonClosedTags","includes","childParts","rawScript","scriptEscape","render","content","detectFullPageRender","last","renderStatic","fn","scope","env","document","createTextNode","text","DOMNode","nodeName","createElement","tag","createElementNS","namespace","namespaceURI","createDocumentFragment","root","Promise","rs","using","onComplete","first","left","Object","create","CSSStyle","__STATIC__","cloneNode","result","this","assign","after","remove","prepend","addEventListener","options","removeEventListener","setAttribute","removeAttribute","replaceWith","replaceData","offset","slice","splitText","setProperty","removeProperty"],"mappings":"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"}